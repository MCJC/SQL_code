/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/    
/*** --------------                                      files involved in: Restrictions Data processing                                      -------------- ***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _001_lt__NatLocTOOL_____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 001    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***           >>>>>         This script creates a lookup table of countries and the locality used for coding events                         <<<<<           ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___00a]
AS
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT *
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*** Set of data at country/province level *********************************************************************************************************************/
SELECT
           distinct
          [Nation_fk]     = N.[Nation_pk]
      ,   [Locality_fk]   = L.[Locality_pk]
      , L.[Locality]
  FROM [forum].[dbo].[Pew_Q&A]               Q
      ,[forum].[dbo].[Pew_Locality]          L
      ,[forum].[dbo].[Pew_Nation]            N
      ,[forum].[dbo].[Pew_Locality_Answer]   KL
WHERE Q.[Answer_fk]   = KL.[Answer_fk]
  AND L.[Locality_pk] = KL.[Locality_fk]
                                /* No need of change in order to keep consistency of 2012: 
                                   Data by Province currently belonging to South Sudan
                                   should considered data for Sudan before 2010             */
  AND N.[Nation_pk]   =  L.[Nation_fk]
                                /* In order to avoid changing the final set,
                                   Data previously used for Northern Cyprus
                                   should be excluded                                       */
                                /* Although we have REAL data by province for North Korea,
                                   we will not use them in this analysis                    */
                                /* Pull only data on Restrictions                           */
  AND Q.[Pew_Data_Collection] = 'Global Restriction on Religion Study'
  AND Q.[Question_Year] = 2012
                                /* redundant filters                                        */
  AND
    (    Q.[Question_abbreviation_std]   LIKE 'GRI_19_[b-f]'
      OR Q.[Question_abbreviation_std]   LIKE 'SHI_0[1, 4, 5]_[b-f]'   )
/******************************************************************************************************** Set of data at country/province level ****************/
) AS CPL
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/










/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___00a____NationLocalityTOOL]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___00a____NationLocalityTOOL]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___00a____NationLocalityTOOL]
            FROM                 [dbo].[vr___00a]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___00a____NationLocalityTOOL]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _002_lt__QstRelTOOL_____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 002    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>               This script creates a lookup table of questions on specific religion groups including groups' ID                      <<<<<     ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/**************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___00b]
AS
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT *
FROM
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*** Set of data at country/religious group level *************************************************************************************************/
SELECT
           DISTINCT
           Religion_fk = G.[Religion_group_pk]
      ,    Religion    = G.[Pew_religion]
      ,    QA_std      = Q.[Question_abbreviation_std]
      ,    QW_std      = Q.[Question_short_wording_std]
  FROM [forum].[dbo].[Pew_Q&A]                      Q
      ,[forum].[dbo].[Pew_Nation]                   N
      ,[forum].[dbo].[Pew_Religion_Group]           G
      ,[forum].[dbo].[Pew_Nation_Religion_Answer]   KR
WHERE Q.[Answer_fk]           = KR.[Answer_fk]
  AND KR.[Religion_group_fk]  =  G.[Religion_group_pk]
  AND  N.[Nation_pk]          = KR.[Nation_fk]
                                /* Pull only data on Restrictions */
  AND Q.[Pew_Data_Collection] = 'Global Restriction on Religion Study'

  AND Q.[Question_Year] = 2012
                                /* redundant filters                                        */
  AND
    (    Q.[Question_abbreviation_std]   LIKE 'GRI_11_%'
      OR Q.[Question_abbreviation_std]   LIKE 'GRI_20_01x%'
      OR Q.[Question_abbreviation_std]   LIKE 'SHI_01_x%'              )
/************************************************************************************************* Set of data at country/religious group level ***/
) AS CRL
/**************************************************************************************************************************************************/
GO
/**************************************************************************************************************************************************/










/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___00b____QuestnReligionTOOL]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___00b____QuestnReligionTOOL]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___00b____QuestnReligionTOOL]
            FROM                 [dbo].[vr___00b]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___00b____QuestnReligionTOOL]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _003_lt__DBLongNoAggr___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 003    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>         This script creates long set of data from the 'Global Restriction on Religion Study'                                        <<<<<     ***/
/***                   The long set of data includes numeric values and descriptive wordings for GR&SH R                                                     ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @CODE__1 nvarchar(max)
declare @CODE_2a nvarchar(max)
declare @CODE_2b nvarchar(max)
declare @CODE_2c nvarchar(max)
declare @CODE__3 nvarchar(max)
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
set     @CODE__1 = 
/**************************************************************************************************************************************************/
/*** Selection statement for sets of data at country, country/religion or country/province levels into a view **************************************************/
N'
ALTER  VIEW                      [dbo].[vr___01_]        AS
SELECT * FROM
'
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
N'('
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/

/*** extracted data ********************************************************************************************************************************************/
set     @CODE_2a = 
/***************************************************************************************************************************************************************/
N'
SELECT
        [entity]                 =   ''Ctry''
      , [QA_fk]                  =   Q.[QA_pk]
      , [link_fk]                =   K.[Nation_answer_pk]
      , [Nation_fk]              =   N.[Nation_pk]
      , [Locality_fk]            =   ''''
      , [Religion_fk]            =   ''''
      , [Region5]                =   N.[Region]
      , [Region6]                =   N.[SubRegion6]
      , [Ctry_EditorialName]     =   N.[Ctry_EditorialName]
      , [Locality]               =   ''''
      , [Religion]               =   ''''
      , [Question_Year]          =   Q.[Question_Year]
      , [QA_std]                 =   Q.[Question_abbreviation_std]
      , [QW_std]                 =   Q.[Question_short_wording_std]
      , [Answer_value]           =   Q.[Answer_value]
      , [Answer_value_Std]       =   Q.[Answer_value_Std]
      , [Answer_value_NoStd]     =   Q.[Answer_value_NoStd]
      , [answer_wording]         =   Q.[answer_wording]
      , [answer_wording_std]     =   Q.[answer_wording_std]
      , [Data_source_name]       =   Q.[Data_source_name]
      , [Question_Std_fk]        =   Q.[Question_Std_fk]
      , [Question_fk]            =   Q.[Question_fk]
      , [Answer_Std_fk]          =   Q.[Answer_Std_fk]
      , [Answer_fk]              =   Q.[Answer_fk]
      , [AnswerSet_number]       =   Q.[AnswerSet_number]
      , [Question_wording_std]   =   Q.[Question_wording_std]
      , [Question_wording]       =   Q.[Question_wording]
      , [Question_abbreviation]  =   Q.[Question_abbreviation]
      , [NA_by_set_of_Answers]   =   Q.[NA_by_set_of_Answers]
      , [Full_set_of_Answers]    =   Q.[Full_set_of_Answers]
      , [Display_by_StdQ]        =   Q.[Display]
      , [Display_by_NoSQ]        =   Q.[Display_NoStd]
      , [Display_by_Ans]         =   K.[Display]
      , [Editorially_Checked]    =   Q.[Editorially_Checked]
      , [Notes]                  =   Q.[Notes]
'
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
  FROM [forum].[dbo].[Pew_Q&A]                      Q
      ,[forum].[dbo].[Pew_Nation]                   N
      ,[forum].[dbo].[Pew_Nation_Answer]            K
'
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
    WHERE Q.[Answer_fk]           = K.[Answer_fk]
      AND Q.[Pew_Data_Collection] = ''Global Restriction on Religion Study''
      AND K.[Nation_fk]           =  N.[Nation_pk]
'
/***************************************************************************************************************************************************************/
 +
  N'UNION ALL'

/***************************************************************************************************************************************************************/
set     @CODE_2b = 
/***************************************************************************************************************************************************************/
	N'
	SELECT
			[entity]                 =   ''RGrp''
		  , [QA_fk]                  =   Q.[QA_pk]
	      , [link_fk]                =   K.[Nation_religion_answer_pk]
		  , [Nation_fk]              =   N.[Nation_pk]
		  , [Locality_fk]            =   ''''
		  , [Religion_fk]            =   G.[Religion_group_pk]
		  , [Region5]                =   N.[Region]
		  , [Region6]                =   N.[SubRegion6]
		  , [Ctry_EditorialName]     =   N.[Ctry_EditorialName]
		  , [Locality]               =   ''''
		  , [Religion]               =   G.[Pew_religion]
		  , [Question_Year]          =   Q.[Question_Year]
		  , [QA_std]                 =   Q.[Question_abbreviation_std]
		  , [QW_std]                 =   Q.[Question_short_wording_std]
		  , [Answer_value]           =   Q.[Answer_value]
		  , [Answer_value_Std]       =   Q.[Answer_value_Std]
		  , [Answer_value_NoStd]     =   Q.[Answer_value_NoStd]
		  , [answer_wording]         =   Q.[answer_wording]
		  , [answer_wording_std]     =   Q.[answer_wording_std]
		  , [Data_source_name]       =   Q.[Data_source_name]
		  , [Question_Std_fk]        =   Q.[Question_Std_fk]
		  , [Question_fk]            =   Q.[Question_fk]
		  , [Answer_Std_fk]          =   Q.[Answer_Std_fk]
		  , [Answer_fk]              =   Q.[Answer_fk]
		  , [AnswerSet_number]       =   Q.[AnswerSet_number]
		  , [Question_wording_std]   =   Q.[Question_wording_std]
		  , [Question_wording]       =   Q.[Question_wording]
		  , [Question_abbreviation]  =   Q.[Question_abbreviation]
		  , [NA_by_set_of_Answers]   =   Q.[NA_by_set_of_Answers]
		  , [Full_set_of_Answers]    =   Q.[Full_set_of_Answers]
		  , [Display_by_StdQ]        =   Q.[Display]
		  , [Display_by_NoSQ]        =   Q.[Display_NoStd]
		  , [Display_by_Ans]         =   K.[Display]
		  , [Editorially_Checked]    =   Q.[Editorially_Checked]
		  , [Notes]                  =   Q.[Notes]
	'
	/*------------------------------------------------------------------------------------------------------------------------------------------------*/
	+
	/*------------------------------------------------------------------------------------------------------------------------------------------------*/
	N'
	  FROM [forum].[dbo].[Pew_Q&A]                      Q
		  ,[forum].[dbo].[Pew_Nation]                   N
		  ,[forum].[dbo].[Pew_Nation_Religion_Answer]   K
		  ,[forum].[dbo].[Pew_Religion_Group]           G
	'
	/*------------------------------------------------------------------------------------------------------------------------------------------------*/
	+
	/*------------------------------------------------------------------------------------------------------------------------------------------------*/
	N'
		WHERE Q.[Answer_fk]           = K.[Answer_fk]
		  AND Q.[Pew_Data_Collection] = ''Global Restriction on Religion Study''
		  AND K.[Religion_group_fk]   = G.[Religion_group_pk]
		  AND K.[Nation_fk]           =  N.[Nation_pk]
	'
/**************************************************************************************************************************************************/
     +
      N'UNION ALL'

/**************************************************************************************************************************************************/
set     @CODE_2c = 
/**************************************************************************************************************************************************/
		N'
		SELECT
				[entity]                 =   ''Prov''
			  , [QA_fk]                  =   Q.[QA_pk]
		      , [link_fk]                =   K.[Locality_answer_pk]
			  , [Nation_fk]              =   N.[Nation_pk]
			  , [Locality_fk]            =   L.[Locality_pk]
			  , [Religion_fk]            =   ''''
			  , [Region5]                =   N.[Region]
			  , [Region6]                =   N.[SubRegion6]
			  , [Ctry_EditorialName]     =   N.[Ctry_EditorialName]
			  , [Locality]               =   L.[Locality]
			  , [Religion]               =   ''''
			  , [Question_Year]          =   Q.[Question_Year]
			  , [QA_std]                 =   Q.[Question_abbreviation_std]
			  , [QW_std]                 =   Q.[Question_short_wording_std]
			  , [Answer_value]           =   Q.[Answer_value]
			  , [Answer_value_Std]       =   Q.[Answer_value_Std]
			  , [Answer_value_NoStd]     =   Q.[Answer_value_NoStd]
			  , [answer_wording]         =   Q.[answer_wording]
			  , [answer_wording_std]     =   Q.[answer_wording_std]
			  , [Data_source_name]       =   Q.[Data_source_name]
			  , [Question_Std_fk]        =   Q.[Question_Std_fk]
			  , [Question_fk]            =   Q.[Question_fk]
			  , [Answer_Std_fk]          =   Q.[Answer_Std_fk]
			  , [Answer_fk]              =   Q.[Answer_fk]
			  , [AnswerSet_number]       =   Q.[AnswerSet_number]
			  , [Question_wording_std]   =   Q.[Question_wording_std]
			  , [Question_wording]       =   Q.[Question_wording]
			  , [Question_abbreviation]  =   Q.[Question_abbreviation]
			  , [NA_by_set_of_Answers]   =   Q.[NA_by_set_of_Answers]
			  , [Full_set_of_Answers]    =   Q.[Full_set_of_Answers]
			  , [Display_by_StdQ]        =   Q.[Display]
			  , [Display_by_NoSQ]        =   Q.[Display_NoStd]
			  , [Display_by_Ans]         =   K.[Display]
			  , [Editorially_Checked]    =   Q.[Editorially_Checked]
			  , [Notes]                  =   Q.[Notes]
		'
		/*------------------------------------------------------------------------------------------------------------------------------------------------*/
		+
		/*------------------------------------------------------------------------------------------------------------------------------------------------*/
		N'
		  FROM [forum].[dbo].[Pew_Q&A]                      Q
			  ,[forum].[dbo].[Pew_Nation]                   N
			  ,[forum].[dbo].[Pew_Locality_Answer]          K
			  ,[forum].[dbo].[Pew_Locality]                 L
		'
		/*------------------------------------------------------------------------------------------------------------------------------------------------*/
		+
		/*------------------------------------------------------------------------------------------------------------------------------------------------*/
		N'
			WHERE Q.[Answer_fk]           = K.[Answer_fk]
			  AND Q.[Pew_Data_Collection] = ''Global Restriction on Religion Study''
			  AND K.[Locality_fk]          =  L.[Locality_pk]
			  AND N.[Nation_pk]           =
										    CASE
										    WHEN L.[Nation_fk]     = 237
										     AND Q.[Question_Year] < 2011
										    THEN     197
										    ELSE L.[Nation_fk]
										    END
'
/***************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
set     @CODE__3 = 
/*** extracted data ********************************************************************************************************************************************/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
N') ExDa'
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
/*  >   filters to exclude from the analysis: North Korea, South Sudan data for 2010 and internal/external displacements coeded in 2010 -----------------------*/
N'
WHERE   Ctry_EditorialName                                   != ''North Korea''
  AND   Ctry_EditorialName +''_/_''+ STR(Question_Year, 4,0) != ''South Sudan_/_2010''
  AND   QA_std                                 NOT LIKE       ''%_d'' + ''[a,b]''
'
/*  <   filters  ----------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/




/***************************************************************************************************************************************************************/
set     @ALLCODE = 
					  @CODE__1
					+ @CODE_2a
					+ @CODE_2b
					+ @CODE_2c
					+ @CODE__3
/***************************************************************************************************************************************************************/



/***************************************************************************************************************************************************************/
/*** checking / executing SQL statement that has been stored as a string variable ******************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
	EXEC              (@ALLCODE)                                    /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-----   BackUp current Table     ---------------------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
  DECLARE @CrDt    varchar( 8)
  SET     @CrDt = (CONVERT(VARCHAR(8),GETDATE(),112))
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
EXEC ( '  INSERT INTO   [forum_ResAnal].[dbo].[vr___00x____Long__NoAgg___BkUp]
               SELECT   [BkUp_date]  = ''' + @CrDt + '''
                      , * 	
                 FROM   [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]  ' )
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/*--    TRUNCATE TABLE  [forum_ResAnal].[dbo].[vr___00x____Long__NoAgg___BkUp]    ----------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
            FROM                 [dbo].[vr___01_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated] WHERE [QA_std] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _004_lt__DBWide_byCnY___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 004    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>         This script creates semi-WIDE set of STORED data from the 'Global Restriction on Religion Study'                            <<<<<     ***/
/***                    -  Data of each row are by country-year                                                                                              ***/
/***                    -  Any wide/semi-wide set of data includes only numeric values for GR&SH R                                                           ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***************************************************************************************************************************************************************/
N'
ALTER  VIEW                      [dbo].[vr___02_]        AS
SELECT * FROM
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  Long NPR aggregated by country and null values recoded as zero in known count variables  *****************************************************************/
N'
(
/***************************************************************************************************************************************************************/
SELECT 
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE IS alias for the recoded field           ***/
          DISTINCT                                                              /*** should be distinct to include once each variable name                   ***/
          CASE                                                                  /*** CASE to select two different wordings...                                ***/
          WHEN        [QA_std]     LIKE 'GRI_19_[b-f]'                          /*** when count variables GRI_19                                             ***/
                 OR   [QA_std]     LIKE 'SHI_01_[b-f]'                          /*** or   count variables SHI_01                                             ***/
                 OR   [QA_std]     LIKE 'SHI_04_[b-f]'                          /*** or   count variables SHI_04                                             ***/
                 OR   [QA_std]     LIKE 'SHI_05_[c-f]'                          /*** or   count variables SHI_05                                             ***/
          THEN ', ' + [QA_std] + ' = ISNULL(' + [QA_std] + ', 0)'               /*** as comma delimited code to include null values as ceros                 ***/
          ELSE ', ' + [QA_std]                                                  /*** else comma delimited field for all other QA Std (StdVarName)            ***/
          END                                                                   /*** end of CASE section, used to include two different wordings             ***/
    FROM                                                                        /*** from...                                                                 ***/
          [vr___01_cDB_Long__NoAggregated]                                      /*** name of the table which includes all field (var) names as rows          ***/
                                                                                /*** NO FILTERS needed                                                       ***/
         ORDER BY                                                               /*** sorting order using exact final field, including:                       ***/
          CASE                                                                  /*** CASE to sort using two different wordings...                            ***/
          WHEN        [QA_std]     LIKE 'GRI_19_[b-f]'                          /*** when count variables GRI_19                                             ***/
                 OR   [QA_std]     LIKE 'SHI_01_[b-f]'                          /*** or   count variables SHI_01                                             ***/
                 OR   [QA_std]     LIKE 'SHI_04_[b-f]'                          /*** or   count variables SHI_04                                             ***/
                 OR   [QA_std]     LIKE 'SHI_05_[c-f]'                          /*** or   count variables SHI_05                                             ***/
          THEN ', ' + [QA_std] + ' = ISNULL(' + [QA_std] + ', 0)'               /*** as comma delimited code to include null values as ceros                 ***/
          ELSE ', ' + [QA_std]                                                  /*** else comma delimited field for all other QA Std (StdVarName)            ***/
          END                                                                   /*** end of CASE, used to sort list of fields by two different wordings      ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  all this from...  ****************************************************************************************************************************************/
N'
FROM ( 
'
/****************************************************************************************************************************************  all this from...  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  Long NPR aggregated by country (& religion due to variable names)  ***************************************************************************************/
N'
SELECT 
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[QA_std]
      ,[Answer_value]      = SUM([Answer_value])
  FROM
            [vr___01_cDB_Long__NoAggregated]
GROUP BY
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[QA_std]
)                                                                                                                                                      AS   lnpr
'
/***************************************************************************************  Long NPR aggregated by country (& religion due to variable names)  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
N'
PIVOT
(
  MAX([Answer_value])
  FOR [QA_std]
                   in (
'
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** start listing of variables                                              ***/
/***************************************************************************************************************************************************************/
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
/*** Begin stuffing function to remove the first comma in the list of fields to be retrieved (parenthesis not needed) ******************************************/
STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
/***************************************************************************************************************************************************************/
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE IS alias for the recoded field           ***/
          DISTINCT                                                              /*** should be distinct to include once each variable name                   ***/
          ', '                                                                  /*** comma delimiter                                                         ***/
        +                                                                       /*** concatenated to...                                                      ***/
          [QA_std]                                                              /*** Fiels including all Q Abb Std (StdVarName)                              ***/
    FROM                                                                        /*** from...                                                                 ***/
          [vr___01_cDB_Long__NoAggregated]                                      /*** name of the table which includes all field (var) names as rows          ***/
                                                                                /*** NO FILTERS needed                                                       ***/
         ORDER BY                                                               /*** sorting order using exact final field, including:                       ***/
          ', '                                                                  /*** comma delimiter                                  -> as part of sorting  ***/
        +                                                                       /*** concatenated to...                               -> as part of sorting  ***/
          [QA_std]                                                              /*** Fiels including all Q Abb Std (StdVarName)       -> as part of sorting  ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
                                                                                /*** end of listing of variables                                             ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
N'
)
 )                                                                                                                                                     AS   pivt
  )                                                                                                                                                    AS   berc
'
/***************************************************************************************************************************************************************/
/*** checking / executing SQL statement that has been stored as a string variable ******************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
	EXEC              (@ALLCODE)                                    /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___02_cDB_Wide__by_Ctry&Year]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___02_cDB_Wide__by_Ctry&Year]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___02_cDB_Wide__by_Ctry&Year]
            FROM                 [dbo].[vr___02_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___02_cDB_Wide__by_Ctry&Year]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _005_lt__DBWnXt_byCnY___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 005    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr_03w_W&Extras_by_Ctry&Year]                           <<<<<     ***/
/***             This table only includes numeric values aggregated by country/religion & year (does not include descriptive wordings).                      ***/
/***             The table adds calculated variables using the basic variables stored in the database.                                                       ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___03_]        AS
SELECT * FROM
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(
/***************************************************************************************************************************************************************/
--*** May need to:
--    Clean XSG_25n27  as rowmax(GRX_25_01_2010 SHX_27_01_2010)
/*** main select statement *************************************************************************************************************************************/
/*** table including numeric values + Step-3 calculated variables **********************************************************************************************/
SELECT
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* NOTE: scaled GRI_19_ b to f requested by Peter Henne in 2015 */
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GRI_19_b, scaled (0 = None, .2 = 1-9 cases, .4 = 10-200 cases, .6 = 201 - 1000 cases, .8 = 1001 - 9999 cases, 1 = 10000+ cases) */
                   GRI_19_b_scaled
       = CAST ((
         CASE 
              WHEN GRI_19_b   >  10000 THEN 1     -- (1   = 10000+      cases)
              WHEN GRI_19_b   >   1000 THEN 0.8   -- ( .8 =  1001 - 9999 cases)
              WHEN GRI_19_b   >    200 THEN 0.6   -- ( .6 =   201 - 1000 cases)
              WHEN GRI_19_b   >     10 THEN 0.4   -- ( .4 =    10 -  200 cases)
              WHEN GRI_19_b   >      0 THEN 0.2   -- ( .2 =     1 -    9 cases)
              WHEN GRI_19_b   =      0 THEN 0.0   -- (0   =  None             )
         END
                                                               ) AS DECIMAL (38,2))
/* GRI_19_c, scaled (0 = None, .2 = 1-9 cases, .4 = 10-200 cases, .6 = 201 - 1000 cases, .8 = 1001 - 9999 cases, 1 = 10000+ cases) */
       ,           GRI_19_c_scaled
       = CAST ((
         CASE 
              WHEN GRI_19_c   >  10000 THEN 1     -- (1   = 10000+      cases)
              WHEN GRI_19_c   >   1000 THEN 0.8   -- ( .8 =  1001 - 9999 cases)
              WHEN GRI_19_c   >    200 THEN 0.6   -- ( .6 =   201 - 1000 cases)
              WHEN GRI_19_c   >     10 THEN 0.4   -- ( .4 =    10 -  200 cases)
              WHEN GRI_19_c   >      0 THEN 0.2   -- ( .2 =     1 -    9 cases)
              WHEN GRI_19_c   =      0 THEN 0.0   -- (0   =  None             )
         END
                                                               ) AS DECIMAL (38,2))
/* GRI_19_d, scaled (0 = None, .2 = 1-9 cases, .4 = 10-200 cases, .6 = 201 - 1000 cases, .8 = 1001 - 9999 cases, 1 = 10000+ cases) */
       ,           GRI_19_d_scaled
       = CAST ((
         CASE 
              WHEN GRI_19_d   >  10000 THEN 1     -- (1   = 10000+      cases)
              WHEN GRI_19_d   >   1000 THEN 0.8   -- ( .8 =  1001 - 9999 cases)
              WHEN GRI_19_d   >    200 THEN 0.6   -- ( .6 =   201 - 1000 cases)
              WHEN GRI_19_d   >     10 THEN 0.4   -- ( .4 =    10 -  200 cases)
              WHEN GRI_19_d   >      0 THEN 0.2   -- ( .2 =     1 -    9 cases)
              WHEN GRI_19_d   =      0 THEN 0.0   -- (0   =  None             )
         END
                                                               ) AS DECIMAL (38,2))
/* GRI_19_e, scaled (0 = None, .2 = 1-9 cases, .4 = 10-200 cases, .6 = 201 - 1000 cases, .8 = 1001 - 9999 cases, 1 = 10000+ cases) */
       ,           GRI_19_e_scaled
       = CAST ((
         CASE 
              WHEN GRI_19_e   >  10000 THEN 1     -- (1   = 10000+      cases)
              WHEN GRI_19_e   >   1000 THEN 0.8   -- ( .8 =  1001 - 9999 cases)
              WHEN GRI_19_e   >    200 THEN 0.6   -- ( .6 =   201 - 1000 cases)
              WHEN GRI_19_e   >     10 THEN 0.4   -- ( .4 =    10 -  200 cases)
              WHEN GRI_19_e   >      0 THEN 0.2   -- ( .2 =     1 -    9 cases)
              WHEN GRI_19_e   =      0 THEN 0.0   -- (0   =  None             )
         END
                                                               ) AS DECIMAL (38,2))
/* GRI_19_f, scaled (0 = None, .2 = 1-9 cases, .4 = 10-200 cases, .6 = 201 - 1000 cases, .8 = 1001 - 9999 cases, 1 = 10000+ cases) */
       ,           GRI_19_f_scaled
       = CAST ((
         CASE 
              WHEN GRI_19_f   >  10000 THEN 1     -- (1   = 10000+      cases)
              WHEN GRI_19_f   >   1000 THEN 0.8   -- ( .8 =  1001 - 9999 cases)
              WHEN GRI_19_f   >    200 THEN 0.6   -- ( .6 =   201 - 1000 cases)
              WHEN GRI_19_f   >     10 THEN 0.4   -- ( .4 =    10 -  200 cases)
              WHEN GRI_19_f   >      0 THEN 0.2   -- ( .2 =     1 -    9 cases)
              WHEN GRI_19_f   =      0 THEN 0.0   -- (0   =  None             )
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* NOTE: scaled GRI_19_ b to f requested by Peter Henne in 2015 ends here */
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* NOTE: scaled index values based in year 2007 */
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GRI_scaled index */
      ,  GRI_scaled 
         =        CAST ((
                  CASE
                  WHEN GRI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'low'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GRI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 1.00
                  WHEN GRI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'moderate'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GRI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 2.00
                  WHEN GRI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GRI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 3.00
                  WHEN GRI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'very high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GRI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 4.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* SHI_scaled index */
      ,  SHI_scaled 
         =        CAST ((
                  CASE
                  WHEN SHI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'low'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'SHI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 1.00
                  WHEN SHI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'moderate'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'SHI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 2.00
                  WHEN SHI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'SHI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 3.00
                  WHEN SHI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'very high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'SHI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 4.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GFI_scaled index */
      ,  GFI_scaled 
         =        CAST ((
                  CASE
                  WHEN GFI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'low'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GFI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 1.00
                  WHEN GFI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'moderate'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GFI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 2.00
                  WHEN GFI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GFI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 3.00
                  WHEN GFI <= ( SELECT [CutPoint] FROM [forum].[dbo].[Pew_Field]
                                                     , [forum].[dbo].[Pew_Index_Cut_Points]
                                WHERE  [Field_fk]   = [Field_pk]
                                  AND  [Level]      = 'very high'
                                  AND  [Point]      = 'highest'
                                  AND  [Field_type] = 'GFI'
                                  AND  [Field_year] = '2007'
                              )
                  THEN 4.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GRI_rounded index */
      ,  GRI_rd_1d 
         =        CAST ((
                                  GRI 
                                                               ) AS DECIMAL (38,1))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* SHI_rounded index */
      ,  SHI_rd_1d 
         =        CAST ((
                                  SHI 
                                                               ) AS DECIMAL (38,1))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GFI_rounded index */
      ,  GFI_rd_1d 
         =        CAST ((
                                  GFI
                                                               ) AS DECIMAL (38,1))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , *

FROM
/***************************************************************************************************************************************************************/
(
/*** table including numeric values + Step-2 calculated variables **********************************************************************************************/
SELECT
/* Indexes wiolll NOT fit previously published data  ----------------------------------------------------------------------------------------------------------*/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GRI index */
         GRI 
         =
                  CAST ((((
                                [GRI_01]
                         +      [GRI_02]
                         +      [GRI_03]
                         +      [GRI_04]
                         +      [GRI_05]
                         +      [GRI_06]
                         +      [GRI_07]
                         +      [GRI_08_for_index]
                         +      [GRI_09]
                         +      [GRI_10]
                         +      [GRI_11]
                         +      [GRI_12]
                         +      [GRI_13]
                         +      [GRI_14]
                         +      [GRI_15]
                         +      [GRI_16]
                         +      [GRI_17]
                         +      [GRI_18]
                         +      [GRI_19]
                         +      [GRI_20]
                                                       ) / 2    )
                                                                  ) AS DECIMAL (38,32))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* SHI index */
       , SHI 
         =        CAST ((((
                                [SHI_01]
                         +      [SHI_02]
                         +      [SHI_03]
                         +      [SHI_04]
                         +      [SHI_05]
                         +      [SHI_06]
                         +      [SHI_07]
                         +      [SHI_08]
                         +      [SHI_09]
                         +      [SHI_10]
                         +      [SHI_11_for_index]
                         +      [SHI_12]
                         +      [SHI_13]
                                                       ) / 1.3  )
                                                                  ) AS DECIMAL (38,32))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* GFI index */
       , GFI 
         =        CAST ((((
                                [GRI_20_01]
                         +      [GRI_20_02]
                         + ( (  [GRI_20_03_a]
                              + [GRI_20_03_b]
                              + [GRI_20_03_c]
                                               ) / 3 )
                         +      [GRI_20_04]
                         +      [GRI_20_05]
                                                       ) / 5 ) 
                                                              * 10
                                                                  ) AS DECIMAL (38,32))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Christianity */
       , XSG_01_xG1 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG1 + SHI_01_xG1 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Islam */
       , XSG_01_xG2 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG2 + SHI_01_xG2 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Buddhism */
       , XSG_01_xG3 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG3 + SHI_01_xG3 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Hinduism */
       , XSG_01_xG4 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG4 + SHI_01_xG4 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Judaism */
       , XSG_01_xG5 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG5 + SHI_01_xG5 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Other ('New' Religions, Ancient Religions, Sikhs, Zoroastrianism) */
       , XSG_01_xG6 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG6 + SHI_01_xG6 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Government & Social harassment of Ethnic or Tribal Religions */
       , XSG_01_xG7 
         =        CAST ((
                  CASE
                  WHEN GRI_11_xG7 + SHI_01_xG7 > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_01_summary_a_ny           for toplines */
       ,           SHI_01_summary_a_ny
       = CAST ((
         CASE 
              WHEN SHI_01     =  0.00
              THEN               0.00
              WHEN SHI_01     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nya
       = CAST ((
         CASE 
              WHEN SHI_01_a   >  0.00
              THEN               1.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nyb
       = CAST ((
         CASE 
              WHEN SHI_01_b   >  0.00
              THEN               1.02
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nyc
       = CAST ((
         CASE 
              WHEN SHI_01_c   >  0.00
              THEN               1.03
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nyd
       = CAST ((
         CASE 
              WHEN SHI_01_d   >  0.00
              THEN               1.04
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nye
       = CAST ((
         CASE 
              WHEN SHI_01_e   >  0.00
              THEN               1.05
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_summary_a_nyf
       = CAST ((
         CASE 
              WHEN SHI_01_f   >  0.00
              THEN               1.06
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 XSG_242526_ny           for toplines */
       ,           XSG_242526_ny
       = CAST ((
         CASE WHEN GRX_24     = 0.00
               AND SHX_25     = 0.00
               AND SHX_26     = 0.00
              THEN              0.00
              WHEN GRX_24     > 0.00
                OR SHX_25     > 0.00
                OR SHX_26     > 0.00
              THEN              0.01
              END
                                                               ) AS DECIMAL (38,2))
       ,           XSG_242526_ny1
       = CAST ((
         CASE WHEN GRX_24     = 0.00
               AND SHX_25     = 0.00
               AND SHX_26     = 0.00
              THEN              NULL
              WHEN GRX_24     = 1.00
                OR SHX_25     = 1.00
                OR SHX_26     = 1.00
              THEN              1.00
              WHEN GRX_24     = 0.67
                OR SHX_25     = 0.67
                OR SHX_26     = 0.67
              THEN              0.67
              WHEN GRX_24     = 0.33
                OR SHX_25     = 0.33
                OR SHX_26     = 0.33
              THEN              0.33
              END
                                                               ) AS DECIMAL (38,2))
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 XSG_25n27_ny           for toplines */
       ,           XSG_25n27_ny
       = CAST ((
         CASE WHEN GRX_25_ny  = 0.00
               AND SHX_27_ny  = 0.00
              THEN              0.00
              WHEN GRX_25_ny  = 0.01
                OR SHX_27_ny  = 0.01
              THEN              0.01
              END
                                                               ) AS DECIMAL (38,2))
       ,           XSG_25n27_ny2
       = CAST ((
         CASE WHEN GRX_25_ny2 = 0.02
                OR SHX_27_ny2 = 0.02
              THEN              0.02
              END
                                                               ) AS DECIMAL (38,2))
       ,           XSG_25n27_ny3
       = CAST ((
         CASE WHEN GRX_25_ny3 = 0.03
                OR SHX_27_ny3 = 0.03
              THEN              0.03
              END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

       , *
FROM
/***************************************************************************************************************************************************************/
(
/*** table including numeric values + Step-1 calculated variables **********************************************************************************************/
SELECT
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
         GRI_20
         =        ROUND(
                  CAST ((((
                                [GRI_20_01]
                         +      [GRI_20_02]
                         + ( (  [GRI_20_03_a]
                              + [GRI_20_03_b]
                              + [GRI_20_03_c]
                                               ) / 3 )
                         +      [GRI_20_04]
                         +      [GRI_20_05]
                                                       ) / 5  )
                                                               ) AS DECIMAL (38,2)) ,2)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , GRI_20_top
         =        CAST ((
                  CASE
                  WHEN GRI_20_03_a = 1
                    OR GRI_20_03_b = 1
                    OR GRI_20_03_c = 1
                    OR GRI_20_02   > 0.5
                  THEN               1.00
                  WHEN GRI_20_01   > 0
                    OR GRI_20_02   > 0
                    OR GRI_20_03_a > 0
                    OR GRI_20_03_b > 0
                    OR GRI_20_03_c > 0
                    OR GRI_20_04   > 0
                    OR GRI_20_05   > 0
                  THEN               0.50
                  ELSE               0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , GRI_20_03_top
         =        CAST ((
                  CASE
                  WHEN GRI_20_03_a >= GRI_20_03_b
                   AND GRI_20_03_a >= GRI_20_03_c
                  THEN GRI_20_03_a
                  WHEN GRI_20_03_b >= GRI_20_03_a
                   AND GRI_20_03_b >= GRI_20_03_c
                  THEN GRI_20_03_b
                  WHEN GRI_20_03_c >= GRI_20_03_b
                   AND GRI_20_03_c >= GRI_20_03_c
                  THEN GRI_20_03_c
                  ELSE NULL
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , 
--       select
       SHI_01
         =        CAST ((
                  (
                  CAST ((
                    ( CASE
                      WHEN SHI_01_a > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_b > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_c > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_d > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_e > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_f > 0 THEN 1
                      ELSE                   0
                       END                     )
                                                       
                                                               ) AS DECIMAL (38,2))
                                                                                    / 6 )
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , SHI_01_summary_b
         =        CAST ((
                  (
                  CAST ((
                    ( CASE
                      WHEN SHI_01_a > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_b > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_c > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_d > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_e > 0 THEN 1
                      ELSE                   0
                       END                     )
                  + ( CASE
                      WHEN SHI_01_f > 0 THEN 1
                      ELSE                   0
                       END                     )
                                                       
                                                               ) AS DECIMAL (38,2))
                                                                                    / 6 )
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_01_[a,b,c,d,e,f]_dummy for tables of question answers by country */
       ,           SHI_01_a_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_a   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_b_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_b   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_c_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_c   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_d_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_d   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_e_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_e   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_01_f_dummy
       = CAST ((
         CASE 
              WHEN SHI_01_f   >  0.00
              THEN               1
              ELSE               0
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Christianity */
       , GRI_11_xG1
         =        CAST ((
                  CASE
                  WHEN   GRI_11_01a
                       + GRI_11_01b
                       + GRI_11_02
                       + GRI_11_03
                       + GRI_11_11
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Islam */
       , GRI_11_xG2 
         =        CAST ((
                  CASE
                  WHEN   GRI_11_04
                       + GRI_11_05
                       + GRI_11_06
                       + GRI_11_12
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Buddhism */
       , GRI_11_xG3 
         =        CAST ((
                  CASE
                  WHEN   GRI_11_07
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Hinduism */
       , GRI_11_xG4 
         =        CAST ((
                  CASE
                  WHEN   GRI_11_08
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Judaism */
       , GRI_11_xG5 
         =        CAST ((
                  CASE
                  WHEN   GRI_11_09
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Other ('New' Religions, Ancient Religions, Sikhs, Zoroastrianism) */
       , GRI_11_xG6 
         =        CAST ((
                  CASE
                  WHEN   isnull(GRI_11_10, 0)
                       + isnull(GRI_11_14, 0)
                       + isnull(GRI_11_15, 0)
                       + isnull(GRI_11_16, 0)
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Gov harassment of Ethnic or Tribal Religions */
       , GRI_11_xG7
         =        CAST ((
                  CASE
                  WHEN   GRI_11_13
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Christianity */
       , SHI_01_xG1
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_01a
                       + SHI_01_x_01b
                       + SHI_01_x_02
                       + SHI_01_x_03
                       + SHI_01_x_11
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Islam */
       , SHI_01_xG2 
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_04
                       + SHI_01_x_05
                       + SHI_01_x_06
                       + SHI_01_x_12
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Buddhism */
       , SHI_01_xG3 
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_07
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Hinduism */
       , SHI_01_xG4 
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_08
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Judaism */
       , SHI_01_xG5 
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_09
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Other ('New' Religions, Ancient Religions, Sikhs, Zoroastrianism) */
       , SHI_01_xG6 
         =        CAST ((
                  CASE
                  WHEN   isnull(SHI_01_x_10, 0)
                       + isnull(SHI_01_x_14, 0)
                       + isnull(SHI_01_x_15, 0)
                       + isnull(SHI_01_x_16, 0)
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Social harassment of Ethnic or Tribal Religions */
       , SHI_01_xG7
         =        CAST ((
                  CASE
                  WHEN   SHI_01_x_13
                  > 0
                  THEN 1.00
                  ELSE 0.00
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* recode GRI_08 to be used as index-factor */
       , GRI_08_for_index
         =        CAST ((
                  CASE
                  WHEN GRI_08  = 0.5
                  THEN           1
                  ELSE GRI_08
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/* recode SHI_Q_11 to be used as index-factor */
       , SHI_11_for_index
         =        CAST ((
                  CASE
                  WHEN SHI_11  = 0.5
                  THEN           1
                  ELSE SHI_11
                  END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRI_16               for toplines */
       ,           GRI_16_ny
       = CAST ((
         CASE 
              WHEN GRI_16     =  0.00
              THEN               0.00
              WHEN GRI_16     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_16_ny1
       = CAST ((
         CASE 
              WHEN GRI_16     =  0.00
              THEN               NULL
              WHEN GRI_16     >  0.00
              THEN               GRI_16
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRI_19               for toplines */
       ,           GRI_19_ny
       = CAST ((
         CASE 
              WHEN GRI_19     =  0.00
              THEN               0.00
              WHEN GRI_19     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_ny1
       = CAST ((
         CASE 
              WHEN GRI_19     =  0.00
              THEN               NULL
              WHEN GRI_19     >  0.00
              THEN               GRI_19
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRI_19_summ_ny          for toplines */
       ,           GRI_19_summ_ny
       = CAST ((
         CASE 
              WHEN GRI_19     =  0.00
              THEN               0.00
              WHEN GRI_19     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_summ_nyb
       = CAST ((
         CASE 
              WHEN GRI_19_b   >  0.00
              THEN               1.02
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_summ_nyc
       = CAST ((
         CASE 
              WHEN GRI_19_c   >  0.00
              THEN               1.03
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_summ_nyd
       = CAST ((
         CASE 
              WHEN GRI_19_d   >  0.00
              THEN               1.04
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_summ_nye
       = CAST ((
         CASE 
              WHEN GRI_19_e   >  0.00
              THEN               1.05
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRI_19_summ_nyf
       = CAST ((
         CASE 
              WHEN GRI_19_f   >  0.00
              THEN               1.06
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRI_19_x              for toplines */
       ,           GRI_19_x
       =           ISNULL(GRI_19_b, 0)
                 + ISNULL(GRI_19_c, 0)
                 + ISNULL(GRI_19_d, 0)
                 + ISNULL(GRI_19_e, 0)
                 + ISNULL(GRI_19_f, 0)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_04_ny          for toplines */
       ,           SHI_04_ny
       = CAST ((
         CASE 
              WHEN SHI_04     =  0.00
              THEN               0.00
              WHEN SHI_04     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_04_ny1
       = CAST ((
         CASE 
              WHEN SHI_04     =  0.00
              THEN               NULL
              WHEN SHI_04     >  0.00
              THEN               SHI_04
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_05_ny          for toplines */
       ,           SHI_05_ny
       = CAST ((
         CASE 
              WHEN SHI_05     =  0.00
              THEN               0.00
              WHEN SHI_05     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_05_ny1
       = CAST ((
         CASE 
              WHEN SHI_05     =  0.00
              THEN               NULL
              WHEN SHI_05     >  0.00
              THEN               SHI_05
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_07_ny          for toplines */
       ,           SHI_07_ny
       = CAST ((
         CASE 
              WHEN SHI_07     =  0.00
              THEN               0.00
              WHEN SHI_07     >  0.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHI_07_ny1
       = CAST ((
         CASE 
              WHEN SHI_07     =  0.00
              THEN               NULL
              WHEN SHI_07     >  0.00
              THEN               SHI_07
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHI_01_x              for toplines??? - added on Dec2015  */
       ,           SHI_01_x
       =           ISNULL(SHI_01_b, 0)
                 + ISNULL(SHI_01_c, 0)
                 + ISNULL(SHI_01_d, 0)
                 + ISNULL(SHI_01_e, 0)
                 + ISNULL(SHI_01_f, 0)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_22               for toplines */
--     ,           GRX_22_ny1    => this was the former name
       ,           GRX_22_aggreg
       = CAST ((
         CASE WHEN ISNULL(GRX_22   , 9)  = 9
               AND ISNULL(GRX_22_01, 9)  = 9
               AND ISNULL(GRX_22_02, 9)  = 9
               AND ISNULL(GRX_22_04, 9)  = 9
              THEN               NULL
              WHEN ISNULL(GRX_22   , 0)  < 0.66
               AND ISNULL(GRX_22_01, 0)  < 0.66
               AND ISNULL(GRX_22_02, 0)  < 0.66
               AND ISNULL(GRX_22_04, 0)  < 0.66
              THEN              0
              WHEN ISNULL(GRX_22   , 0)  < 1.00
               AND ISNULL(GRX_22_01, 0)  < 1.00
               AND ISNULL(GRX_22_02, 0)  < 1.00
               AND ISNULL(GRX_22_04, 0)  < 1.00
              THEN              0.67
              WHEN GRX_22     = 1.00
                OR GRX_22_01  = 1.00
                OR GRX_22_02  = 1.00
                OR GRX_22_04  = 1.00
              THEN              1.00
--              ELSE 1000                       /*this for checking any value non-recoded*/
              END
                                                               ) AS DECIMAL (38,2))
/* current does not display "NO" -- this would be just a dummy but it has NOT BEEN TESTED: */
---------------------------------------------------------------------------------------------
--       ,           GRX_22_ny
--       = CAST ((
--         CASE WHEN ISNULL(GRX_22   , 9)   = 9
--               AND ISNULL(GRX_22_01, 9)   = 9
--               AND ISNULL(GRX_22_02, 9)   = 9
--               AND ISNULL(GRX_22_04, 9)   = 9
--              THEN               NULL
--              WHEN ISNULL(GRX_22   , 0)   < 0.66
--               AND ISNULL(GRX_22_01, 0)   < 0.66
--               AND ISNULL(GRX_22_02, 0)   < 0.66
--               AND ISNULL(GRX_22_04, 0)   < 0.66
--              THEN              0
--              WHEN ISNULL(GRX_22   , 0)  >= 0.66
--               AND ISNULL(GRX_22_01, 0)  >= 0.66
--               AND ISNULL(GRX_22_02, 0)  >= 0.66
--               AND ISNULL(GRX_22_04, 0)  >= 0.66
--              THEN              0.01
--              END
--                                                               ) AS DECIMAL (38,2))
---------------------------------------------------------------------------------------------
/*                                                         END of CODE -> NOT BEEN TESTED: */
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_22_01               for toplines */
       ,           GRX_22_01_ny
       = CAST ((
         CASE WHEN GRX_22_01  < 0.66
              THEN              0
              WHEN GRX_22_01 >= 0.66
              THEN              0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_22_01_ny1
       = CAST ((
         CASE WHEN GRX_22_01  < 0.66
              THEN              NULL
              WHEN GRX_22_01 >= 0.66
              THEN              GRX_22_01
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_22_02               for toplines */
       ,           GRX_22_02_ny
       = CAST ((
         CASE WHEN GRX_22_02  < 0.66
              THEN              0
              WHEN GRX_22_02 >= 0.66
              THEN              0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_22_02_ny1
       = CAST ((
         CASE WHEN GRX_22_02  < 0.66
              THEN              NULL
              WHEN GRX_22_02 >= 0.66
              THEN              GRX_22_02
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_22_03               for toplines */
       ,           GRX_22_03_ny
       = CAST ((
         CASE WHEN GRX_22_03  <  0.66
              THEN               0
              WHEN GRX_22_03 >=  0.66
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_22_03_ny1
       = CAST ((
         CASE WHEN GRX_22_03  <  0.66
              THEN               NULL
              WHEN GRX_22_03 >=  0.66
              THEN               GRX_22_03
        END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_22_04               for toplines */
       ,           GRX_22_04_ny
       = CAST ((
         CASE WHEN GRX_22_04  <  0.66
              THEN               0
              WHEN GRX_22_04 >=  0.66
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_22_04_ny1
       = CAST ((
         CASE WHEN GRX_22_04  <  0.66
              THEN               NULL
              WHEN GRX_22_04 >=  0.66
              THEN               GRX_22_04
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_24               for toplines */
       ,           GRX_24_ny
       = CAST ((
         CASE WHEN GRX_24     =  0
              THEN               0
              WHEN GRX_24     >  0
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_24_ny1
       = CAST ((
         CASE WHEN GRX_24     =  0
              THEN               NULL
              WHEN GRX_24     >  0
              THEN               GRX_24
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 GRX_25               for toplines */
       ,           GRX_25_ny
       = CAST ((
         CASE 
              WHEN GRX_25_01  =  0.00
              THEN               0.00
              WHEN GRX_25_01  =  1.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_25_ny2
       = CAST ((
         CASE 
              WHEN GRX_25_02  =  1.00
              THEN               0.02
         END
                                                               ) AS DECIMAL (38,2))
       ,           GRX_25_ny3
       = CAST ((
         CASE 
              WHEN GRX_25_03  =  1.00
              THEN               0.03
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHX_25               for toplines */
       ,           SHX_25_ny
       = CAST ((
         CASE WHEN SHX_25     =  0
              THEN               0
              WHEN SHX_25     >  0
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHX_25_ny1
       = CAST ((
         CASE WHEN SHX_25     =  0
              THEN               NULL
              WHEN SHX_25     >  0
              THEN               SHX_25
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHX_26               for toplines */
       ,           SHX_26_ny
       = CAST ((
         CASE WHEN SHX_26     =  0
              THEN               0
              WHEN SHX_26     >  0
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHX_26_ny1
       = CAST ((
         CASE WHEN SHX_26     =  0
              THEN               NULL
              WHEN SHX_26     >  0
              THEN               SHX_26
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*                 SHX_27               for toplines */
       ,           SHX_27_ny
       = CAST ((
         CASE 
              WHEN SHX_27_01  =  0.00
              THEN               0.00
              WHEN SHX_27_01  =  1.00
              THEN               0.01
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHX_27_ny2
       = CAST ((
         CASE 
              WHEN SHX_27_02  =  1.00
              THEN               0.02
         END
                                                               ) AS DECIMAL (38,2))
       ,           SHX_27_ny3
       = CAST ((
         CASE 
              WHEN SHX_27_03  =  1.00
              THEN               0.03
         END
                                                               ) AS DECIMAL (38,2))
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
       , *
FROM
/*** View including numeric values aggregated by country/religion & year ***************************************************************************************/
               [dbo].[vr___02_cDB_Wide__by_Ctry&Year]
/*************************************************************************************** View including numeric values aggregated by country/religion & year ***/
/********************************************************************************************** table including numeric values + Step-1 calculated variables ***/
)                                                                                                                                                       AS NV_S1
/***************************************************************************************************************************************************************/
)                                                                                                                                                       AS NV_S2
/********************************************************************************************** table including numeric values + Step-2 calculated variables ***/
/********************************************************************************************** table including numeric values + Step-3 calculated variables ***/
/************************************************************************************************************************************* main select statement ***/
/***************************************************************************************************************************************************************/
) formerview                                                        /***        last row of code for the VIEW                                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]
            FROM                 [dbo].[vr___03_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _006_lt__DBSemiW_byCY___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 006    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr_05w_SemiWide_by_Ctry&Year]                           <<<<<     ***/
/***             This table only includes numeric values aggregated by country/religion & year (does not include descriptive wordings).                      ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
ALTER  VIEW                      [dbo].[vr___04_]        AS
SELECT * FROM
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
 ( SELECT
           [byCY_row]           =  ROW_NUMBER()
                                   OVER(ORDER BY
                                                   [Nation_fk]
                                                 , [Question_Year] )
      ,    [Nation_fk]
      ,    [Ctry_EditorialName]
      ,    [UN_TotalPopulation]
      ,    [Region5]
      ,    [Region6]
      ,    [Question_Year]
      ,    [GRI]
      ,    [GRI_rd_1d]
      ,    [GRI_scaled]
      ,    [SHI]
      ,    [SHI_rd_1d]
      ,    [SHI_scaled]
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
(                                                                               /*** parenthesis to include query for the cell to be stuffed                ***/
    SELECT                                                                      /*** SELECT statement                                                        ***/
          ', '                                                                  /*** comma delimiter                                                         ***/
        +                                                                       /*** concatenated to...                                                      ***/
          [COLUMN_NAME]                                                         /*** Fiels including all Q Abb Std (StdVarName)                              ***/
    FROM                                                                        /*** from...                                                                 ***/
          [INFORMATION_SCHEMA].[COLUMNS]                                        /*** name of the sys view which includes all field (var) names as rows       ***/
WHERE                                                                           /*** FILTER:                                                                 ***/
          [TABLE_NAME] = 'vr___03_cDB_W&Xtra_byCtry&Year'                       /*** only the view vr_03                                                     ***/
  AND                                                                           /*** FILTER:                                                                 ***/
          [COLUMN_NAME] NOT IN (  'Nation_fk'                                   /*** exclude fileds initialy listed                                          ***/
                                 ,'Region5'                                     /***                                                                         ***/
                                 ,'Region6'                                     /***                                                                         ***/
                                 ,'Ctry_EditorialName'                          /***                                                                         ***/
                                 ,'Question_Year'                               /***                                                                         ***/
                                 ,'GRI'                                         /***                                                                         ***/
                                 ,'GRI_rd_1d'                                   /***                                                                         ***/
                                 ,'GRI_scaled'                                  /***                                                                         ***/
                                 ,'SHI'                                         /***                                                                         ***/
                                 ,'SHI_rd_1d'                                   /***                                                                         ***/
                                 ,'SHI_scaled'            )                     /***                                                                         ***/
  AND                                                                           /*** FILTER:                                                                 ***/
          [COLUMN_NAME] NOT LIKE  '%ny[1-3]'                                    /*** exclude complimentary "ny" fileds redundant                             ***/
  AND                                                                           /*** FILTER:                                                                 ***/
          [COLUMN_NAME] NOT LIKE  '%ny[a-f]'                                    /*** exclude complimentary "ny" fileds redundant                             ***/
         ORDER BY                                                               /*** sorting order usesd to order stored & extra variables alphabetically    ***/
          ', '                                                                  /*** including comma delimiter                        -> as part of sorting  ***/
        +                                                                       /*** concatenated to...                               -> as part of sorting  ***/
          [COLUMN_NAME]                                                         /*** Fiels including all Q Abb Std (StdVarName)       -> as part of sorting  ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--- > main dataset ------------------------------------------------------------------------------------------------------------------------------------------*/
N'
  FROM [vr___03_cDB_W&Xtra_byCtry&Year]
'
/*--- < main dataset ------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N' JOIN '
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--- > population --------------------------------------------------------------------------------------------------------------------------------------------*/
N'
       (  SELECT 
                  [FYr]                 = [Field_year]
                , [Nfk]                 = [Nation_fk]
                , [UN_TotalPopulation]  =  CAST([Cnt] AS BIGINT)
             FROM [forum].[dbo].[Pew_Nation_Age_Sex_Value]
                , [forum].[dbo].[Pew_Field]
           WHERE  [Sex_fk]       = 0
             AND  [Age_fk]       = 0
             AND  [Scenario_id]  = 3
             AND  [Field_fk]
                = [Field_pk]                                ) POP
'
/*--- < population --------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
    ON            [FYr]                 = [Question_Year]
   AND            [Nfk]                 = [Nation_fk]
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
 ) SELECTED
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
	EXEC              (@ALLCODE)                                    /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___04_cDB_SemiWide_byCtry&Yr]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___04_cDB_SemiWide_byCtry&Yr]
SELECT *    INTO [forum_ResAnal].[dbo].[vr___04_cDB_SemiWide_byCtry&Yr]
            FROM                 [dbo].[vr___04_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___04_cDB_SemiWide_byCtry&Yr]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _007_lt__DBSemiW_VLab___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 007    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr___04_lab_SemiWide_byCtry&Yr]                         <<<<<     ***/
/***             This table has Stata statements for labeling variables included in dataset for public download                                              ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ALTER  VIEW                      [dbo].[vr___04v]        AS
SELECT * FROM
(
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
  SELECT                                                                        /*** SELECT statement                                                        ***/
 	        [k]         =  ROW_NUMBER() OVER(ORDER BY [COLUMN_NAME])            /***        sorting by field names                                           ***/
          , [VarName]   =  SUBSTRING( (S.[COLUMN_NAME]                          /***        field names, including Q Abb Std in vr_04 (also CY, *nyN, *ny@ ) ***/
                                    +  '                         ' ),1, 25)     /***        add spaces for aligig next secion of code                        ***/
          , [VarLabel]  =  ' "' + L.[attr] + '" '                               /***        Q wordings for labeling Stata variables                          ***/
    FROM                                                                        /*** from...                                                                 ***/
            [INFORMATION_SCHEMA].[COLUMNS]                            S         /*** [FResAn] Sys view which includes all field names as rows                ***/
 INNER JOIN                                                                     /*** join                                                                    ***/
            [forum]..[Pew_Question_Std]                               Q         /*** Q Std Table: adds PK and excludes vars as *nyN, *ny@ or region-CY, etc. ***/
         ON S.[COLUMN_NAME] = Q.[Question_abbreviation_std]                     /***       (join by Std Q Name)                                              ***/
 INNER JOIN                                                                     /*** join                                                                    ***/
            [forum]..[Pew_Question_Attributes]                        L         /*** Q Attributes                                                            ***/
		 ON Q.[Question_Std_pk] = L.[Question_Std_fk]                           /***       (join by PK/FK)                                                   ***/
    WHERE                                                                       /*** FILTER:                                                                 ***/
              S.[TABLE_NAME]   = 'vr___04_cDB_SemiWide_byCtry&Yr'               /***          only fields for the view vr_04 ( from System View )            ***/
      AND     L.[attk]         = '80CharsLabel'                                 /***          only Qs with Stata (80Chars) var name ( from Attrib table )    ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
)  SETA
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___04v_labSemiWide_byCtry&Yr]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___04v_labSemiWide_byCtry&Yr]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___04v_labSemiWide_byCtry&Yr]
            FROM                 [dbo].[vr___04v]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___04_lab_SemiWide_byCtry&Yr]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _008_lt__PubSelVarDat___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 008    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vrp__01_cDB_SelDataBYCtry&Year]                         <<<<<     ***/
/***             This table filters selected values from [vr___03_cDB_W&Xtra_byCtry&Year] aggregated by country/religion & year                              ***/
/***             The data will be available for public download                                                                                              ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
ALTER  VIEW                      [dbo].[vrp__01_]        AS
SELECT * FROM
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'(
   SELECT
          [Nation_fk]
         ,[Region5]
         ,[Region6]
         ,[Ctry_EditorialName]
         ,[Question_Year]
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from joined tables *************************************************************/
/***************************************************************************************************************************************************************/
(                                                                               /*** parenthesis to include query for the cell to be stuffed                 ***/
    SELECT                                                                      /*** SELECT statement                                                        ***/
                ', ['                                                           /*** comma delimiter & bracet                                                ***/
              + Q.[attr]                                                        /*** concatenated to Q Attr for Pulic Set Q name                             ***/
              + ']   =   ['                                                     /*** concatenated to bracets and equal sign                                  ***/
              + S.[Question_Abbreviation_Std]                                   /*** concatenated to Q Abbr Std                                              ***/
              + CASE                                                            /*** concatenated to the beginning of case clause                            ***/
			         WHEN             C.[attr] IS NOT NULL                      /*** concatenated to condition attrib of scale exists                        ***/
				     THEN ']   *  ' + C.[attr]                                  /*** concatenated to value of the attribute                                  ***/
                     ELSE ']'                                                   /*** concatenated to string for all other cases                              ***/
                 END                                                            /*** concatenated to the endof case clause                                   ***/
    FROM                                                                        /*** from...                                                                 ***/
                          [forum]..[Pew_Question_Std]                S          /*** Std Q is the first joined table, which includes Q names as rows         ***/
  INNER JOIN                                                                    /*** (inner) joined to...                                                    ***/
          ( SELECT * FROM [forum]..[Pew_Question_Attributes]                    /*** Q Attribs is first joined in order to...                                ***/
                    WHERE [attk] = 'In_PubDataSet'   )      Q                   /***                       ... select variables and get public names ,,,     ***/
     ON      S.[Question_Std_pk] = Q.[Question_Std_fk]                          /***                       ... by merging pk/fk                              ***/
   LEFT JOIN                                                                    /*** (left) joined to...                                                     ***/
          ( SELECT * FROM [forum]..[Pew_Question_Attributes]                    /*** Q Attribs is also joined in order to...                                 ***/
                    WHERE [attk] = 'PubDS_scale'     )      C                   /***                       ... include re-scaling values                     ***/
     ON      S.[Question_Std_pk] = C.[Question_Std_fk]                          /***                       ... by merging pk/fk                              ***/
   LEFT JOIN                                                                    /*** (left) joined to...                                                     ***/
          ( SELECT * FROM [forum]..[Pew_Question_Attributes]                    /*** Q Attribs is also joined in order to...                                 ***/
                    WHERE [attk] = 'PubDS_sort'      )      O                   /***                       ... include Q sorting order                       ***/
     ON      S.[Question_Std_pk] = O.[Question_Std_fk]                          /***                       ... by merging pk/fk                              ***/
   ORDER BY  O.[attr]                                                           /*** sorting order using the linked value                                    ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
)                                                                               /*** parenthesis to include query for the cell to be stuffed                 ***/
/***************************************************************************************************************************************************************/
/*************************************************************************** End of the selection (into text, in a cell) of a comma delimited list of fields ***/
/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--- > source dataset ----------------------------------------------------------------------------------------------------------------------------------------*/
N'
FROM
                 [forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]
'
/*--- < source dataset ----------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*=============================================================================================================================================================*/
N') SelPubDS '                                                                  /*** CLOSE parenthesis including the whole query for the view                ***/
/***************************************************************************************************************************************************************/
/*** checking / executing SQL statement that has been stored as a string variable ******************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                                 /***        display the currently stored code (to be executed)               ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
	EXEC              (@ALLCODE)                                                /***        execute the code that has been stored as text                    ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vrp__01_cDB_SelDataBYCtry&Year]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vrp__01_cDB_SelDataBYCtry&Year]
SELECT * INTO    [forum_ResAnal].[dbo].[vrp__01_cDB_SelDataBYCtry&Year]
            FROM                 [dbo].[vrp__01_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vrp__01_cDB_SelDataBYCtry&Year]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _009_lt__PubSelVarLab___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 009    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vrp__01_lab_SelDataBYCtry&Year]                         <<<<<     ***/
/***             This table has Stata statements for labeling variables included in dataset for public download                                              ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ALTER  VIEW                      [dbo].[vrp__01v]        AS
SELECT
 	   [k]           =  ROW_NUMBER() OVER(ORDER BY [k])
	 , [rowforlabel] 
  FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
   SELECT
 	    [k]           =                                                  N.[attr]
	  , [rowforlabel] = 
	                       'label var  ' 
                        +                                                Q.[attr]
                        +  RIGHT('                           "', (33-LEN(Q.[attr])))
                        +                                                L.[attr]
                        +  '"  '
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                          [forum]..[Pew_Question_Std]                S 
  INNER JOIN
             ( SELECT * FROM [forum]..[Pew_Question_Attributes] WHERE [attk] = 'In_PubDataSet' )   Q    ON S.[Question_Std_pk] = Q.[Question_Std_fk]
   LEFT JOIN
             ( SELECT * FROM [forum]..[Pew_Question_Attributes] WHERE [attk] = '80CharsLabel'  )   L    ON S.[Question_Std_pk] = L.[Question_Std_fk]
   LEFT JOIN
             ( SELECT * FROM [forum]..[Pew_Question_Attributes] WHERE [attk] = 'PubDS_sort'    )   N    ON S.[Question_Std_pk] = n.[Question_Std_fk]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/

UNION ALL

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
             SELECT
 	    [k]           =    994
	  , [rowforlabel] =   'note:  Please NOTE that variable notes list decoded values for each variable of this dataset'
   UNION ALL SELECT
 	    [k]           =    995
	  , [rowforlabel] =   'note Nation_fk:  Principal code key (numeric) for '
                         + CAST((SELECT COUNT(DISTINCT Nation_fk) FROM [vrp__01_]) AS VARCHAR(3))
                         + ' countries'
   UNION ALL SELECT
 	    [k]           =    996
	  , [rowforlabel] =   'note Region5:  Five regions: '
                         + (SELECT STUFF((SELECT DISTINCT ', ' + [Region5] FROM [vrp__01_]
                                                 ORDER BY ', ' + [Region5] FOR XML PATH('')),1,2,''))
   UNION ALL SELECT
 	    [k]           =    997
	  , [rowforlabel] =   'note Region6:  Six regions: '
                         + (SELECT STUFF((SELECT DISTINCT ', ' + [Region6] FROM [vrp__01_]
                                                 ORDER BY ', ' + [Region6] FOR XML PATH('')),1,2,''))
   UNION ALL SELECT
 	    [k]           =    998
	  , [rowforlabel] =   'note Ctry_EditorialName:  '
                         + CAST((SELECT COUNT(DISTINCT Nation_fk) FROM [vrp__01_]) AS VARCHAR(3))
                         + ' countries'
   UNION ALL SELECT
 	    [k]           =    999
	  , [rowforlabel] =   'note Question_Year:  Years od data included, from '
                         + CAST((SELECT MIN(Question_Year) FROM [vrp__01_]) AS VARCHAR(4))
                         + ' to '
                         + CAST((SELECT MAX(Question_Year) FROM [vrp__01_]) AS VARCHAR(4))
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/

UNION ALL

/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
   SELECT
 	    [k]           =   1000 + ROW_NUMBER() OVER(ORDER BY Q.[attr], [Answer_value_std])
	  , [rowforlabel] =   'note ' + Q.[attr] + ':   ' + Cast([Answer_value_std] as varchar(4)) + '   '+ [Answer_Wording_std]
  FROM [forum].[dbo].[Pew_Q&A_Std]                                                                   S
  INNER JOIN
             ( SELECT * FROM [forum]..[Pew_Question_Attributes] WHERE [attk] = 'In_PubDataSet' )   Q    ON S.[Question_Std_fk] = Q.[Question_Std_fk]
  WHERE NOT ( S.[Question_abbreviation_std] LIKE '%_ny' and [Answer_value_std] > 0.01)
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
)  SETA
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/




/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vrp__01v_labSelDataBYCtry&Year]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vrp__01v_labSelDataBYCtry&Year]
SELECT * INTO    [forum_ResAnal].[dbo].[vrp__01v_labSelDataBYCtry&Year]
            FROM                 [dbo].[vrp__01v]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vrp__01_lab_SelDataBYCtry&Year]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _010_lt__DBIndexbyCRY___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 010    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***           >>>>>         This script creates a lookup table [forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr]                       <<<<<           ***/
/***                                                                                                                                                         ***/
/***     NOTES:                                                                                                                                              ***/
/***           This view includes indexes by country and median indexes for region, and for the world.                                                       ***/
/***                                                                                                                                                         ***/
/***           The median is the numerical value separating the higher half from the lower half of the data (it can differ from the mean).                   ***/
/***            We find it by arranging all the observations from lowest value to highest value and picking the middle one.                                  ***/
/***            If there is an even number of observations, median is defined  to be the mean of the two middle values.                                      ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___05_]
AS
/***************************************************************************************************************************************************************/
WITH PREv4
  AS
      (
/***************************************************************************************************************************************************************/
        SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                [Nation_fk]
              , [Region5_code]
              , [Region6_code]
              , [Region5]
              , [Region6]
              , [Ctry_EditorialName]
              , [Index_Year]
                 =   CASE
                          WHEN [Question_Year] <  2011 THEN 'MID-' + STR([Question_Year], 4,0)
                          ELSE                              'END-' + STR([Question_Year], 4,0)
                          END
              , [Index_Abbreviation]
              , [Index_Name]             = [Question_short_wording_std]
              , [Index_Value]
              , [I_Rounded_Value]
              , [I_Scaled_Value]
              , [Year]                   = [Question_Year]
        FROM
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [Nation_fk]
              ,   [Ctry_EditorialName]
              ,   [Region5]
              ,   [Region6]
              ,   [Question_Year]
              ,   [GRI] -- as float works for rounding: don't re-cast
              ,   [SHI] -- as float works for rounding: don't re-cast
              ,   [GFI] -- as float works for rounding: don't re-cast
          FROM    [vr___03_cDB_W&Xtra_byCtry&Year]
/***************************************************************************************************************************************************************/
        )                                                         B
/***************************************************************************************************************************************************************/
        UNPIVOT
          (
             [Index_Value]
        FOR
             [Index_Abbreviation]
        in (
                       [GRI]  /*** GRI Yindex (d prec/scale)    ***/
                     , [SHI]  /*** SHI Yindex (d prec/scale)    ***/
                     , [GFI]  /*** GFI Yindex (d prec/scale)    ***/
                                                       ) ) as UNPIVTD1
/***************************************************************************************************************************************************************/
        JOIN
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [N2]        = [Nation_fk]
              ,   [Y2]        = [Question_Year]
              ,   [GRI]       = [GRI_rd_1d]    -- already rounded: don't re-cast
              ,   [SHI]       = [SHI_rd_1d]    -- already rounded: don't re-cast
              ,   [GFI]       = [GFI_rd_1d]    -- already rounded: don't re-cast
          FROM    [vr___03_cDB_W&Xtra_byCtry&Year]
/***************************************************************************************************************************************************************/
        )                                                         B
/***************************************************************************************************************************************************************/
        UNPIVOT
          (
             [I_Rounded_Value]
        FOR
             [I2]
        in (
                       [GRI]  /*** GRI Yindex rounded ***/
                     , [SHI]  /*** SHI Yindex rounded ***/
                     , [GFI]  /*** GFI Yindex rounded ***/
                                                       ) ) as UNPIVTD2
/***************************************************************************************************************************************************************/
        ON        [N2]        = [Nation_fk]
        AND       [Y2]        = [Question_Year]
        AND       [I2]        = [Index_Abbreviation]
/***************************************************************************************************************************************************************/
        JOIN
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [N3]        = [Nation_fk]
              ,   [Y3]        = [Question_Year]
              ,   [GRI]       = [GRI_scaled]    -- already scaled: don't re-cast
              ,   [SHI]       = [SHI_scaled]    -- already scaled: don't re-cast
              ,   [GFI]       = [GFI_scaled]    -- already scaled: don't re-cast
          FROM    [vr___03_cDB_W&Xtra_byCtry&Year]
/***************************************************************************************************************************************************************/
        )                                                         B
/***************************************************************************************************************************************************************/
        UNPIVOT
          (
             [I_Scaled_Value]
        FOR
             [I3]
        in (
                       [GRI]  /*** GRI Yindex scaled ***/
                     , [SHI]  /*** SHI Yindex scaled ***/
                     , [GFI]  /*** GFI Yindex scaled ***/
                                                       ) ) as UNPIVTD3
/***************************************************************************************************************************************************************/
        ON        [N3]        = [Nation_fk]
        AND       [Y3]        = [Question_Year]
        AND       [I3]        = [Index_Abbreviation]
/***************************************************************************************************************************************************************/
        JOIN
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [QAS]       = [Question_abbreviation_std]
              ,                 [Question_short_wording_std]

          FROM    [forum].[dbo].[Pew_Question_Std]
/***************************************************************************************************************************************************************/
        )                                                         Q
/***************************************************************************************************************************************************************/
        ON        [QAS]       = [Index_Abbreviation]
/***************************************************************************************************************************************************************/
        JOIN
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [Region5_code]  = [Region_pk]
              ,   [Region5_]      = [Region_EditorialName]
          FROM    [forum].[dbo].[Pew_Region]
/***************************************************************************************************************************************************************/
        )                                                         R5
/***************************************************************************************************************************************************************/
        ON        [Region5_]  = [Region5]
/***************************************************************************************************************************************************************/
        JOIN
/***************************************************************************************************************************************************************/
        (
/***************************************************************************************************************************************************************/
        SELECT 
                  [Region6_code]  = [Region_pk]
              ,   [Region6_]      = [Region_EditorialName]
          FROM    [forum].[dbo].[Pew_Region]
/***************************************************************************************************************************************************************/
        )                                                         R6
/***************************************************************************************************************************************************************/
        ON        [Region6_]  = [Region6]
/***************************************************************************************************************************************************************/
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/



/***************************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT *
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*** Set of data ... *******************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
         [RIYv_row]           =  ROW_NUMBER()
                                 OVER(ORDER BY
                                                 [level]              DESC
                                               , [Nation_fk]
                                               , [Index_abbreviation]
                                               , [Year]                     )
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       , [Index_Year]
       , [level]
       , [Region5_code]
       , [Region6_code]
       , [Nation_fk]
       , [Region5]
       , [Region6]
       , [Ctry_EditorialName]
       , [Index_abbreviation]
       , [Index_name]
       , [Index_value]
       , [I_Rounded_value]
       , [I_Scaled_value]     = CASE
                                    WHEN     [I_Scaled_value] IS NOT NULL         THEN [I_Scaled_value]
                                    WHEN     [Index_value] >= [low|lowest]
                                         AND [Index_value] <= [low|highest]       THEN 1
                                    WHEN     [Index_value] >= [moderate|lowest]
                                         AND [Index_value] <= [moderate|highest]  THEN 2
                                    WHEN     [Index_value] >= [high|lowest]
                                         AND [Index_value] <= [high|highest]      THEN 3
                                    WHEN     [Index_value] >= [very high|lowest]
                                         AND [Index_value] <= [very high|highest] THEN 4
                                END
       , [Year]
       , [ByRegion6]          = CASE
                                    WHEN [level] IN ( 1, 2   ) THEN 1
                                    ELSE                            0
                                END
       , [ByRegion5]          = CASE
                                    WHEN [level] IN ( 1, 2.5 ) THEN 1
                                    ELSE                            0
                                END
       , [ByWorld]           = CASE
                                    WHEN [level] IN ( 1, 3   ) THEN 1
                                    ELSE                            0
                                END
       , [ByWorld&Region]    = CASE
                                    WHEN [level] IN ( 2, 3   ) THEN 1
                                    ELSE                            0
                                END
FROM
/*** >>> country, region, and world joined to set of cutpoints *************************************************************************************************/
/***************************************************************************************************************************************************************/
/*** country, region, and world  *******************************************************************************************************************************/
(
/*** country level *********************************************************************************************************************************************/
SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
         [Index_Year]
       , [level]                 =  1
       , [Region5_code]
       , [Region6_code]
       , [Nation_fk]
       , [Region5]
       , [Region6]
       , [Ctry_EditorialName]
       , [Index_abbreviation]
       , [Index_name]
       , [Index_value]
       , [I_Rounded_value]
       , [I_Scaled_value]
       , [Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
  FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       PREv4                                                                                                                    /*** common table expression ***/
/********************************************************************************************************************************************* country level ***/
UNION ALL
/*** median index by year and region 6 *************************************************************************************************************************/
SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
         [Index_Year]
       , [level]                 =  2
       , [Region5_code]          =  NULL
       , [Region6_code]
       , [Nation_fk]             =           [Region6_code]
       , [Region5]               =  ''
       , [Region6]
       , [Ctry_EditorialName]    =  'All countires in ' + [Region6]
       , [Index_abbreviation]
       , [Index_name]
       , [Index_value]           =       (AVG([Index_value]))    /* avg 2 middle values if needed */
       , [I_Rounded_value]       = round((AVG([Index_value])),1) /* avg 2 middle values if needed */
       , [I_Scaled_value]        = NULL
       , [Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
(
/*** > include StOrd & MedPos **********************************************************************************************************************************/
/*     Notice that:                                                                                                                                            */
/*                  [StOrd]  will have the numeric sorting order of rows by values                                                                             */
/*                  [MedPos] will have the position in the sorted list:                                                                                        */
/*                           in three cases:  | 1  |  2  | 3 |                                                                                                 */
/*                           the median is the second value:  (3+1)/2 = 2                                                                                      */
/***************************************************************************************************************************************************************/
SELECT 
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       [StOrd]                = ROW_NUMBER()
                                OVER 
                                (PARTITION BY  
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                              ,[Region6]
                                 ORDER BY
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                              ,[Region6]
                                              ,[Index_value]
                                                                                )                     /**/
      ,[MedPos]               = (((CAST
                                 ((COUNT(*)
                                   OVER 
                                   (PARTITION BY  [Index_abbreviation]
                                                 ,[Index_Year]
                                                 ,[Region6]
                                                                       )) AS DECIMAL (6,2)))+1) / 2)  /**/
      ,[Region6_code]
      ,[Nation_fk]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Year]
      ,[Index_Year]
      ,[Index_name]
      ,[Index_abbreviation]
      ,[Index_value]
  FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       PREv4                                                                                                                    /*** common table expression ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/********************************************************************************************************************************** < include StOrd & MedPos ***/
)                                                                                                                                                             B
/***************************************************************************************************************************************************************/
/*     Notice that: In an odd number of observations, the position is an integer, then we can say:                                                             */
/*                  [StOrd] = [MedPos]                                                                                                                         */
/*                  In an even number of observations, the position is between the two middle values, then we need:                                            */
/*                  [StOrd] = ([MedPos] +/- 0.5)                                                                                                               */
/***************************************************************************************************************************************************************/
WHERE
      StOrd >= (MedPos - 0.5)       
  AND
      StOrd <= (MedPos + 0.5)
/***************************************************************************************************************************************************************/
/*  We can have one or two middle values, we group by the other variables                                                                                      */
/***************************************************************************************************************************************************************/
GROUP BY
         [Region6_code]
       , [Region6]
       , [Year]
       , [Index_Year]
       , [Index_name]
       , [Index_abbreviation]
/*************************************************************************************************************************** median index by year and region ***/
UNION ALL
/*** median index by year and region 5 *************************************************************************************************************************/
SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
         [Index_Year]
       , [level]                 =  2.5
       , [Region5_code]
       , [Region6_code]          =  NULL
       , [Nation_fk]             =           [Region5_code]
       , [Region5]
       , [Region6]               =  ''
       , [Ctry_EditorialName]    =  'All countires in ' + [Region5]
       , [Index_abbreviation]
       , [Index_name]
       , [Index_value]           =       (AVG([Index_value]))    /* avg 2 middle values if needed */
       , [I_Rounded_value]       = round((AVG([Index_value])),1) /* avg 2 middle values if needed */
       , [I_Scaled_value]        = NULL
       , [Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
(
/*** > include StOrd & MedPos **********************************************************************************************************************************/
/*     Notice that:                                                                                                                                            */
/*                  [StOrd]  will have the numeric sorting order of rows by values                                                                             */
/*                  [MedPos] will have the position in the sorted list:                                                                                        */
/*                           in three cases:  | 1  |  2  | 3 |                                                                                                 */
/*                           the median is the second value:  (3+1)/2 = 2                                                                                      */
/***************************************************************************************************************************************************************/
SELECT 
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       [StOrd]                = ROW_NUMBER()
                                OVER 
                                (PARTITION BY  
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                              ,[Region5]
                                 ORDER BY
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                              ,[Region5]
                                              ,[Index_value]
                                                                                )                     /**/
      ,[MedPos]               = (((CAST
                                 ((COUNT(*)
                                   OVER 
                                   (PARTITION BY  [Index_abbreviation]
                                                 ,[Index_Year]
                                                 ,[Region5]
                                                                       )) AS DECIMAL (6,2)))+1) / 2)  /**/
      ,[Region5_code]
      ,[Nation_fk]
      ,[Region5]
      ,[Ctry_EditorialName]
      ,[Year]
      ,[Index_Year]
      ,[Index_name]
      ,[Index_abbreviation]
      ,[Index_value]
  FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       PREv4                                                                                                                    /*** common table expression ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/********************************************************************************************************************************** < include StOrd & MedPos ***/
)                                                                                                                                                             B
/***************************************************************************************************************************************************************/
/*     Notice that: In an odd number of observations, the position is an integer, then we can say:                                                             */
/*                  [StOrd] = [MedPos]                                                                                                                         */
/*                  In an even number of observations, the position is between the two middle values, then we need:                                            */
/*                  [StOrd] = ([MedPos] +/- 0.5)                                                                                                               */
/***************************************************************************************************************************************************************/
WHERE
      StOrd >= (MedPos - 0.5)
  AND
      StOrd <= (MedPos + 0.5)
/***************************************************************************************************************************************************************/
/*  We can have one or two middle values, we group by the other variables                                                                                      */
/***************************************************************************************************************************************************************/
GROUP BY
         [Region5_code]
       , [Region5]
       , [Year]
       , [Index_Year]
       , [Index_name]
       , [Index_abbreviation]
/*************************************************************************************************************************** median index by year and region ***/
UNION ALL
/*** world median index by year ********************************************************************************************************************************/
SELECT
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
         [Index_Year]
       , [level]                 =  3
       , [Region5_code]          =  10000
       , [Region6_code]          =  10000
       , [Nation_fk]             =  10000
       , [Region5]               =  'World'
       , [Region6]               =  'World'
       , [Ctry_EditorialName]    =  'All countires in the world'
       , [Index_abbreviation]
       , [Index_name]
       , [Index_value]           =       (AVG([Index_value]))    /* avg 2 middle values if needed */
       , [I_Rounded_value]       = round((AVG([Index_value])),1) /* avg 2 middle values if needed */
       , [I_Scaled_value]        = NULL
       , [Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/***************************************************************************************************************************************************************/
(
/*** > include StOrd & MedPos **********************************************************************************************************************************/
/*     Notice that:                                                                                                                                            */
/*                  [StOrd]  will have the numeric sorting order of rows by values                                                                             */
/*                  [MedPos] will have the position in the sorted list:                                                                                        */
/*                           in three cases:  | 1  |  2  | 3 |                                                                                                 */
/*                           the median is the second value:  (3+1)/2 = 2                                                                                      */
/***************************************************************************************************************************************************************/
SELECT 
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       [StOrd]                = ROW_NUMBER()
                                OVER 
                                (PARTITION BY  
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                 ORDER BY
                                               [Index_abbreviation]
                                              ,[Index_Year]
                                              ,[Index_value]
                                                                                )                     /**/
      ,[MedPos]               = (((CAST
                                 ((COUNT(*)
                                   OVER 
                                   (PARTITION BY  [Index_abbreviation]
                                                 ,[Index_Year]
                                                                       )) AS DECIMAL (6,2)))+1) / 2)  /**/
      ,[Nation_fk]
      ,[Ctry_EditorialName]
      ,[Year]
      ,[Index_Year]
      ,[Index_name]
      ,[Index_abbreviation]
      ,[Index_value]
  FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
       PREv4                                                                                                                    /*** common table expression ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/********************************************************************************************************************************** < include StOrd & MedPos ***/
)                                                                                                                             B
/***************************************************************************************************************************************************************/
/*     Notice that: In an odd number of observations, the position is an integer, then we can say:                                                             */
/*                  [StOrd] = [MedPos]                                                                                                                         */
/*                  In an even number of observations, the position is between the two middle values, then we need:                                            */
/*                  [StOrd] = ([MedPos] +/- 0.5)                                                                                                               */
/***************************************************************************************************************************************************************/
WHERE
      StOrd >= (MedPos - 0.5)
  AND
      StOrd <= (MedPos + 0.5)
/***************************************************************************************************************************************************************/
/*  We can have one or two middle values, we group by the other variables                                                                                      */
/***************************************************************************************************************************************************************/
GROUP BY
         [Year]
       , [Index_Year]
       , [Index_name]
       , [Index_abbreviation]
/***************************************************************************************************************************************************************/
)                                                                                                                                                           CRW
/******************************************************************************************************************************** country, region, and world ***/
JOIN
(
/*** > set of cutpoints to calculate scaled values *************************************************************************************************************/
  SELECT *
    FROM
         (
           SELECT 
                   DISTINCT                                            /* so, no need to select year   */
                   [LP]         = [Level] + '|' + [Point]
                  ,[CutPoint]
                  ,[Field_type]
              FROM [forum].[dbo].[Pew_Index_Cut_Points]
                 , [forum].[dbo].[Pew_Field]
             WHERE
                   [Field_fk]
                  =[Field_pk]
                                                                ) AS P /* alias of table to be pivoted */
    PIVOT (AVG ([CutPoint]) 
           FOR  [LP]
            IN (
                      [low|lowest]
                    , [low|highest]
                    , [moderate|lowest]
                    , [moderate|highest]
                    , [high|lowest]
                    , [high|highest]
                    , [very high|lowest]
                    , [very high|highest]
                                            ))  as pivoted
/************************************************************************************************************* < set of cutpoints to calculate scaled values ***/
)                                                                                                                                                            CP
/***************************************************************************************************************************************************************/
ON
         [Index_abbreviation]
       = [Field_type]
/***************************************************************************************************************************************************************/
/************************************************************************************************* <<< country, region, and world joined to set of cutpoints ***/
/***************************************************************************************************************************************************************/
)  formerview
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr]
            FROM                 [dbo].[vr___05_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr] WHERE [Index_abbreviation] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _011_lt__LongData_ALL___R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 011    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***           >>>>>         This script creates a lookup table [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]                       <<<<<           ***/
/***                                                                                                                                                         ***/
/***     NOTES:                                                                                                                                              ***/
/***             This view includes numeric values and wordings, as stored & aggregated by country/religion & year & variable (long format)                  ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE varchar(max)
declare @CODEBEG varchar(max)
declare @MYCODE1 varchar(max)
declare @MYCODE2 varchar(max)
declare @MYCODE3 varchar(max)
declare @MYCODE4 varchar(max)
declare @MYCODE5 varchar(max)
declare @ENDCODE varchar(max)
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @CODEBEG = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S01 *****************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
N'
ALTER  VIEW                      [dbo].[vr___06_]        AS
SELECT * FROM
(
/***************************************************************************************************************************************************************/
'
/*** < S01 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S02 *****************************************************************************************************************************************************/
N'
SELECT
       [v_Basic_row] = ROW_NUMBER()OVER(ORDER BY
                                                  [Nation_fk]
                                                 ,[Question_Year]
                                                 ,[QA_std]
                                                 ,[Locality_fk]
                                                 ,[Answer_fk]     )
      ,[ValSource]
      ,[entity]
      ,[note]
      ,[link_fk]
      ,[Nation_fk]
      ,[Locality_fk]
      ,[Religion_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Locality]
      ,[Religion]
      ,[Question_Year]
      ,[QSk]
      ,[QAS]
      ,[QA_std]
      ,[QW_std]
      ,[Answer_value]
      ,[answer_wording]
      ,[answer_wording_std]
      ,[Question_fk]
      ,[Answer_fk]
      ,[Notes]
      ,[editable]               = CASE
                                       WHEN [note] LIKE ''%this field can be edited'' THEN 1
                                       WHEN [note] LIKE ''%eld should NOT be edited'' THEN 0
                                  END
      ,[CntWg]
'
/*** < S02 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > (begin seleccion from) ALL SETS OF DATA  ****************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
FROM
(
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < (begin seleccion from) ALL SETS OF DATA  ****************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @MYCODE1 = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** > Basic Data: NPR  ****************************************************************************************************************************************/
---   Long set of data including numeric values and descriptive wordings.
---   At levels: country, country/religious group, & country/province
---   Notes
---        - In order to keep consistent to previuos years, data by Province currently belonging to South Sudan
---          should considered data for Sudan before 2010
---        - In order to avoid changing the final set,data previously used for Northern Cyprus
---          should be excluded (current decision)
---        - Although we have REAL data by province for North Korea, we do not use them
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/* MYCODE1   >  */
SELECT
        [ValSource] =   ''vr01LNA''
      , [entity]             = CASE
                                    WHEN [entity]         = ''CR&P'' THEN ''Not Yet Stored in DB''
                                    WHEN [entity]         = ''Ctry'' THEN ''Stored by Country''
                                    WHEN [entity]         = ''RGrp'' THEN ''Stordred by Religion Group (& Ctry)''
                                    WHEN [Question_Year]  < 2012
                                     AND [entity]         = ''Prov'' THEN ''Stored by Locality (should be aggregated)''
                                    WHEN [Question_Year] >= 2012
                                     AND [entity]         = ''Prov'' THEN ''Stored by Country (using Locality code)''
                               END
      , [note]               = ''updated on '' + CONVERT(VARCHAR(11),GETDATE(),9) + '' --  this field can be edited''
      , [link_fk]
      , [Nation_fk]
      , [Locality_fk]
      , [Religion_fk]
      , [Region5]
      , [Region6]
      , [Ctry_EditorialName]
      , [Locality]           = CASE
                                    WHEN [Locality]       = '''' THEN ''not detailed''
                                    WHEN [Locality]      != '''' THEN [Locality]
                               END
      , [Religion]           = CASE
                                    WHEN [Religion]       = '''' THEN ''not detailed''
                                    WHEN [Religion]      != '''' THEN [Religion]
                               END
      , [Question_Year]
      , [QA_std]             = CASE
                                    WHEN [Question_Year]  < 2012
                                     AND [entity]         = ''Prov'' THEN [QA_std] + ''__p''
                                    ELSE                                  [QA_std]
                               END
      , [QW_std]
 --   , [Answer_value]
      , [Answer_value]       =      CAST([Answer_value] AS nvarchar)
      , [answer_wording]
      , [answer_wording_std]
      , [Question_fk]
      , [Answer_fk]
      , [Notes]
      , [CntWg]              = 1
FROM
        [vr___01_cDB_Long__NoAggregated]
/*  <   MYCODE1 */
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*****************************************************************************************************************************************  Basic Data: NPR  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @MYCODE2 = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** > PDAbC province data (before 2012) aggregated at country level  ******************************************************************************************/
---   Long set of data aggregating both numeric values and descriptive wordings.
---   (Notes same as above)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/* MYCODE2   >  */
SELECT
        [ValSource]          = ''vr05WCY''
      , [entity]             = ''Province, aggregated by Country''
      , [note]               = ''updated on '' + CONVERT(VARCHAR(11),GETDATE(),9) + '' --  this field should NOT be edited''
      , [link_fk]            = NULL
      , [Nation_fk]          =       D1.[Nation_fk]
      , [Locality_fk]        = NULL
      , [Religion_fk]        = NULL
      , [Region5]            =       D1.[Region5]
      , [Region6]            =       D1.[Region6]
      , [Ctry_EditorialName] =       D1.[Ctry_EditorialName]
      , [Locality]           = ''aggregated by country''
      , [Religion]           = ''not detailed''
      , [Question_Year]      =       D2.[Question_Year]
      , [QA_std]             =       D2.[QA_std]
      , [QW_std]             =       D2.[QW_std]
      , [Answer_value]       = CASE
                               WHEN  D3.[Answer_value] IS NULL
                               THEN  ''0''
                               ELSE
                                CAST(D3.[Answer_value] AS nvarchar)
                               END
      , [Answer_wording]     = CASE
                               WHEN  D3.[Answer_wording] IS NULL
                               THEN  ''not detailed''
                               ELSE  D3.[Answer_wording]
                               END
      , [Answer_wording_std] = CASE
                               WHEN  D3.[Answer_wording_std] IS NULL
                               THEN  ''No cases were found''
                               ELSE  D3.[Answer_wording_std]
                               END
      , [Question_fk]        =  NULL
      , [Answer_fk]          =  NULL
      , [Notes]              = ''not detailed''
      , [CntWg]              = 1
  FROM 
       ( SELECT 
                DISTINCT
                [Nation_fk]
               ,[Region5]
               ,[Region6]
               ,[Ctry_EditorialName]
               ,[Question_Year]      AS [QY]
           FROM    [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
          WHERE    [Question_Year]  < 2012                             )  D1
INNER JOIN
       ( SELECT 
                DISTINCT
                [Question_Year]
               ,[QA_std]         /* SHI_04_b not coded for 2008 */
               ,[QW_std]
               ,[Question_fk]
           FROM    [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
          WHERE    [entity]         = ''Prov''
            AND    [Question_Year]  < 2012                             )  D2
   ON      D1.[QY]
         = D2.[Question_Year]
LEFT JOIN
(
SELECT
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[QA_std]
      ,[QW_std]
      ,[Answer_value]         = SUM([Answer_value])
      ,[answer_wording]       = STUFF(
                                      ( SELECT 
                                                ''|''
                                              + ISNULL([Answer_wording], '''')
                                         FROM         
                                                    ( SELECT *
                                                        FROM    [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
                                                       WHERE    [entity]         = ''Prov''
                                                         AND    [Question_Year]  < 2012                             )  S2
                                        WHERE      S1.[Nation_fk]
                                                 = S2.[Nation_fk]
                                             AND   S1.[Question_Year]
                                                 = S2.[Question_Year]
                                             AND   S1.[QA_std]
                                                 = S2.[QA_std]
                                     FOR XML PATH('''') ), 1, 1, '''')
      ,[answer_wording_std]
      ,[Question_fk]
  FROM 
       ( SELECT *
           FROM    [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated]
          WHERE    [entity]         = ''Prov''
            AND    [Question_Year]  < 2012                             )  S1
GROUP BY
          [Nation_fk]
        , [Region5]
        , [Region6]
        , [Ctry_EditorialName]
        , [Question_Year]
        , [QA_std]
        , [QW_std]
        , [answer_wording_std]
        , [Question_fk]
                                                                                                                                                    )  D3
   ON      D1.[Nation_fk]
         = D3.[Nation_fk]
  AND      D2.[Question_Year]
         = D3.[Question_Year]
  AND      D2.[QA_std]
         = D3.[QA_std]
  AND      D2.[QW_std]
         = D3.[QW_std]
/*  <   MYCODE2 */
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*************************************************************************************************************************************  province data PDAbC  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @MYCODE3 = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** > ACVbC other aggregated and calculated variables by country  *********************************************************************************************/
---   Long set of data aggregating both numeric values and descriptive wordings.
/***************************************************************************************************************************************************************/
/*** > major select statement for ACVbC  ***********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/*  <   MYCODE3 */
SELECT
        [ValSource] =   ''vr05WCY''
--    ,                        ACVC.[QA_link]
--    ,                        ACVC.[AV_link]
      , [entity]             = CASE
                                    WHEN ACVC.[QA_std] LIKE ''%_ny1''
                                      OR ACVC.[QA_std] LIKE ''%_ny2''
                                      OR ACVC.[QA_std] LIKE ''%_ny3''
                                      OR ACVC.[QA_std] LIKE ''%_summ%_ny[a-f]''
                                    THEN ''row for detailed no/yes distributions''
                                    ELSE ''Calculated & Aggregated variables''
                               END
      , [note]               = ''updated on '' + CONVERT(VARCHAR(11),GETDATE(),9) + '' --  this field should NOT be edited''
      , [link_fk]            = NULL
      , [Nation_fk]          =       ACVC.[Nation_fk]
      , [Locality_fk]        = NULL
      , [Religion_fk]        = NULL
      , [Region5]            =       ACVC.[Region5]
      , [Region6]            =       ACVC.[Region6]
      , [Ctry_EditorialName] =       ACVC.[Ctry_EditorialName]
      , [Locality]           = ''not detailed''
      , [Religion]           = ''not detailed''
      , [Question_Year]      =       ACVC.[Question_Year]
      , [QA_std]             =       ACVC.[QA_std]
      , [QW_std]             =       QAWD.[QW_std]
 --   , [Answer_value]       =       ACVC.[Answer_value]
      , [Answer_value]       =  CAST(ACVC.[Answer_value] AS nvarchar)
      , [Answer_wording]     = ''aggregated value: not detailed''
      , [Answer_wording_std] =       QAWD.[AW_std]
      , [Question_fk]        =  NULL
      , [Answer_fk]          =  NULL
      , [Notes]              = ''not detailed''
      , [CntWg]              = 1
FROM
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < major select statement fro ACVbC  ***********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** >                                .  ***********************************************************************************************************************/
/*=============================================================================================================================================================*/
                                                                                /*** begining of query Lev2 enclosed between parenthesis                     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
( SELECT

         [Nation_fk]
      ,  [Region5]
      ,  [Region6]
      ,  [Ctry_EditorialName]
	  ,  [Question_Year]
	  ,  [QA_std]
	  ,  [Answer_value]
	  ,  [AV_link] = CASE 
                          WHEN [Answer_value] >= 2
                           AND [QA_std]        = ''GRI_19_x''
                          THEN  1
                          WHEN [QA_std]        = ''GRI_20''
                          THEN  0
                          WHEN [Answer_value] >= 2
                           AND [QA_std]        = ''SHI_01_x''
                          THEN  1
                          ELSE [Answer_value]            END
      ,  [QA_link] = CASE 
                          WHEN                 [QA_std]     LIKE ''%_ny%''      /*** including ALL NO/YES Std Qs for creating toplines                     ***/
                           AND                 [QA_std] NOT LIKE ''%_ny'' 
                          THEN STUFF(          [QA_std]        ,         
                          ((CHARINDEX(''_ny'', [QA_std])) + 3) , 1, '''')
                          ELSE                 [QA_std]                   END
    FROM  [forum_ResAnal].[dbo].[vr___03_cDB_W&Xtra_byCtry&Year]   SWCY
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'  UNPIVOT  '
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** beginning of unpivoting specifications                                  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
  (
     [Answer_value]
FOR
     [QA_std]
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** beginning of listing of variables                                       ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
in (
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
/*** List variables: Begin stuffing function to remove the first comma in the list to be retrieved (parenthesis not needed) ************************************/
STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
/***************************************************************************************************************************************************************/
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement                                                        ***/
          ', '                                                                  /*** comma delimiter                                                         ***/
        +                                                                       /*** concatenated to...                                                      ***/
          [COLUMN_NAME]                                                         /*** field in system view which includes all field names                     ***/
    FROM                                                                        /*** from...                                                                 ***/
          [INFORMATION_SCHEMA].[COLUMNS]                                  TabA  /*** name of the system view which includes all field names                  ***/
	LEFT JOIN                                                                   /*** joined to a query...                                                    ***/
		( SELECT DISTINCT                                                       /*** SELECT (+ DISTINCT) statement                                           ***/
					[QA_std]                                                    /*** all variable names before aggregating data                              ***/
			FROM [forum_ResAnal].[dbo].[vr___01_cDB_Long__NoAggregated] ) TabB  /*** from NPR long view which includes all original variables' names         ***/
		ON                  [COLUMN_NAME] = [QA_std]                            /*** matching by field/variable names                                        ***/
	WHERE                                                                       /*** begining of filters to be applied...                                    ***/
          [TABLE_NAME]  = 'vr___03_cDB_W&Xtra_byCtry&Year'                      /*** TO INCLUDE ONLY desired view including calculated/aggegated fields      ***/
    AND                                                                         /*** second filter to be applied...                                          ***/
          [QA_std]         IS NULL                                              /*** new calculated/aggegated fields do not match                            ***/
    AND                                                                         /*** third filter to be applied...                                           ***/
          [COLUMN_NAME]    NOT IN (                                             /*** exclude field names not correspnding to calculated/aggegated vars       ***/
                                     'Nation_fk'                                /*** ...                                                                     ***/
                                   , 'Ctry_EditorialName'                       /*** ...                                                                     ***/
                                   , 'Question_Year'                            /*** ...                                                                     ***/
                                   , 'Region5'                                  /*** ...                                                                     ***/
                                   , 'Region6'                                  /*** ...                                                                     ***/
                             --    , 'UN_TotalPopulation'                       /*** ...  not added in the step of data processed being used                 ***/
                                   , 'GFI'                                      /*** ...  DECIMAL(38,32)  instead of  (38,2)                                 ***/
                                   , 'GRI'                                      /*** ...  DECIMAL(38,32)  instead of  (38,2)                                 ***/
                                   , 'SHI'                                      /*** ...  DECIMAL(38,32)  instead of  (38,2)                                 ***/
                                   , 'GFI_rd_1d'                                /*** ...  DECIMAL(38,1)   instead of  (38,2)                                 ***/
                                   , 'GRI_rd_1d'                                /*** ...  DECIMAL(38,1)   instead of  (38,2)                                 ***/
                                   , 'SHI_rd_1d'                                /*** ...  DECIMAL(38,1)   instead of  (38,2)                                 ***/
                                                                         )      /*** end of third filter                                                     ***/
    ----AND...                                                                  /*** do not exclude field names for extra detailed No/Yes distributions      ***/
    FOR XML PATH('')                                                            /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                               /*** parenthesis to include query for the cell to be stuffed                 ***/
/***************************************************************************************************************************************************************/
, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N' 
   )    '
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** end of listing of variables                                             ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'    )                                                         AS   MUPV    '
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** end (& alias) of unpivoting specifications                              ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
                                                                                                                                                     )  AS ACVC
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** end & alias of query Lev2 enclosed between parenthesis                  ***/
/*=============================================================================================================================================================*/
/*** <                                .  ***********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'LEFT JOIN'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** >                                .  ***********************************************************************************************************************/
/*=============================================================================================================================================================*/
                                                                                /*** begining of query Lev2 enclosed between parenthesis                     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
( SELECT 
         [QAStd_pk]
       , [QA_std]    = [Question_abbreviation_std]
       , [QW_std]    = [Question_wording_std]
       , [QsWstd]    = [Question_short_wording_std]
       , [AV_std]    = [Answer_value_std]
       , [AW_std]    = [Answer_Wording_std]
    FROM
         [forum].[dbo].[Pew_Q&A_Std]
   WHERE
         [Question_abbreviation_std] LIKE ''[S,G,X][F,H,R,S]%''                                                                  )  AS QAWD
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                /*** end & alias of query Lev2 enclosed between parenthesis                  ***/
/*=============================================================================================================================================================*/
/*** <                                .  ***********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N' ON
     (       ACVC.[QA_link]
           = QAWD.[QA_std]
       AND   ACVC.[AV_link]
           = QAWD.[AV_std]         )
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*  <   MYCODE3 */
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/************************************************************************************************************************  aggregated/calculated data ACVbC  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @MYCODE4 = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** > uIbCR (unrounded) indexes aggregated by country and median indexes by regions  **************************************************************************/
---   Long set of data coming directly from set of indexes.
/***************************************************************************************************************************************************************/
/*** > major select statement for uIbCR  ***********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/*  <   MYCODE4 */
SELECT
        [ValSource] =   ''vr04uICY''
      , [entity]             = ''Indexes & Median Indexes''
      , [note]               = ''updated on '' + CONVERT(VARCHAR(11),GETDATE(),9) + '' --  this field should NOT be edited''
      , [link_fk]            = NULL
      , [Nation_fk]          =       [Nation_fk]
      , [Locality_fk]        = NULL
      , [Religion_fk]        = NULL
      , [Region5]            =       [Region5]
      , [Region6]            =       [Region6]
      , [Ctry_EditorialName] =       [Ctry_EditorialName]
      , [Locality]           = ''not detailed''
      , [Religion]           = ''not detailed''
      , [Question_Year]      =       [Year]
      , [QA_std]             =       [Index_abbreviation]
      , [QW_std]             =       [Index_name]
      , [Answer_value]       =  CASE
                                    WHEN                                       [Index_value]                       =  0    THEN  ''0''
                                    WHEN                                       [Index_value]                       = 10    THEN ''10''
                                    ELSE LEFT                           ((CAST([Index_value] AS nvarchar(max))), 
                                          (LEN                          ((CAST([Index_value] AS nvarchar(max))))
                                           - PATINDEX(''%[1-9]%'', REVERSE((CAST([Index_value] AS nvarchar(max))))) + 1)  )
                                    END
      , [Answer_wording]     = ''not detailed''
      , [Answer_wording_std] = ''scale 0 - [+.] - 10''
      , [Question_fk]        =  NULL
      , [Answer_fk]          =  NULL
      , [Notes]              = ''not detailed''
      , [CntWg]              = 1
FROM
        [vr___05_cDB_Index_byCtryReg&Yr]
/*  <   MYCODE4 */
'
/********************************************************************************************************  country indexes & by region median indexes uIbCR  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @MYCODE5 = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** > RIbCR indexes aggregated by country and median indexes by regions (rounded to one decimal)  *************************************************************/
---   Long set of data coming directly from set of indexes.
/***************************************************************************************************************************************************************/
/*** > major select statement for RIbCR  **********************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
/* MYCODE5   >  */
SELECT
        [ValSource] =   ''vr04RICY''
      , [entity]             = ''Indexes & Median Indexes''
      , [note]               = ''updated on '' + CONVERT(VARCHAR(11),GETDATE(),9) + '' --  this field should NOT be edited''
      , [link_fk]            = NULL
      , [Nation_fk]          =       [Nation_fk]
      , [Locality_fk]        = NULL
      , [Religion_fk]        = NULL
      , [Region5]            =       [Region5]
      , [Region6]            =       [Region6]
      , [Ctry_EditorialName] =       [Ctry_EditorialName]
      , [Locality]           = ''not detailed''
      , [Religion]           = ''not detailed''
      , [Question_Year]      =       [Year]
      , [QA_std]             =       [Index_abbreviation] + ''_rd_1d''
      , [QW_std]             =       [Index_name]         + '' (rounded to one decimal)''
      , [Answer_value]       =  CAST([I_Rounded_value] AS nvarchar)
      , [Answer_wording]     = ''not detailed''
      , [Answer_wording_std] = ''scale 0.0 - [+.1] - 10.0''
      , [Question_fk]        =  NULL
      , [Answer_fk]          =  NULL
      , [Notes]              = ''not detailed''
      , [CntWg]              = 1
FROM
        [vr___05_cDB_Index_byCtryReg&Yr]
/*  <   MYCODE5 */
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/************************************************************************************************  rounded country indexes & by region median indexes RIbCR  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @ENDCODE = 
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > (finalize seleccion from) ALL SETS OF DATA  *************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
)  ASoD
         LEFT JOIN
                    ( SELECT 
                               [QSk]  = [Question_Std_pk]
                             , [QAS]  = [Question_abbreviation_std]
                        FROM   [forum]..[Pew_Question_std]                     ) PQS
                ON
                      [QAS]   
                    =  CASE  
                            WHEN                   [QA_std]     LIKE ''%_ny%''
                               AND                 [QA_std] NOT LIKE ''%_ny''
                              THEN STUFF(          [QA_std]        ,         
                              ((CHARINDEX(''_ny'', [QA_std])) + 3) , 1, '''')
                            WHEN                   [QA_std]     LIKE ''%__p''
                               AND                 [QA_std] NOT LIKE ''%_top''
                              THEN STUFF(          [QA_std]        ,         
                              ((CHARINDEX(''__p'', [QA_std])) ) , 3, '''')
                            ELSE                   [QA_std]                          END
)  FormerView
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < (finalize seleccion from) ALL SETS OF DATA  *************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***     >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
        @CODEBEG                                                    /***                - initial code -                                                     ***/
    +   @MYCODE1                                                    /***   NPR          [vr_01w_DB_Long_NoAggregated]            ------>     170,623         ***/
    + N'UNION ALL'                                                  /***                - link -                                                             ***/
    +   @MYCODE2                                                    /***   PDAbC       *Province, aggregated by Country          ------>      27,608         ***/
    + N'UNION ALL'                                                  /***                - link -                                                             ***/
    +   @MYCODE3                                                    /***   ACVbC       *Calculated & Aggregated variables        ------>      78,908         ***/
    + N'UNION ALL'                                                  /***                - link -                                                             ***/
    +   @MYCODE4                                                    /***   uIbCR       *Country & Region (unrounded) indexes     ------>       4,398         ***/
    + N'UNION ALL'                                                  /***                - link -                                                             ***/
    +   @MYCODE5                                                    /***   RIbCR       *Country & Region rounded indexes (.X)    ------>       4,398         ***/
    +   @ENDCODE                                                    /***                - final code -                                                       ***/
                                                                    /***                                                                     285,935         ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***     <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<     ***/
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
--	EXEC dbo.LongPrint @CODEBEG                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @MYCODE1                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @MYCODE2                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @MYCODE3                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @MYCODE4                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @MYCODE5                                     /***        display the currently stored code (to be executed)                           ***/
--	EXEC dbo.LongPrint @ENDCODE                                     /***        display the currently stored code (to be executed)                           ***/
/***************************************************************************************************************************************************************/
--	EXEC              (@MYCODE1)                                    /***        ... partial excecution ...                                                   ***/
--	EXEC              (@MYCODE2)                                    /***        ... partial excecution ...                                                   ***/
--	EXEC              (@MYCODE3)                                    /***        ... partial excecution ...                                                   ***/
--	EXEC              (@MYCODE4)                                    /***        ... partial excecution ...                                                   ***/
--	EXEC              (@MYCODE5)                                    /***        ... partial excecution ...                                                   ***/
/***************************************************************************************************************************************************************/
--		EXEC dbo.LongPrint @ALLCODE                                 /***        display the currently stored code (to be executed)                           ***/
/***************************************************************************************************************************************************************/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
		EXEC  (@ALLCODE)
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]
            FROM                 [dbo].[vr___06_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ] WHERE [QA_std] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _012_lt__LD_forRTeam____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 012    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>         This script creates a lookup table of long shaped data to be used by researchers                                            <<<<<     ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___07_]
AS
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT *
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*** Set of data including selected variables ******************************************************************************************************************/
SELECT
       [row]                     =   [v_Basic_row]
      ,[Region5]
      ,[Ctry_EditorialName]
      ,[Locality]
      ,[Religion]
      ,[Question_Year]
      ,[QA_std]
      ,[QW_std]
      ,[Answer_value]
      ,[answer_wording]
      ,[answer_wording_std]
  FROM [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]
 WHERE [QA_std] NOT LIKE '%_ny%' 
    OR [QA_std]     LIKE '%_ny' 
/*** Set of data including selected variables ******************************************************************************************************************/
)    DISV
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/










/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___07_cDB_MainLongData_byCYQ]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___07_cDB_MainLongData_byCYQ]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___07_cDB_MainLongData_byCYQ]
            FROM                 [dbo].[vr___07_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___07_cDB_MainLongData_byCYQ] WHERE [QA_std] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _013_lt__weighted_LD____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 013    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the view [forum_ResAnal].[dbo].[vr___08_cDB_Weights_f_TopLines]                                 <<<<<     ***/
/***             This view includes numeric weights by year at different levels of aggregation                                                               ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___08_]
AS
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT *
FROM
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(
/*** Main Set of Data for the View *****************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT 
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
      [v_Basic_row]  = ROW_NUMBER()OVER(ORDER BY [Nation_fk], [Question_Year])
    , [Nation_fk]
    , [Question_Year]
    , [WTWg]         = (CAST( (1/ (SUM([cw]) OVER(PARTITION BY [Question_Year]           ))) AS DECIMAL(10,8))) * 100
    , [R5Wg]         = (CAST( (1/ (SUM([cw]) OVER(PARTITION BY [Question_Year], [Region5]))) AS DECIMAL(10,8))) * 100
    , [R6Wg]         = (CAST( (1/ (SUM([cw]) OVER(PARTITION BY [Question_Year], [Region6]))) AS DECIMAL(10,8))) * 100
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
FROM
    (
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT 
       DISTINCT
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[cw]                = CAST([CntWg] AS DECIMAL(10,8))
  FROM [forum_ResAnal].[dbo].[vr___06_cDB_LongData_ALL_byCYQ]
 WHERE
       [Nation_fk]  < 1000
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    )                                                                                                                                                   DistCtry
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
--ORDER BY [Nation_fk], [Question_Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*** Main Set of Data for the View *****************************************************************************************************************************/
    )                                                                                                                                                  CalcWghts
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/










/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___08_cDB_Weights_f_TopLines]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___08_cDB_Weights_f_TopLines]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___08_cDB_Weights_f_TopLines]
            FROM                 [dbo].[vr___08_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___08_cDB_Weights_f_TopLines] WHERE [WTWg] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _014_lt__BTopLines_W____decoded.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
--- 2016-06-02 13:04:52 ==>  script 014    ------------------------------------------------------------------------------------------ 


ALTER VIEW [dbo].[vr___09_] AS



WITH   CTE01
AS
      (
          SELECT
                 [Q_Year]    =                  CAST(D.[Question_Year] AS VARCHAR)
                ,[QS_fk]     =                         [QSk]
                ,[Variable]  = CASE
                                   WHEN                [QA_std]     LIKE '%_ny%' 
                                    AND                [QA_std] NOT LIKE '%_ny' 
                                   THEN STUFF(         [QA_std]      ,         
                                   ((CHARINDEX('_ny',  [QA_std])) + 3) , 1, '')
                                   ELSE                [QA_std]
                               END
                ,[Q_Wording] =                         [QW_std]
                ,[Value]     = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) > 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1.00'
                                   ELSE         ISNULL([Answer_value], '0.00')
                               END
                ,[A_Wording] = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2))  = 0)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    'No cases were found'
                                   WHEN
                                           (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) >= 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1+ cases were found'
                                   ELSE    [answer_wording_std]
                               END
                ,[CntWg]
                ,[WTWg]
            FROM [vr___06_cDB_LongData_ALL_byCYQ] D
               , [vr___08_cDB_Weights_f_TopLines] W
           WHERE          D.[Nation_fk]
                        = W.[Nation_fk]
             AND          D.[Question_Year]
                        = W.[Question_Year]
             AND          D.[Locality]
                       IN            (
                                        'aggregated by country'
                                      , 'not detailed'           )
             AND          D.[QA_std] NOT IN   ('GFI', 'GRI', 'SHI', 'GRI_20_05_x1')
             AND          D.[QA_std] NOT LIKE 'XSG_S_%'
             AND          D.[QA_std] NOT LIKE '%_d'+'[a,b]'
             AND          D.[QA_std] NOT LIKE '%_rd_1d'
      )



,      CTE02
AS
      (
                SELECT
                        DISTINCT
                        [NumYr]          = [Question_Year]
                      , [TxtYr]          = CAST(               [Question_Year]   AS VARCHAR)
                      , [Nations]        = CAST(COUNT(DISTINCT [Nation_fk]    )  AS VARCHAR)
                 FROM   [vr___06_cDB_LongData_ALL_byCYQ]
                WHERE   [Nation_fk] < 1000
             GROUP BY   [Question_Year]
      )



,      CTE03
AS
      (
          SELECT
                 [RYCNT]       = 'N' + [Q_Year]
                ,[RYPCT]       = 'P' + [Q_Year]
                ,[Variable]
                ,[Value]
                ,[Number]      =     SUM([CntWg])
                ,[Percentage]  =     SUM([WTWg])
           FROM   
                 [CTE01]
        GROUP BY
                 [Q_Year]
                ,[Variable]
                ,[Value]
      )




,      CTE04
AS
      (
          SELECT
                [M]
              , [x]  = '[' + [M] + '] = STR(ISNULL(MAX([' + [M] + [F]
              , [v]  = '[' + [M] + ']'
              , [s]  = SUBSTRING([M],2,2) +'|'+ RIGHT([M],4) +'|'+ LEFT([M],1)
              , [a]  = SUBSTRING([M],2,2)
              , [y]  =                          RIGHT([M],4)
              , [f]  =                                             LEFT([M],1)
              , [e]  = ''
              , [d]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = 2007
                       THEN                         'baseline year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr])) - 1 ) FROM [CTE02] )
                       THEN                         'previous year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr]))     ) FROM [CTE02] )
                       THEN                         'latest year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       THEN                         'year'
                       ELSE ' ending'
                        END
              , [p]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) <  2011
                       THEN                         'JUN '
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) >= 2011
                       THEN                         'DEC '
                       ELSE RIGHT([M], 4  )
                        END
              , [n]  = [N]
              , [c]  = 'COUNTRIES'
              , [t]  = [T]
              , [l]  = 
      '--------------------------------------------------------------------------------------------------------------------------------------------------------'
       FROM (

             SELECT
                      DISTINCT
                      [M] = [RYPCT]
                    , [N] = '  %  OF  '
                    , [T] = '100 %'
                    , [F] = ']),0),12,0)'
               FROM                          [CTE03]
            UNION
            ALL
             SELECT
                      DISTINCT
                      [M] = [RYCNT]
                    , [N] = 'NUMBER OF'
                    , [T] = [Nations]
                    , [F] = ']),0), 3,0)+''%'''
               FROM                                          [CTE03]
                                                         ,   [CTE02]
                      WHERE [RYCNT] = 'N' + [TxtYr]

            ) LongReshaped
      )



,      CTE05
AS
      (
          SELECT
                  DISTINCT
                  [Variable]
                 ,[Q_Wording]
                 ,[Value]
                 ,[A_Wording]
            FROM  [CTE01]
      )



,      CTE06
AS
      (
          SELECT
                  DISTINCT
                  [QS_fk]
                 ,[Variable]
                 ,[Q_Wording]
            FROM  [CTE01]
      )



,      CTE07
AS
      (
          SELECT
                   [Variable]
                 , [label]     = ISNULL([attr], '')
            FROM
                   [CTE06]
         LEFT
         JOIN 
                 ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'TopLine label'                     )  ATT7
              ON   [QS_fk]
                 = [Question_Std_fk]
      )



,      CTE08
AS
      (
          SELECT
                   [Variable]
                 , [note]      = ISNULL([attr], '')
            FROM
                   [CTE06]
        LEFT
        JOIN 
                   ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                             WHERE [attk]
                                 = 'TLC label'                           )  ATT8
              ON   [QS_fk]
                 = [Question_Std_fk]
      )



,      CTE09
AS
      (
          SELECT
                    [V]         = [Variable]
                  , [S]         = ISNULL([attr], '')
             FROM
                    [CTE06]
             LEFT
             JOIN 
                    ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                              WHERE [attk]
                                  = 'SortKey'                           )  ATT9
                 ON [QS_fk]
                   =[Question_Std_fk]
      )



,      CTE10
AS
      (
          SELECT
                  M.Variable
                , M.Value
                ,   Wording   =  L.A_Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE05]                                                           L
     INNER
     JOIN

     (SELECT
          Variable
        , Value
,[N2007] = STR(ISNULL(MAX([N2007]),0), 3,0)+'%',[P2007] = STR(ISNULL(MAX([P2007]),0),12,0),[N2008] = STR(ISNULL(MAX([N2008]),0), 3,0)+'%',[P2008] = STR(ISNULL(MAX([P2008]),0),12,0),[N2009] = STR(ISNULL(MAX([N2009]),0), 3,0)+'%',[P2009] = STR(ISNULL(MAX([P2009]),0),12,0),[N2010] = STR(ISNULL(MAX([N2010]),0), 3,0)+'%',[P2010] = STR(ISNULL(MAX([P2010]),0),12,0),[N2011] = STR(ISNULL(MAX([N2011]),0), 3,0)+'%',[P2011] = STR(ISNULL(MAX([P2011]),0),12,0),[N2012] = STR(ISNULL(MAX([N2012]),0), 3,0)+'%',[P2012] = STR(ISNULL(MAX([P2012]),0),12,0),[N2013] = STR(ISNULL(MAX([N2013]),0), 3,0)+'%',[P2013] = STR(ISNULL(MAX([P2013]),0),12,0),[N2014] = STR(ISNULL(MAX([N2014]),0), 3,0)+'%',[P2014] = STR(ISNULL(MAX([P2014]),0),12,0)
FROM
                [CTE03]

  PIVOT   (       MAX([Percentage])
            FOR       [RYPCT]
            IN       (
 [P2007], [P2008], [P2009], [P2010], [P2011], [P2012], [P2013], [P2014]                       )   )   AS   pivt1       
  PIVOT   (       MAX([Number])
            FOR       [RYCNT]
            IN       (
 [N2007], [N2008], [N2009], [N2010], [N2011], [N2012], [N2013], [N2014]                       )   )   AS   pivt2       
  GROUP BY Variable, Value                                                                       )  M 

     ON   M.Variable = L.Variable
    AND   M.Value    = L.Value
      )



,      CTE11
AS
      (
          SELECT
                    [Variable]
                ,   [Value]
                ,   [Wording]   =  CASE
                                      WHEN [Value] = 500
                                      THEN
                                            '---------------------------------------------------'
                                          + '---------------------------------------------------'
                                          + '--------------------------------------------------'
                                      ELSE  ''                                                        END
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
            FROM
                    [CTE06] /* #QWording*/                                                             Q
     CROSS
      JOIN
                   (
                     SELECT *
                       FROM (SELECT  [Value] =  -5.00, [d]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([d]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
                     SELECT *
                       FROM (SELECT  [Value] =  -4.00, [p]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([p]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
                     SELECT *
                       FROM (SELECT  [Value] =  -3.00, [n]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([n]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -2.00, [c]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([c]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 200.00, [t]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([t]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 500.00, [e]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
                                                     ) ) tpivoted 
                                                                  )  F
      )



,      CTE12
AS
      (
          SELECT
                    [Variable]
                ,   [Value]
                ,   [Wording]   =  Q_Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
            FROM
                    [CTE06] /* #QWording*/                                                             Q
     CROSS
      JOIN
                   (
                     SELECT *
                       FROM (SELECT  [Value] =  -6.00
                                  ,[e]
                                  ,[M]
                             FROM  [CTE04] /* heading */       )   e
                              PIVOT             (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
                                                                  )  F
      )



,      CTE13
AS
      (
          SELECT
            Variable
        ,   Value
        ,   Wording   =  label
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE07] /* < #QLabel */                                                             Q
   CROSS
   JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = -7.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted )  F
      )



,      CTE14
AS
      (
          SELECT
            Variable
        ,   Value
        ,   Wording   =  note
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE08] /* #QNote */                                                            Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = 201.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
                                                     ) ) tpivoted )  F 
      )




SELECT
          vx1Row
          =  ROW_NUMBER()
             OVER(ORDER BY
                             [S]
                           , [Variable]
                           , [Value]
                                          )
        , Variable
        , Value
        , Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
     (
                 SELECT * FROM [CTE10]
       UNION ALL SELECT * FROM [CTE11]
       UNION ALL SELECT * FROM [CTE12]
       UNION ALL SELECT * FROM [CTE13]
       UNION ALL SELECT * FROM [CTE14]
                                          )   U
LEFT JOIN                      [CTE09]        S
       ON     [V] = [Variable]


 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _014_lt__BTopLines_W____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 014    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***           >>>>>         This script creates a lookup table [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]                       <<<<<           ***/
/***                                                                                                                                                         ***/
/***     NOTES:                                                                                                                                              ***/
/***           This view only includes aggregated numeric values                                                                                             ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
  IF (SELECT COUNT(*) FROM [INFORMATION_SCHEMA].[VIEWS] WHERE [TABLE_NAME] = 'TT_03') > 0
  DROP VIEW                                                                  [TT_03]
  GO
  IF (SELECT COUNT(*) FROM [INFORMATION_SCHEMA].[VIEWS] WHERE [TABLE_NAME] = 'TT_04') > 0
  DROP VIEW                                                                  [TT_04]
  GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
declare @VCODE00 nvarchar(max)
declare @VCODEC3 nvarchar(max)
declare @VCODEC4 nvarchar(max)
declare @VCODE01 nvarchar(max)
declare @VCODE02 nvarchar(max)
declare @VCODE03 nvarchar(max)
declare @VCODE04 nvarchar(max)
declare @VCODE05 nvarchar(max)
declare @VCODE06 nvarchar(max)
declare @VCODE07 nvarchar(max)
declare @VCODE08 nvarchar(max)
declare @VCODE09 nvarchar(max)
declare @VCODE_3 nvarchar(max)
declare @VCODE_4 nvarchar(max)
declare @VCODE10 nvarchar(max)
declare @VCODE11 nvarchar(max)
declare @VCODE12 nvarchar(max)
declare @VCODE13 nvarchar(max)
declare @VCODE14 nvarchar(max)
declare @VCODE15 nvarchar(max)
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
set @VCODE00 = 
/***************************************************************************************************************************************************************/
/*   >    00    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S00    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*--->   S001   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

ALTER VIEW [dbo].[vr___09_] AS

'
/*---<   S001   -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S00    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*   <    00    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
set @VCODEC3 = 
/***************************************************************************************************************************************************************/
/*   >    C3    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   SC3    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*--->   SC31   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

CREATE VIEW [dbo].[TT_03] AS

'
/*---<   SC31   -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   SC3    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*   <    C3    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
set @VCODEC4 = 
/***************************************************************************************************************************************************************/
/*   >    C4    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   SC4    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*--->   SC41   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

CREATE VIEW [dbo].[TT_04] AS

'
/*---<   SC41   -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   SC4    -- "alter view" statement ---------------------------------------------------------------------------------------------------------------------*/
/*   <    C4    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE01 = 
/***************************************************************************************************************************************************************/
/*   >    01    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S01    -- Selected Data from long set ----------------------------------------------------------------------------------------------------------------*/
/*--->   S011   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

WITH   CTE01
AS
      (
          SELECT
                 [Q_Year]    =                  CAST(D.[Question_Year] AS VARCHAR)
                ,[QS_fk]     =                         [QSk]
                ,[Variable]  = CASE
                                   WHEN                [QA_std]     LIKE ''%_ny%'' 
                                    AND                [QA_std] NOT LIKE ''%_ny'' 
                                   THEN STUFF(         [QA_std]      ,         
                                   ((CHARINDEX(''_ny'',  [QA_std])) + 3) , 1, '''')
                                   ELSE                [QA_std]
                               END
                ,[Q_Wording] =                         [QW_std]
                ,[Value]     = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) > 1)
                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
                                   THEN    ''1.00''
                                   ELSE         ISNULL([Answer_value], ''0.00'')
                               END
                ,[A_Wording] = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2))  = 0)
                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
                                   THEN    ''No cases were found''
                                   WHEN
                                           (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) >= 1)
                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
                                   THEN    ''1+ cases were found''
                                   ELSE    [answer_wording_std]
                               END
                ,[CntWg]
                ,[WTWg]
            FROM [vr___06_cDB_LongData_ALL_byCYQ] D
               , [vr___08_cDB_Weights_f_TopLines] W
           WHERE          D.[Nation_fk]
                        = W.[Nation_fk]
             AND          D.[Question_Year]
                        = W.[Question_Year]
             AND          D.[Locality]
                       IN            (
                                        ''aggregated by country''
                                      , ''not detailed''           )
             AND          D.[QA_std] NOT IN   (''GFI'', ''GRI'', ''SHI'', ''GRI_20_05_x1'')
             AND          D.[QA_std] NOT LIKE ''XSG_S_%''
             AND          D.[QA_std] NOT LIKE ''%_d''+''[a,b]''
             AND          D.[QA_std] NOT LIKE ''%_rd_1d''
      )

'
/*---<   S011    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S01    -- Selected Data from long set ----------------------------------------------------------------------------------------------------------------*/
/*   <    01    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE02 = 
/***************************************************************************************************************************************************************/
/*   >    02    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S02    -- Aggregated data by C & Y -------------------------------------------------------------------------------------------------------------------*/
/*--->   S021   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE02
AS
      (
                SELECT
                        DISTINCT
                        [NumYr]          = [Question_Year]
                      , [TxtYr]          = CAST(               [Question_Year]   AS VARCHAR)
                      , [Nations]        = CAST(COUNT(DISTINCT [Nation_fk]    )  AS VARCHAR)
                 FROM   [vr___06_cDB_LongData_ALL_byCYQ]
                WHERE   [Nation_fk] < 1000
             GROUP BY   [Question_Year]
      )

'
/*---<   S021    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S02    -- Aggregated data by C & Y -------------------------------------------------------------------------------------------------------------------*/
/*   <    02    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE03 = 
/***************************************************************************************************************************************************************/
/*   >    03    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S03    -- Aggregated data by C/Y/Q/A -----------------------------------------------------------------------------------------------------------------*/
/*--->   S031   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE03
AS
      (
          SELECT
                 [RYCNT]       = ''N'' + [Q_Year]
                ,[RYPCT]       = ''P'' + [Q_Year]
                ,[Variable]
                ,[Value]
                ,[Number]      =     SUM([CntWg])
                ,[Percentage]  =     SUM([WTWg])
           FROM   
                 [CTE01]
        GROUP BY
                 [Q_Year]
                ,[Variable]
                ,[Value]
      )


'
/*---<   S031    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S03    -- Aggregated data by C/Y/Q/A -----------------------------------------------------------------------------------------------------------------*/
/*   <    03    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE04 = 
/***************************************************************************************************************************************************************/
/*   >    04    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S04    -- Headings and other static rows by table by arranging field names and other elements to be used as code -------------------------------------*/
/*--->   S041   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE04
AS
      (
          SELECT
                [M]
              , [x]  = ''['' + [M] + ''] = STR(ISNULL(MAX(['' + [M] + [F]
              , [v]  = ''['' + [M] + '']''
              , [s]  = SUBSTRING([M],2,2) +''|''+ RIGHT([M],4) +''|''+ LEFT([M],1)
              , [a]  = SUBSTRING([M],2,2)
              , [y]  =                          RIGHT([M],4)
              , [f]  =                                             LEFT([M],1)
              , [e]  = ''''
              , [d]  = CASE
                       WHEN  LEFT([M], 1  )  = ''N''
                       AND  RIGHT([M], 4  )  = 2007
                       THEN                         ''baseline year,''
                       WHEN  LEFT([M], 1  )  = ''N''
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr])) - 1 ) FROM [CTE02] )
                       THEN                         ''previous year,''
                       WHEN  LEFT([M], 1  )  = ''N''
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr]))     ) FROM [CTE02] )
                       THEN                         ''latest year,''
                       WHEN  LEFT([M], 1  )  = ''N''
                       THEN                         ''year''
                       ELSE '' ending''
                        END
              , [p]  = CASE
                       WHEN  LEFT([M], 1  )  = ''N''
                       AND  RIGHT([M], 4  ) <  2011
                       THEN                         ''JUN ''
                       WHEN  LEFT([M], 1  )  = ''N''
                       AND  RIGHT([M], 4  ) >= 2011
                       THEN                         ''DEC ''
                       ELSE RIGHT([M], 4  )
                        END
              , [n]  = [N]
              , [c]  = ''COUNTRIES''
              , [t]  = [T]
              , [l]  = 
      ''--------------------------------------------------------------------------------------------------------------------------------------------------------''
       FROM (
'
/*---<   S041    ----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S042   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
             SELECT
                      DISTINCT
                      [M] = [RYPCT]
                    , [N] = ''  %  OF  ''
                    , [T] = ''100 %''
                    , [F] = '']),0),12,0)''
               FROM                          [CTE03]
            UNION
            ALL
             SELECT
                      DISTINCT
                      [M] = [RYCNT]
                    , [N] = ''NUMBER OF''
                    , [T] = [Nations]
                    , [F] = '']),0), 3,0)+''''%''''''
               FROM                                          [CTE03]
                                                         ,   [CTE02]
                      WHERE [RYCNT] = ''N'' + [TxtYr]
'
/*---<   S042    ----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S043   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
            ) LongReshaped
      )

'
/*---<   S043    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S04    -- Headings and other static rows by table by arranging field names and other elements to be used as code -------------------------------------*/
/*   <    04    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE05 = 
/***************************************************************************************************************************************************************/
/*   >    05    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S05    -- answer wordings ----------------------------------------------------------------------------------------------------------------------------*/
/*--->   S051   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE05
AS
      (
          SELECT
                  DISTINCT
                  [Variable]
                 ,[Q_Wording]
                 ,[Value]
                 ,[A_Wording]
            FROM  [CTE01]
      )

'
/*---<   S051    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S05    -- answer wordings ----------------------------------------------------------------------------------------------------------------------------*/
/*   <    05    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE06 = 
/***************************************************************************************************************************************************************/
/*   >    06    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S06    -- question wordings --------------------------------------------------------------------------------------------------------------------------*/
/*--->   S061   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE06
AS
      (
          SELECT
                  DISTINCT
                  [QS_fk]
                 ,[Variable]
                 ,[Q_Wording]
            FROM  [CTE01]
      )

'
/*---<   S061    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S06    -- question wordings --------------------------------------------------------------------------------------------------------------------------*/
/*   <    06    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE07 = 
/***************************************************************************************************************************************************************/
/*   >    07    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S07    -- 'TopLine label' from question attributes ---------------------------------------------------------------------------------------------------*/
/*--->   S071   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE07
AS
      (
          SELECT
                   [Variable]
                 , [label]     = ISNULL([attr], '''')
            FROM
                   [CTE06]
         LEFT
         JOIN 
                 ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = ''TopLine label''                     )  ATT7
              ON   [QS_fk]
                 = [Question_Std_fk]
      )

'
/*---<   S071    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S07    -- 'TopLine label' from question attributes ---------------------------------------------------------------------------------------------------*/
/*   <    07    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE08 = 
/***************************************************************************************************************************************************************/
/*   >    08    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S08    -- notes from question attributes -------------------------------------------------------------------------------------------------------------*/
/*--->   S081   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE08
AS
      (
          SELECT
                   [Variable]
                 , [note]      = ISNULL([attr], '''')
            FROM
                   [CTE06]
        LEFT
        JOIN 
                   ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                             WHERE [attk]
                                 = ''XNote01''                           )  ATT8
              ON   [QS_fk]
                 = [Question_Std_fk]
      )

'
/*---<   S081    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S08    -- notes from question attributes -------------------------------------------------------------------------------------------------------------*/
/*   <    08    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE09 = 
/***************************************************************************************************************************************************************/
/*   >    09    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S09    -- ABC ----------------------------------------------------------------------------------------------------------------------------------------*/
/*--->   S091   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE09
AS
      (
          SELECT
                    [V]         = [Variable]
                  , [S]         = ISNULL([attr], '''')
             FROM
                    [CTE06]
             LEFT
             JOIN 
                    ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                              WHERE [attk]
                                  = ''SortKey''                           )  ATT9
                 ON [QS_fk]
                   =[Question_Std_fk]
      )

'
/*---<   S091    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S09    -- @@@ ----------------------------------------------------------------------------------------------------------------------------------------*/
/*   <    09    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @VCODE_3 = 
/***************************************************************************************************************************************************************/
/*   >  CTE3    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
                      (@vCODEC3)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE01)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE02)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE03)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE04)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE05)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE06)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE07)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE08)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE09)                                    /***        ... partial excecution ...                                                   ***/
                   +            'SELECT * FROM CTE03'               /***        ... add final statement of temporar view ...                                 ***/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @VCODE_3                                     /***            display                                                                  ***/
	EXEC              (@VCODE_3)                                    /***        ... temporary view ...                                                       ***/
/***************************************************************************************************************************************************************/
/*   <  CTE3    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
set @VCODE_4 = 
/***************************************************************************************************************************************************************/
/*   >  CTE4    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
                      (@vCODEC4)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE01)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE02)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE03)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE04)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE05)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE06)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE07)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE08)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE09)                                    /***        ... partial excecution ...                                                   ***/
                   +            'SELECT * FROM CTE04'               /***        ... add final statement of temporar view ...                                 ***/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @VCODE_4                                     /***            display                                                                  ***/
	EXEC              (@VCODE_4)                                    /***        ... temporary view ...                                                       ***/
/***************************************************************************************************************************************************************/
/*   <  CTE4    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE10 = 
/***************************************************************************************************************************************************************/
/*   >    10    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S10    -- main body section --------------------------------------------------------------------------------------------------------------------------*/
/*--->   S101   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE10
AS
      (
          SELECT
                  M.Variable
                , M.Value
                ,   Wording   =  L.A_Wording
'
/*---<   S101    ----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S102   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
 (   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   )
/*---<   S102   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
+
/*--->   S103   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
FROM
        [CTE05]                                                           L
     INNER
     JOIN
'
/*---<   S103   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S104   -- subquery M ---------------------------------------------------------------------------------------------------------------------------------*/
/*--->   S104.1 -- part 1 of X of subquery M ------------------------------------------------------------------------------------------------------------------*/
N'
     (SELECT
          Variable
        , Value
'
/*---<   S104.1 -- part 1 of X of subquery M ------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S104.2 -- part 2 of X of subquery M: other row of headings nested in XML string cell in parentesis ---------------------------------------------------*/
 (   SELECT ',' + [x] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   )
/*---<   S104.2 -- part 2 of X of subquery M: other row of headings nested in XML string cell in parentesis ---------------------------------------------------*/
+
/*--->   S104.3 -- part 3 of X of subquery M ------------------------------------------------------------------------------------------------------------------*/
N'
FROM
                [CTE03]
'
/*---<   S104.3 -- part 3 of X of subquery M ------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S104.4 -- part 4 of X of subquery M: start pivoting percentages --------------------------------------------------------------------------------------*/
N'
  PIVOT   (       MAX([Percentage])
            FOR       [RYPCT]
            IN       (
'
/*---<   S104.4 -- part 4 of X of subquery M: start pivoting percentages --------------------------------------------------------------------------------------*/
+
/*--->   S104.5 -- part 5 of X of subquery M: list of sorted years nested in XML string cell (first comma removed through stuffing  function) -----------------*/
STUFF(
          (
               SELECT   DISTINCT
                        ', [' + [RYPCT] + ']'
                 FROM   [TT_03]
             ORDER BY
                        ', [' + [RYPCT] + ']'
                                               for xml path('')
          )
      , 1, 1, '')
/*---<   S104.5 -- part 5 of X of subquery M: list of sorted years nested in XML string cell (first comma removed through stuffing  function) -----------------*/
+
/*--->   S104.6 -- part 6 of X of subquery M: end pivoting percentages ----------------------------------------------------------------------------------------*/
N'                       )   )   AS   pivt1       '
/*---<   S104.6 -- part 6 of X of subquery M: end pivoting percentages ----------------------------------------------------------------------------------------*/
+
/*--->   S104.7 -- part 7 of X of subquery M: start pivoting counts -------------------------------------------------------------------------------------------*/
N'
  PIVOT   (       MAX([Number])
            FOR       [RYCNT]
            IN       (
'
/*---<   S104.7 -- part 7 of X of subquery M: start pivoting counts -------------------------------------------------------------------------------------------*/
+
/*--->   S104.8 -- part 8 of X of subquery M: list of sorted years nested in XML string cell (first comma removed through stuffing  function) -----------------*/
STUFF(
          (
               SELECT   DISTINCT
                        ', [' + [RYCNT] + ']'
                 FROM   [TT_03]
             ORDER BY
                        ', [' + [RYCNT] + ']'
                                               for xml path('')
          )
      , 1, 1, '')
/*---<   S104.8 -- part 8 of X of subquery M: list of sorted years nested in XML string cell (first comma removed through stuffing  function) -----------------*/
+
/*--->   S104.9 -- part 9 of X of subquery M: end pivoting counts ---------------------------------------------------------------------------------------------*/
N'                       )   )   AS   pivt2       '
/*---<   S104.9 -- part 9 of X of subquery M: end pivoting counts ---------------------------------------------------------------------------------------------*/
+
/*--->   S10410 -- part 10 of 10 of subquery M: aggregation statementend to end subquery ----------------------------------------------------------------------*/
N'
  GROUP BY Variable, Value                                                                       )  M 
'
/*---<   S10410 -- part 10 of 10 of subquery M: aggregation statementend to end subquery ----------------------------------------------------------------------*/
/*---<   S104   -- subquery M ---------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S105   -----------------------------------------------------------------------------------------------------------------------------------------------*/
  N'
     ON   M.Variable = L.Variable
    AND   M.Value    = L.Value
      )

'
/*---<   S105   -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S10    -- main body section --------------------------------------------------------------------------------------------------------------------------*/
/*   <    10    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE11 = 
/***************************************************************************************************************************************************************/
/*   >    11    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S11    -- presentation body rows ---------------------------------------------------------------------------------------------------------------------*/
/*--->   S111   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE11
AS
      (
          SELECT
                    [Variable]
                ,   [Value]
                ,   [Wording]   =  CASE
                                      WHEN [Value] = 500
                                      THEN
                                            ''---------------------------------------------------''
                                          + ''---------------------------------------------------''
                                          + ''--------------------------------------------------''
                                      ELSE  ''''                                                        END
'
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
 (   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   )
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
            FROM
                    [CTE06] /* #QWording*/                                                             Q
     CROSS
      JOIN
                   (
                     SELECT *
                       FROM (SELECT  [Value] =  -5.00, [d]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([d]) FOR [M] IN (
'
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
       UNION ALL
                     SELECT *
                       FROM (SELECT  [Value] =  -4.00, [p]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([p]) FOR [M] IN (
'
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
       UNION ALL
                     SELECT *
                       FROM (SELECT  [Value] =  -3.00, [n]     ,[M] FROM [CTE04] /* heading */) H 
                              PIVOT             (MAX([n]) FOR [M] IN (
'
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/

/*  code scripting checkd until this point --*/


N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -2.00, [c]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([c]) FOR [M] IN (
'
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 200.00, [t]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([t]) FOR [M] IN (
'
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 500.00, [e]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([e]) FOR [M] IN (
'
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
                                                     ) ) tpivoted '
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
                                                                  )  F
      )

'
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S11    -- presentation body rows ---------------------------------------------------------------------------------------------------------------------*/
/*   <    11    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE12 = 
/***************************************************************************************************************************************************************/
/*   >    12    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S12    -- presentation body rows: question wordings ----------------------------------------------------------------------------------------------------------------------------------------*/
/*--->   S121   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE12
AS
      (
          SELECT
                    [Variable]
                ,   [Value]
                ,   [Wording]   =  Q_Wording
'
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
 (   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   )
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis ----------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
            FROM
                    [CTE06] /* #QWording*/                                                             Q
     CROSS
      JOIN
                   (
                     SELECT *
                       FROM (SELECT  [Value] =  -6.00
                                    ,[e]
                                    ,[M]
                               FROM  [CTE04] /* heading */       )   e
                              PIVOT             (MAX([e]) FOR [M] IN (
'
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
STUFF((   SELECT ',' + [v] FROM /*e>*/ [TT_04] /*<e*/ ORDER BY [s] for xml path('')   ),1, 1,'')
/*---<   S11x   -- "value (pct/count) & year" headings nested in XML string cell in parentesis (1st comma removed) --------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*---<   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*--->   S11x   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'
                                                                  )  F
      )

'
/*---<   S12x    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S12    -- @@@ ----------------------------------------------------------------------------------------------------------------------------------------*/
/*   <    12    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE13 = 
/***************************************************************************************************************************************************************/
/*   >    13    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S13    -- labels ----------------------------------------------------------------------------------------------------------------------------------------*/
/*--->   S131   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'

,      CTE13
AS
      (
          SELECT
            Variable
        ,   Value
        ,   Wording   =  label
'
+

 (   SELECT ',' + [v] FROM [TT_04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/

+
N'
FROM
        [CTE07] /* < #QLabel */                                                             Q
   CROSS
   JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = -7.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
'
+

STUFF((SELECT ',' + [v] FROM [TT_04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/

+
N'                                                     ) ) tpivoted )  F
      )

'
/*---<   S131    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S13    -- @@@ ----------------------------------------------------------------------------------------------------------------------------------------*/
/*   <    13    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE14 = 
/***************************************************************************************************************************************************************/
/*   >    14    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S14    -- ABC ----------------------------------------------------------------------------------------------------------------------------------------*/
/*--->   S141   -----------------------------------------------------------------------------------------------------------------------------------------------*/
----- body rows of Q notes to be published  ----
N'

,      CTE14
AS
      (
          SELECT
            Variable
        ,   Value
        ,   Wording   =  note
'
+

 (   SELECT ',' + [v] FROM [TT_04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/

+

N'
FROM
        [CTE08] /* #QNote */                                                            Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = 201.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
'
+

STUFF((SELECT ',' + [v] FROM [TT_04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/

+
N'
                                                     ) ) tpivoted )  F 
      )

'
/*---<   S141    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S14    -- @@@ ----------------------------------------------------------------------------------------------------------------------------------------*/
/*   <    14    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE15 = 
/***************************************************************************************************************************************************************/
/*   >    15    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S15    -- ALL TABLES TOGUETHER -----------------------------------------------------------------------------------------------------------------------*/
/*--->   S151   -----------------------------------------------------------------------------------------------------------------------------------------------*/
N'


SELECT
          vx1Row
          =  ROW_NUMBER()
             OVER(ORDER BY
                             [S]
                           , [Variable]
                           , [Value]
                                          )
        , Variable
        , Value
        , Wording
'
+   -----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [v] FROM [TT_04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
+   -----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'
FROM
     (
                 SELECT * FROM [CTE10]
       UNION ALL SELECT * FROM [CTE11]
       UNION ALL SELECT * FROM [CTE12]
       UNION ALL SELECT * FROM [CTE13]
       UNION ALL SELECT * FROM [CTE14]
                                          )   U
LEFT JOIN                      [CTE09]        S
       ON     [V] = [Variable]


'
/*---<   S151    ----------------------------------------------------------------------------------------------------------------------------------------------*/
/*-  <   S15    -- @@@ ----------------------------------------------------------------------------------------------------------------------------------------*/
/*   <    15    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @ALLCODE = 
/***************************************************************************************************************************************************************/
/*   >   ALL    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
                      (@vCODE00)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE01)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE02)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE03)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE04)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE05)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE06)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE07)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE08)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE09)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE10)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE11)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE12)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE13)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE14)                                    /***        ... partial excecution ...                                                   ***/
                   +  (@vCODE15)                                    /***        ... partial excecution ...                                                   ***/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***            display                                                                  ***/
	EXEC              (@ALLCODE)                                    /*** execute complete SQL statement stored as a character string variable                ***/
/***************************************************************************************************************************************************************/
/*   <   ALL    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]
            FROM                 [dbo].[vr___09_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All] WHERE [QA_std] IS NULL
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _015_lt__PubTopLines____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 015    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr___10_cDB_Published_TopLines]                         <<<<<     ***/
/***             This table only includes aggregated numeric values                                                                                          ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE =
/*** > ALLCODE *************************************************************************************************************************************************/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
ALTER  VIEW                      [dbo].[vr___10_]        AS
SELECT * FROM
(
  SELECT
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
          [vx2Row]
          =  ROW_NUMBER()
             OVER(ORDER BY [vx1Row] )
        , [Variable]
        , [Value]
        , [Wording] = CASE WHEN         [Wording] LIKE ''% (N/Y options)'' 
                           THEN REPLACE([Wording],      '' (N/Y options)'', '''')
                           ELSE         [Wording]                                 END
        , [N2007]
        , [P2007]
        , [N' + (SELECT CAST((SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ]) -1 AS VARCHAR)) + N']
        , [P' + (SELECT CAST((SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ]) -1 AS VARCHAR)) + N']
        , [N' + (SELECT CAST((SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ])    AS VARCHAR)) + N']
        , [P' + (SELECT CAST((SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ])    AS VARCHAR)) + N']
        , [vx1Row]
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
+
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
N'
  FROM 
          [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]        T
   JOIN
      (
        SELECT
                  [V] = [Question_abbreviation_std]
          FROM
                  [forum]..[Pew_Question_Std]
        LEFT JOIN [forum]..[Pew_Question_Attributes]
               ON [Question_Std_pk]
                 =[Question_Std_fk]
            WHERE [attk]
                 = ''Itl''
              AND [attr]
                 = 1
                                                        )               F
     ON      [Variable]  =  [V]                                                       ) MYMAIND
'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*** < ALLCODE *************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
/***************************************************************************************************************************************************************/
	EXEC  (@ALLCODE)
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___10_cDB_Published_TopLines]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___10_cDB_Published_TopLines]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___10_cDB_Published_TopLines]
            FROM                 [dbo].[vr___10_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___10_cDB_Published_TopLines] WHERE [Variable] IS NULL
/***************************************************************************************************************************************************************/


 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _016_lt__IdxScoreReg____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 016    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr___11_cDB_RHIndexScore_byReg]                         <<<<<     ***/
/***     NOTES:                                                                                                                                              ***/
/***             This table includes INDEX numeric rounded values bt country, listed by each one of the 5 world regions                                      ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @VCODE00 nvarchar(max)
declare @VCODE01 nvarchar(max)
declare @VCODE02 nvarchar(max)
declare @VCODE03 nvarchar(max)
declare @VCODE04 nvarchar(max)
declare @VCODE05 nvarchar(max)
declare @VCODE06 nvarchar(max)
declare @VCODE07 nvarchar(max)
declare @VCODE08 nvarchar(max)
declare @VCODE09 nvarchar(max)
declare @VCODE10 nvarchar(max)
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/


/***************************************************************************************************************************************************************/
set @vCODE00 = 
/***************************************************************************************************************************************************************/
/*   >    00    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S00    -- main code SECTION A: "alter view" statement & open parenthesis to enclose query for pivoted & sorted data ----------------------------------*/
N'
ALTER  VIEW                      [dbo].[vr___11_]        AS
SELECT * FROM
(
'
/*-  <   S00    -- main code SECTION A: "alter view" statement & open parenthesis to enclose query for pivoted & sorted data ----------------------------------*/
/*   <    00    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE01 = 
/***************************************************************************************************************************************************************/
/*   >    01    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S01    -- pivoted & sorted data SECTION A ------------------------------------------------------------------------------------------------------------*/
N'
  SELECT
        [IdxS_row] =
                      ROW_NUMBER()
                      OVER(ORDER BY
                                     [Region]
                                    ,[CEN]
                                              )
      , [Nation_fk]
      , [Ctry_EditorialName]
      , [GRI - baseline year]
      , [SHI - baseline year]
      , [GRI - previous year]
      , [SHI - previous year]
      , [GRI - latest year]
      , [SHI - latest year]
      , [Region]
  FROM
     (
'
/*-  <   S01    -- pivoted & sorted data SECTION A ------------------------------------------------------------------------------------------------------------*/
/*   <    01    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE02 = 
/***************************************************************************************************************************************************************/
/*   >    02    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S02    -- pivoted/labeled data SECTION A -------------------------------------------------------------------------------------------------------------*/
/*--->   S021   --   Row 1 of labels  -------------------------------------------------------------------------------------------------------------------------*/
N'
   SELECT
             [Nation_fk]             =  NULL
           , [Ctry_EditorialName]    =  ''''
           , [Region]                =  ''''
           , [CEN]                   =  ''A''
           , [GRI - baseline year]   =  ''baseline'' + CHAR(10) + ''year, ending''
           , [SHI - baseline year]   =  ''''
           , [GRI - previous year]   =  ''previous'' + CHAR(10) + ''year, ending''
           , [SHI - previous year]   =  ''''
           , [GRI - latest year]     =  ''latest''   + CHAR(10) + ''year, ending''
           , [SHI - latest year]     =  ''''
'
/*---<   S021   --   Row 1 of labels  -------------------------------------------------------------------------------------------------------------------------*/
+
N' UNION ALL '
+
/*--->   S022   --   Row 2 of labels  -------------------------------------------------------------------------------------------------------------------------*/
N'
   SELECT
             [Nation_fk]             =  NULL
           , [Ctry_EditorialName]    =  ''''
           , [Region]                =  ''''
           , [CEN]                   =  ''B''
           , [GRI - baseline year]   =  ''JUN 2007''
           , [SHI - baseline year]   =  ''''
           , [GRI - previous year]   =  ''DEC '' + (SELECT CAST(MAX([Year]-1) AS VARCHAR(4)) FROM [vr___05_cDB_Index_byCtryReg&Yr])
           , [SHI - previous year]   =  ''''
           , [GRI - latest year]     =  ''DEC '' + (SELECT CAST(MAX([Year]  ) AS VARCHAR(4)) FROM [vr___05_cDB_Index_byCtryReg&Yr])
           , [SHI - latest year]     =  ''''
'
/*---<   S022   --   Row 2 of labels  -------------------------------------------------------------------------------------------------------------------------*/
+
N' UNION ALL '
+
/*--->   S023   --   Row 3 of labels  -------------------------------------------------------------------------------------------------------------------------*/
N'
   SELECT
             [Nation_fk]             =  NULL
           , [Ctry_EditorialName]    =  ''COUNTRY/REGION''
           , [Region]                =  ''''
           , [CEN]                   =  ''C''
           , [GRI - baseline year]   =  ''GRI''
           , [SHI - baseline year]   =  ''SHI''
           , [GRI - previous year]   =  ''GRI''
           , [SHI - previous year]   =  ''SHI''
           , [GRI - latest year]     =  ''GRI''
           , [SHI - latest year]     =  ''SHI''
'
/*---<   S023   --   Row 3 of labels  -------------------------------------------------------------------------------------------------------------------------*/
+
N' UNION ALL '
+
/*--->   S024   --   selection of pivoted data  ---------------------------------------------------------------------------------------------------------------*/
N'
   SELECT
             *
  FROM
     (
'
/*---<   S024   --   selection of pivoted data  ---------------------------------------------------------------------------------------------------------------*/
/*-  <   S02    -- pivoted/labeled data SECTION A -------------------------------------------------------------------------------------------------------------*/
/*   <    02    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE03 = 
/***************************************************************************************************************************************************************/
/*   >    03    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S03    -- pivotable data SECTION A -------------------------------------------------------------------------------------------------------------------*/
N'
      SELECT 
             [Nation_fk]
            ,[Ctry_EditorialName]    =  CASE
                                        WHEN [Nation_fk] > 999 THEN   [Region]
                                                                    + ''     ''
                                                                    + 
                                                                      CONVERT(VARCHAR(29),
                                                                       CAST(
                                                                        (ROUND(
                                                                           SUM([w])
                                                                           OVER(PARTITION BY [Region]) 
                                                                        , 0))
                                                                       AS DECIMAL(24,0)) 
                                                                      )
                                                                    + '' countries''
                                        ELSE [Ctry_EditorialName]
                                        END
            ,[Region]
            ,[CEN]
            ,[HEAD]
            ,[IRV]
        FROM
             (
'
/*-  <   S03    -- pivotable data SECTION A -------------------------------------------------------------------------------------------------------------------*/
/*   <    03    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE04 = 
/***************************************************************************************************************************************************************/
/*   >    04    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S04    -- pre-pivotable data SECTION A ---------------------------------------------------------------------------------------------------------------*/
N'
              SELECT 
                      [Nation_fk]
                     ,[Ctry_EditorialName]
                     ,[Region]                =  [Region5]
                     ,[CEN]                   =  CASE
                                                 WHEN [Nation_fk] < 999
                                                 THEN [Ctry_EditorialName]
                                                 END
                     ,[HEAD]                  =  CASE
                                                 WHEN [Year] = ( SELECT ((MAX([Year]))    ) FROM [vr___05_cDB_Index_byCtryReg&Yr] )
                                                 THEN [Index_abbreviation] + '' - latest year''
                                                 WHEN [Year] = ( SELECT ((MAX([Year])) - 1) FROM [vr___05_cDB_Index_byCtryReg&Yr] )
                                                 THEN [Index_abbreviation] + '' - previous year''
                                                 WHEN [Year] = ( SELECT ((MIN([Year]))    ) FROM [vr___05_cDB_Index_byCtryReg&Yr] )
                                                 THEN [Index_abbreviation] + '' - baseline year''
                                                 END
                     ,[IRV]                   =  CASE
                                                 WHEN [Nation_fk] < 999
                                                 THEN CONVERT(VARCHAR(5),[I_Rounded_value])
                                                 ELSE ''''
                                                 END
                     ,[w]                     =  CASE
                                                 WHEN [Nation_fk] < 999
                                                 THEN (1/ (CAST
                                                            (COUNT([Year]) 
                                                             OVER
                                                            (PARTITION BY [Nation_fk])
                                                           AS DECIMAL(24,16)) ) )
                                                 ELSE 0
                                                 END
                 FROM
'
/*-  <   S04    -- pre-pivotable data SECTION A ---------------------------------------------------------------------------------------------------------------*/
/*   <    04    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE05 = 
/***************************************************************************************************************************************************************/
/*   >    05    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S05    -- table of indexes (by country and regions' medians) -----------------------------------------------------------------------------------------*/
N'
                      [forum_ResAnal].[dbo].[vr___05_cDB_Index_byCtryReg&Yr]
'
/*-  <   S05    -- table of indexes (by country and regions' medians) -----------------------------------------------------------------------------------------*/
/*   <    05    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE06 = 
/***************************************************************************************************************************************************************/
/*   >    06    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S06    -- pre-pivotable data SECTION B ---------------------------------------------------------------------------------------------------------------*/
N'
                WHERE
                         [ByRegion5]  = 1
               AND
                         [Index_abbreviation] != ''GFI''
               AND
                     (   [Year] >= ( SELECT ((MAX([Year])) - 1) FROM [vr___05_cDB_Index_byCtryReg&Yr] )
                      OR [Year]  = ( SELECT ((MIN([Year]))    ) FROM [vr___05_cDB_Index_byCtryReg&Yr] ) )
'
/*-  <   S06    -- pre-pivotable data SECTION B ---------------------------------------------------------------------------------------------------------------*/
/*   <    06    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE07 = 
/***************************************************************************************************************************************************************/
/*   >    07    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S07    -- pivotable data SECTION B -------------------------------------------------------------------------------------------------------------------*/
N'
             )                                                                                                                                   AS prePivtbDATA
'
/*-  <   S07    -- pivotable data SECTION B -------------------------------------------------------------------------------------------------------------------*/
/*   <    07    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE08 = 
/***************************************************************************************************************************************************************/
/*   >    08    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S08    -- pivoted/labeled data SECTION B -------------------------------------------------------------------------------------------------------------*/
N'
     )                                                                                                                                           AS    PivtbDATA
PIVOT  ( MAX([IRV])    
         FOR [HEAD]
IN ( 
       [GRI - baseline year]
     , [SHI - baseline year]
     , [GRI - previous year]
     , [SHI - previous year]
     , [GRI - latest year]
     , [SHI - latest year]
                             )
                                ) AS pivt
'
/*-  <   S08    -- pivoted/labeled data SECTION B -------------------------------------------------------------------------------------------------------------*/
/*   <    08    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE09 = 
/***************************************************************************************************************************************************************/
/*   >    09    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S09    -- pivoted & sorted data SECTION B -- final parenthesis for enclosing pivoted & labeled data --------------------------------------------------*/
N'
)                                                                                                                                                AS PvtLabelDATA
'
/*-  <   S09    -- pivoted & sorted data SECTION B -- final parenthesis for enclosing pivoted & labeled data --------------------------------------------------*/
/*   <    09    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/
set @vCODE10 = 
/***************************************************************************************************************************************************************/
/*   >    10    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >   S10    -- main code SECTION B: final parenthesis enclosing query for pivoted & sorted data -----------------------------------------------------------*/
N'
)                                                                                                                                                AS  PvtSortDATA
'
/*-  <   S10    -- main code SECTION B: final parenthesis enclosing query for pivoted & sorted data -----------------------------------------------------------*/
/*   <    10    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
/*                                                                                                                                                             */
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/*                                                                                                                                                             */
/***************************************************************************************************************************************************************/






/***************************************************************************************************************************************************************/
set     @ALLCODE =
/***************************************************************************************************************************************************************/
/*   >  ALLCODE >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
/*-  >          -----------------------------------------------------------------------------------------------------------------------------------------------*/
                  (@vCODE00)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE01)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE02)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE03)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE04)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE05)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE06)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE07)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE08)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE09)                                                                                         /***        ... partial code ...        ***/
               +  (@vCODE10)                                                                                         /***        ... partial code ...        ***/
/*-  <          -----------------------------------------------------------------------------------------------------------------------------------------------*/
/*   <  ALLCODE <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
/***************************************************************************************************************************************************************/
	EXEC  (@ALLCODE)
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___11_cDB_RHIndexScore_byReg]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___11_cDB_RHIndexScore_byReg]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___11_cDB_RHIndexScore_byReg]
            FROM                 [dbo].[vr___11_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___11_cDB_RHIndexScore_byReg]
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
 
 
 
  _017_lt__PRes_byCtry____R.sql                                                                                                                                    
 
 
 
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
/***=========================================================================================================================================================***/   
 
 
/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 017    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the view [forum_ResAnal].[dbo].[vr___17_cDB_                  ]                                 <<<<<     ***/
/***             This view includes ...                                                                                                                      ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
--  DECLARE @PYr    varchar(4)
--  DECLARE @CYr    varchar(4)
--  SET     @PYr = (CONVERT(VARCHAR(4),(SELECT MAX([Question_Year])-1 FROM [vr___06_cDB_LongData_ALL_byCYQ])))
--  SET     @CYr = (CONVERT(VARCHAR(4),(SELECT MAX([Question_Year])   FROM [vr___06_cDB_LongData_ALL_byCYQ])))
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
ALTER  VIEW                      [dbo].[vr___12_]
AS
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
WITH
         YS
      AS
         (  
            SELECT 
                   DISTINCT
                   TOP 2
                   [Question_Year] AS [Y]
              FROM [vr___06_cDB_LongData_ALL_byCYQ]
          ORDER BY [Question_Year] DESC
         )
   ,     AllAtts
      AS
         (  
           SELECT 
                    [Q]  =           [Question_abbreviation_std]
                  , [E4] =        A4.[attr]
                  , [E3] =           [Question_wording_std]
                  , [E2] =        A2.[attr]
                  , [Ex] = ISNULL(Ax.[attr]                      , '')
            FROM
                                 [forum]..[Pew_Question_Std]
            INNER
            JOIN 
                 ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'RbyC_scale'                        )  A2
              ON      [Question_Std_pk]
                 = A2.[Question_Std_fk]
            LEFT
            JOIN 
                 ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'TopLine label'                     )  A4
              ON      [Question_Std_pk]
                 = A4.[Question_Std_fk]
            LEFT
            JOIN 
                 ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'XNote_RbyC'                        )  Ax
              ON      [Question_Std_pk]
                 = Ax.[Question_Std_fk]
         )
   ,     Headngs
      AS
         (  
           SELECT 
                    [m]
                  , [Q]
                  , [k1]    =     NULL
                  , [c1]
                  , [rY_1]  =     ''
                  , [pY_1]  =     ''
                  , [cY_1]  =     ''
                  , [k2]    =     NULL
                  , [c2]    =     ''
                  , [rY_2]  =     ''
                  , [pY_2]  =     ''
                  , [cY_2]  =     ''
                  , [k3]    =     NULL
                  , [c3]    =     ''
                  , [rY_3]  =     ''
                  , [pY_3]  =     ''
                  , [cY_3]  =     ''
            FROM
                 (           
                             SELECT 
                                    [m]     =     -4
                                  , [Q]
                                  , [c1]    =     [E4]
                               FROM [AllAtts]
                   UNION ALL SELECT 
                                    [m]     =     -3
                                  , [Q]
                                  , [c1]    =     [E3]
                               FROM [AllAtts]
                   UNION ALL SELECT 
                                    [m]     =     -2
                                  , [Q]
                                  , [c1]    =     [E2]
                               FROM [AllAtts]
                   UNION ALL SELECT 
                                    [m]     =      99
                                  , [Q]
                                  , [c1]    =     [Ex]
                               FROM [AllAtts]
                 ) AA
           UNION 
           ALL 
           SELECT 
                    [m]
                  , [Q]
                  , [k1]    =     NULL
                  , [c1]    =     'Country / Territory'
                  , [rY_1]  =     'baseline' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'JUN ' + '2007'
                  , [pY_1]  =     'previous' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MIN([Y]) FROM [YS])))
                  , [cY_1]  =     'latest'   + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MAX([Y]) FROM [YS])))
                  , [k2]    =     NULL
                  , [c2]    =     'Country / Territory'
                  , [rY_2]  =     'baseline' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'JUN ' + '2007'
                  , [pY_2]  =     'previous' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MIN([Y]) FROM [YS])))
                  , [cY_2]  =     'latest'   + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MAX([Y]) FROM [YS])))
                  , [k3]    =     NULL
                  , [c3]    =     'Country / Territory'
                  , [rY_3]  =     'baseline' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'JUN ' + '2007'
                  , [pY_3]  =     'previous' + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MIN([Y]) FROM [YS])))
                  , [cY_3]  =     'latest'   + CHAR(10) + 'year,' + CHAR(10) + 'ending' + CHAR(10) + 'DEC ' + (CONVERT(VARCHAR(4),(SELECT MAX([Y]) FROM [YS])))
            FROM
                 (           
                             SELECT 
                                    [m]     =     -1
                                  , [Q] ---    =     [Question_abbreviation_std]
                               FROM [AllAtts]
                              ---- FROM [forum]..[Pew_Question_Std]
                              ----INNER
                              ----JOIN 
                              ----     ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                              ----               WHERE [attk]
                              ----             = 'RbyC_scale'                             )  A
                              ----  ON      [Question_Std_pk]
                              ----      = A.[Question_Std_fk]
                 ) A0
         )
   ,     AllNfks
      AS
         (  
           SELECT 
                      DISTINCT   [Nation_fk]          AS [k]
                               , [Ctry_EditorialName] AS [C]
             FROM     [vr___06_cDB_LongData_ALL_byCYQ]
            WHERE     [Nation_fk] < 500
         )
   ,     NumNfks
      AS
         (  
           SELECT 
                      [k]
                    , [C]
                    , [n] =  ROW_NUMBER() OVER(ORDER BY [C])
                    , [t] =  (SELECT COUNT(k) FROM [AllNfks])
             FROM     [AllNfks]
         )
   ,     CodNfks
      AS

--select * into #CodNfks
--         from

         (  
           SELECT 
                      [k]
                    , [C]
                    , [t]
                    , [s] =  CASE WHEN [n] <= (1*([t]/3)) THEN '_1'
                                  WHEN [n] <= (2*([t]/3)) THEN '_2'
                                  WHEN [n] <= (3*([t]/3)) THEN '_3'
                                                          END
                    , [m] =  CASE WHEN [n] <= (1*([t]/3)) THEN [n] - (0*([t]/3))
                                  WHEN [n] <= (2*([t]/3)) THEN [n] - (1*([t]/3))
                                  WHEN [n] <= (3*([t]/3)) THEN [n] - (2*([t]/3))
                                                          END
             FROM     [NumNfks]
         )

--            CTE3

   ,     CtyCols
      AS

--select * into #CtyCols
--         from

         (  
           SELECT 
                      [ma]   =     [m]
                    , [k1]   = MAX([k_1])
                    , [c1]   = MAX([c_1] )
                    , [k2]   = MAX([k_2])
                    , [c2]   = MAX([c_2] )
                    , [k3]   = MAX([k_3])
                    , [c3]   = MAX([c_3] )
             FROM 
                  (
                   SELECT 
                          [m]
                         ,[k]
                         ,[C]
                         ,[cs] = 'c' + [s]
                         ,[ks] = 'k' + [s]

                     FROM  [CodNfks]

--                     FROM  [#CodNfks]
                                     ) SelCs1


                                 PIVOT
                                         (MAX ([C] ) 
                                          FOR  [cs]
                                          IN ( [c_1]
                                              ,[c_2]
                                              ,[c_3] ))  AS P1
                                 PIVOT
                                         (MAX ([k] ) 
                                          FOR  [ks]
                                          IN ( [k_1]
                                              ,[k_2]
                                              ,[k_3] ))  AS P2

            GROUP
               BY [m]
         )

--            CTE4

   ,     NumData
      AS

--select * into #NumData
--         from

         (  
           SELECT 
                      *
        --          , [n]
             FROM     (
                       SELECT 
                          [mb] = [m]
                         ,[Q]  = [QA_std]
                         ,[AV] = STR([Answer_value] , 6,2)
                         ,[QY] = 
                          CASE
                          WHEN [Question_Year]   = 2007                                                                THEN 'rY' + [s]
                          WHEN [Question_Year]+1 = (SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ]) THEN 'pY' + [s]
                          WHEN [Question_Year]   = (SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ]) THEN 'cY' + [s]
                           END
                         FROM  [vr___06_cDB_LongData_ALL_byCYQ]
                    INNER
                     JOIN 
  --                          [#CodNfks]
                            [CodNfks]
                       ON   [Nation_fk]
                          = [k]
                    INNER
                     JOIN 
                          ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                                    WHERE [attk]
                                        = 'TLC label'                           )  ATT
                       ON   [QSk]
                          = [Question_Std_fk]

                    WHERE
                            [Question_Year] IN (   
                                                   2007 
                                                , (    SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ] )
                                                , (-1+(SELECT MAX([Question_Year]) FROM [vr___06_cDB_LongData_ALL_byCYQ]))
                                               )
                           ) CDDB
                                   PIVOT
                                         (MAX ([AV]) 
                                          FOR  [QY]
                                          IN ( 
                                               [rY_1]
                                              ,[pY_1]
                                              ,[cY_1]
                                              ,[rY_2]
                                              ,[pY_2]
                                              ,[cY_2]
                                              ,[rY_3]
                                              ,[pY_3]
                                              ,[cY_3]
                                                      ))  AS VPY
         )

--            CTE5

   --,     NumData
   --   AS

SELECT
          vRow
          =  ROW_NUMBER()
             OVER(ORDER BY   CASE WHEN [Q] = 'GRI_20_03_top'
                                  THEN       'GRI_20_03'
                                  ELSE [Q]
                              END
                           ,           [m]                                          )
        , *
   FROM
         (  
            SELECT 
                      [m]    =     [ma]
                    , [Q]
                    , [k1]
                    , [c1]
                    , [rY_1]
                    , [pY_1]
                    , [cY_1]
                    , [k2]
                    , [c2]
                    , [rY_2]
                    , [pY_2]
                    , [cY_2]
                    , [k3]
                    , [c3]
                    , [rY_3] = ISNULL([rY_3], ' n/a')
                    , [pY_3]
                    , [cY_3]




             FROM     

--                             [#CtyCols]
                             [CtyCols]

                        INNER
                         JOIN 

--                             [#NumData]
                             [NumData]

                       ON   
                            [ma]   =     [mb]
 UNION ALL SELECT     *
             FROM     

                             [Headngs]
  
         ) UNSORTDATA 
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/










/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___12_cDB_Results_by_Country]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___12_cDB_Results_by_Country]
SELECT * 	INTO [forum_ResAnal].[dbo].[vr___12_cDB_Results_by_Country]
            FROM                 [dbo].[vr___12_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].
/***************************************************************************************************************************************************************/
 
 
 
 
/***                                                                           -o-                                                                           ***/   
 
 
 
 
/***=========================================================================================================================================================***/   
/*** ------------------------------------------------------------------------------------------------------------------------------------------------------- ***/   
