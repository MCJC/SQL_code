/***************************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==>  script 014    ------------------------------------------------------------------------------------------ '
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***           >>>>>         This script creates a lookup table [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]                       <<<<<           ***/
/***                                                                                                                                                         ***/
/***     NOTES:                                                                                                                                              ***/
/***           This view only includes aggregated numeric values                                                                                             ***/
/***                                                                                                                                                         ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
--/***************************************************************************************************************************************************************/
--declare @VCODE00 nvarchar(max)
--declare @VCODE01 nvarchar(max)
--declare @VCODE02 nvarchar(max)
--declare @VCODE03 nvarchar(max)
--declare @VCODE04 nvarchar(max)
--declare @VCODE05 nvarchar(max)
--declare @VCODE06 nvarchar(max)
--declare @VCODE07 nvarchar(max)
--declare @VCODE08 nvarchar(max)
--declare @VCODE09 nvarchar(max)
--declare @VCODE10 nvarchar(max)
--declare @VCODE11 nvarchar(max)
--declare @VCODE12 nvarchar(max)
--declare @VCODE13 nvarchar(max)
--declare @VCODE14 nvarchar(max)
--declare @ALLCODE nvarchar(max)
--/***************************************************************************************************************************************************************/
--/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
--/***************************************************************************************************************************************************************/
------set     @vCODE00 = 
----/***************************************************************************************************************************************************************/
----/* > 00  >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
----/*--- > S001    -----------------------------------------------------------------------------------------------------------------------------------------------*/
------N'
------ALTER VIEW [dbo].[vr___09_] AS
------'
----/*--- < S001    -----------------------------------------------------------------------------------------------------------------------------------------------*/
----/* < 00      - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----set     @vCODE01 = 
----/***************************************************************************************************************************************************************/
----/* > 01  >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
----/*- >   S01     -- Selected Data from long set ----------------------------------------------------------------------------------------------------------------*/
----/*--- > S011    -----------------------------------------------------------------------------------------------------------------------------------------------*/
----N'
----WITH  CTE01
----AS
----      (
----          SELECT
----                 [Q_Year]    =                  CAST(D.[Question_Year] AS VARCHAR)
----                ,[Variable]  = CASE
----                                   WHEN                [QA_std]     LIKE ''%_ny%'' 
----                                    AND                [QA_std] NOT LIKE ''%_ny'' 
----                                   THEN STUFF(         [QA_std]      ,         
----                                   ((CHARINDEX(''_ny'',  [QA_std])) + 3) , 1, '''')
----                                   ELSE                [QA_std]
----                               END
----                ,[Q_Wording] =                         [QW_std]
----                ,[Value]     = CASE
----                                   WHEN
----                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) > 1)
----                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
----                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
----                                   THEN    ''1.00''
----                                   ELSE         ISNULL([Answer_value], ''0.00'')
----                               END
----                ,[A_Wording] = CASE
----                                   WHEN
----                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2))  = 0)
----                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
----                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
----                                   THEN    ''No cases were found''
----                                   WHEN
----                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) >= 1)
----                                      AND(             [QA_std] LIKE ''GRI_19_''              +''[bcdefx]''
----                                                    OR [QA_std] LIKE ''SHI_0''  +''[1,4,5]''+''_''+''[bcdefx]''  )
----                                   THEN    ''1+ cases were found''
----                                   ELSE    [answer_wording_std]
----                               END
----                ,[CntWg]
----                ,[WTWg]
----            FROM [vr___06_cDB_LongData_ALL_byCYQ] D
----               , [vr___08_cDB_Weights_f_TopLines] W
----           WHERE          D.[Nation_fk]
----                        = W.[Nation_fk]
----             AND          D.[Question_Year]
----                        = W.[Question_Year]
----             AND          D.[Locality]
----                       IN            (
----                                        ''aggregated by country''
----                                      , ''not detailed''           )
----             AND          D.[QA_std] NOT IN   (''GFI'', ''GRI'', ''SHI'', ''GRI_20_05_x1'')
----             AND          D.[QA_std] NOT LIKE ''XSG_S_%''
----             AND          D.[QA_std] NOT LIKE ''%_d''+''[a,b]''
----             AND          D.[QA_std] NOT LIKE ''%_rd_1d''
----      )
----'
----/*--- < S011    -----------------------------------------------------------------------------------------------------------------------------------------------*/
----/*- <   S01     -- Selected Data from long set ----------------------------------------------------------------------------------------------------------------*/
----/* < 01  <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
----/***************************************************************************************************************************************************************/
----/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
----/***************************************************************************************************************************************************************/
----set     @vCODE02 = 
----/***************************************************************************************************************************************************************/
----/* > 02  >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
----/*- >   S02     -- Aggregated data by C/Y/Q/A -----------------------------------------------------------------------------------------------------------------*/
----/*--- > S021    -----------------------------------------------------------------------------------------------------------------------------------------------*/
----N'
----,     CTE02
----AS
----      (
----          SELECT
----                 [RYCNT]       = ''N'' + [Q_Year]
----                ,[RYPCT]       = ''P'' + [Q_Year]
----                ,[Variable]
----                ,[Value]
----                ,[Number]      =     SUM([CntWg])
----                ,[Percentage]  =     SUM([WTWg])
----           FROM   
----                 [CTE01]
----        GROUP BY
----                 [Q_Year]
----                ,[Variable]
----                ,[Value]
----      )
----'
----/*--- < S021    -----------------------------------------------------------------------------------------------------------------------------------------------*/
----/*- <   S02     -- Aggregated data by C/Y/Q/A -----------------------------------------------------------------------------------------------------------------*/
----/* < 02  <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<    <<<     ***/
----/***************************************************************************************************************************************************************/
----/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
----/***************************************************************************************************************************************************************/
------set     @vCODE03 = 
----/***************************************************************************************************************************************************************/
----/* > 03  >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
----/*- >   S03     -- Aggregated data by C/Y/Q/A -----------------------------------------------------------------------------------------------------------------*/
----/*--- > S031    -----------------------------------------------------------------------------------------------------------------------------------------------*/
------N'
------WITH  CTE03
------AS
------      (
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----set     @ALLCODE = 
----/***     >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>     ***/
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
----      --  @VCODE00                                                    /***                - initial code -                                                     ***/
----        @VCODE01                                                    /***   extracted data                                                                    ***/
----    +   @VCODE02                                                    /***   Aggregated data by C/Y/Q/A                                                        ***/


------	EXEC dbo.LongPrint @VCODE01
------	EXEC              (@VCODE01)
----declare @TEST nvarchar(max)
----set     @TEST = @ALLCODE + N'

----  select *
----    from         CTE02'
----	EXEC dbo.LongPrint @TEST
----	EXEC              (@TEST)




------- in the future calculate totlas, but notice currently ny questions add top > 100%
--------		select
--------		Q_Year
--------		,Variable
--------		,Q_Wording
--------		,Value      = '200.00'
--------		,A_Wording  = ''
--------		,SUM (CntWg)
--------		,SUM (WTWg)
--------		from #extracted
--------		group by
--------		Q_Year
--------		,Variable
--------		,Q_Wording



----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/




ALTER  VIEW                      [dbo].[vr___09_]  AS


--- 2016-04-26 10:51:11 ==>  script 010    ------------------------------------------------------------------------------------------ 

WITH  CTE01
AS
      (
          SELECT
                 [Q_Year]    =                  CAST(D.[Question_Year] AS VARCHAR)
                ,[QS_fk]     =                         [QSk]
                ,[Variable]  = CASE
                                   WHEN                [QA_std]     LIKE '%_ny%' 
                                    AND                [QA_std] NOT LIKE '%_ny' 
                                   THEN STUFF(         [QA_std]      ,         
                                   ((CHARINDEX('_ny',  [QA_std])) + 3) , 1, '')
                                   ELSE                [QA_std]
                               END
                ,[Q_Wording] =                         [Question_wording_std]
                ,[Value]     = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) > 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1.00'
                                   ELSE         ISNULL([Answer_value], '0.00')
                               END
                ,[A_Wording] = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2))  = 0)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    'No cases were found'
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) >= 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1+ cases were found'
                                   ELSE    [answer_wording_std]
                               END
                ,[CntWg]
                ,[WTWg]
---select *
            FROM [vr___06_cDB_LongData_ALL_byCYQ] D
               , [vr___08_cDB_Weights_f_TopLines] W
               , [forum]..[Pew_Question_Std]      Q
           WHERE          D.[QSk]
                        = Q.[Question_Std_pk]
             AND          D.[Nation_fk]
                        = W.[Nation_fk]
             AND          D.[Question_Year]
                        = W.[Question_Year]
             AND          D.[Locality]
                       IN            (
                                        'aggregated by country'
                                      , 'not detailed'           )
             AND          D.[QA_std] NOT IN   ('GFI', 'GRI', 'SHI', 'GRI_20_05_x1')
             AND          D.[QA_std] NOT LIKE 'XSG_S_%'
             AND          D.[QA_std] NOT LIKE '%_d'+'[a,b]'
             AND          D.[QA_std] NOT LIKE '%_rd_1d'
      )


/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/


,  CTE02
AS
			    ( SELECT
				          DISTINCT
                          [NumYr]          = [Question_Year]
                        , [TxtYr]          = CAST(               [Question_Year]   AS VARCHAR)
                        , [Nations]        = CAST(COUNT(DISTINCT [Nation_fk]    )  AS VARCHAR)
                   FROM   [vr___06_cDB_LongData_ALL_byCYQ]
                  WHERE   [Nation_fk] < 1000
             GROUP BY  [Question_Year]
	)
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/

,     CTE03
AS
      (
          SELECT
                 [RYCNT]       = 'N' + [Q_Year]
                ,[RYPCT]       = 'P' + [Q_Year]
                ,[Variable]
                ,[Value]
                ,[Number]      =     SUM([CntWg])
                ,[Percentage]  =     SUM([WTWg])
           FROM   
                 [CTE01]
        GROUP BY
                 [Q_Year]
                ,[Variable]
                ,[Value]
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/*** Headings and other static rows by table *******************************************************************************************************************/

,     CTE04
AS
      (

   SELECT                                                                       /*** SELECT statement                                                        ***/
                [M]
              , [x]  = '[' + [M] + '] = STR(ISNULL(MAX([' + [M] + [F]         /*** elements arranged to be used as code                                      ***/
              , [v]  = '[' + [M] + ']'                                        /*** field name to be used as code                                             ***/
              , [s]  = SUBSTRING([M],2,2) +'|'+ RIGHT([M],4) +'|'+ LEFT([M],1)
              , [a]  = SUBSTRING([M],2,2)
              , [y]  =                          RIGHT([M],4)
              , [f]  =                                             LEFT([M],1)
              , [e]  = ''
              , [d]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = 2007
                       THEN                         'baseline year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr])) - 1 ) FROM [CTE02] )
                       THEN                         'previous year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  )  = (SELECT ((MAX([NumYr]))     ) FROM [CTE02] )
                       THEN                         'latest year,'
                       WHEN  LEFT([M], 1  )  = 'N'
                       THEN                         'year'
                       ELSE ' ending'
                        END
              , [p]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) <  2011
                       THEN                         'JUN '
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) >= 2011
                       THEN                         'DEC '
                       ELSE RIGHT([M], 4  )
                        END
              , [n]  = [N]
              , [c]  = 'COUNTRIES'
              , [t]  = [T]
              , [l]  = 
      '--------------------------------------------------------------------------------------------------------------------------------------------------------'
FROM (


             SELECT                                                             /***                                                                         ***/
           DISTINCT [M] = [RYPCT]                                               /***                                                                         ***/
                  , [N] = '  %  OF  '
                  , [T] = '100 %'                                         /***                                                                         ***/
                  , [F] = ']),0),12,0)'                                         /***                                                                         ***/
               FROM                          [CTE03]                          /***                                                                         ***/
           UNION                                                                /***                                                                         ***/
           ALL                                                                  /***                                                                         ***/
           SELECT                                                               /***                                                                         ***/

           DISTINCT [M] = [RYCNT]                                               /***                                                                         ***/
                  , [N] = 'NUMBER OF'
                  , [T] = [Nations]                                         /***                                                                         ***/
                  , [F] = ']),0), 3,0)+''%'''                                   /***                                                                         ***/
               FROM                          [CTE03]                          /***                                                                         ***/
			                      ,   [CTE02]
                WHERE [RYCNT]       = 'N' + [TxtYr]




			   ) LongReshaped

      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- answer wordings   ----
,     CTE05
AS
      (
SELECT
          DISTINCT
          [Variable]
         ,[Q_Wording]
         ,[Value]
         ,[A_Wording]
  FROM    [CTE01]
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- question wordings   ----
,     CTE06
AS
      (
SELECT
          DISTINCT
          [QS_fk]
         ,[Variable]
         ,[Q_Wording]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  FROM    [CTE01]
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- 'TopLine label' from question attributes   ----
,     CTE07
AS
      (
         SELECT
                  [Variable]
                , [label]     = ISNULL([attr], '')
           FROM
                  [CTE06]
             LEFT
             JOIN 
			      ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'TopLine label'                     )  ATT7
               ON [QS_fk]
                 =[Question_Std_fk]
      )


---select * from CTE07

/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- notes from question attributes   ----
,     CTE08
AS
      (
         SELECT
                  [Variable]
                , [note]      = ISNULL([attr], '')
           FROM
                  [CTE06]
             LEFT
             JOIN 
			      ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'XNote01'                           )  ATT8
               ON [QS_fk]
                 =[Question_Std_fk]
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- sorting order of questions from question attributes   ----
,     CTE09
AS
      (
        SELECT
                  [V]         = [Variable]
                , [S]         = ISNULL([attr], '')
           FROM
                  [CTE06]
             LEFT
             JOIN 
			      ( SELECT * FROM [forum]..[Pew_Question_Attributes]
                            WHERE [attk]
                                = 'SortKey'                           )  ATT9
               ON [QS_fk]
                 =[Question_Std_fk]
      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
----- main body section   ----
,     CTE10
AS
      (


SELECT
          M.Variable
        , M.Value
        ,   Wording   =  L.A_Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE05]                                                           L
INNER
JOIN
/*** subquery M > ***/
     (SELECT
          Variable
        , Value
,[N2007] = STR(ISNULL(MAX([N2007]),0),12,0),[P2007] = STR(ISNULL(MAX([P2007]),0), 3,0)+'%',[N2008] = STR(ISNULL(MAX([N2008]),0),12,0),[P2008] = STR(ISNULL(MAX([P2008]),0), 3,0)+'%',[N2009] = STR(ISNULL(MAX([N2009]),0),12,0),[P2009] = STR(ISNULL(MAX([P2009]),0), 3,0)+'%',[N2010] = STR(ISNULL(MAX([N2010]),0),12,0),[P2010] = STR(ISNULL(MAX([P2010]),0), 3,0)+'%',[N2011] = STR(ISNULL(MAX([N2011]),0),12,0),[P2011] = STR(ISNULL(MAX([P2011]),0), 3,0)+'%',[N2012] = STR(ISNULL(MAX([N2012]),0),12,0),[P2012] = STR(ISNULL(MAX([P2012]),0), 3,0)+'%',[N2013] = STR(ISNULL(MAX([N2013]),0),12,0),[P2013] = STR(ISNULL(MAX([P2013]),0), 3,0)+'%',[N2014] = STR(ISNULL(MAX([N2014]),0),12,0),[P2014] = STR(ISNULL(MAX([P2014]),0), 3,0)+'%'
FROM
                [CTE03]
  PIVOT   (       MAX([Percentage])
            FOR       [RYPCT]
            IN       (
 [P2007], [P2008], [P2009], [P2010], [P2011], [P2012], [P2013], [P2014]                       )   )   AS   pivt1       
  PIVOT   (       MAX([Number])
            FOR       [RYCNT]
            IN       (
 [N2007], [N2008], [N2009], [N2010], [N2011], [N2012], [N2013], [N2014]                       )   )   AS   pivt2         GROUP BY Variable, Value                                                                           )  M 
/*** < subquery M ***/  
     ON   M.Variable = L.Variable
    AND   M.Value    = L.Value

      )
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/



--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @codeCTE10 nvarchar(max)
--set     @codeCTE10 = 
--N'
--SELECT
--          M.Variable
--        , M.Value
--        ,   Wording   =  L.A_Wording
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM /*e>*/ [#CTE04] /*<e*/ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'
--FROM
--        [CTE05]                                                           L
--INNER
--JOIN
--/*** subquery M > ***/
--     (SELECT
--          Variable
--        , Value
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [x] FROM /*e>*/ [#CTE04] /*<e*/ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'
--FROM
--                [CTE03]
--  PIVOT   (       MAX([Percentage])
--            FOR       [RYPCT]
--            IN       (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
--      (                                                                         /*** parenthesis to include query for the cell to be stuffed                 ***/
--   SELECT DISTINCT                                                              /*** SELECT statement                                                        ***/
--          ', [' + [RYPCT] + ']'                                                 /*** comma delimiter and brackets enclosing (field) elements to be listed    ***/
--    FROM  [#CTE03]                                                             /*** from CTE ; no filters needed                                            ***/
--         ORDER BY                                                               /*** sorting order: alphabetically                                           ***/
--          ', [' + [RYPCT] + ']'                                                 /*** using comma & brackets enclosing elements to be listed                  ***/
--         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
--                                                                              ) /*** parenthesis to include query for the cell to be stuffed                 ***/
--, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                       )   )   AS   pivt1       '                             /*** end of listing of variables & pivoting percentage                       ***/
--+
--N'
--  PIVOT   (       MAX([Number])
--            FOR       [RYCNT]
--            IN       (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
--(                                                                               /*** parenthesis to include query for the cell to be stuffed                 ***/
--   SELECT DISTINCT                                                              /*** SELECT statement                                                        ***/
--          ', [' + [RYCNT] + ']'                                                 /*** comma delimiter and brackets enclosing (field) elements to be listed    ***/
--    FROM  [#CTE03]                                                             /*** from CTE ; no filters needed                                            ***/
--         ORDER BY                                                               /*** sorting order: alphabetically                                           ***/
--          ', [' + [RYCNT] + ']'                                                 /*** using comma & brackets enclosing elements to be listed                  ***/
--         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
--)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
--, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                       )   )   AS   pivt2       '                             /*** end of listing of variables & pivoting percentage                       ***/
--+
--N'  GROUP BY Variable, Value  '                                                  /*** Groupping (aggregation) statement                                      ***/
--+
--N'                                                                         )  M 
--/*** < subquery M ***/  '
--+
--  N'
--     ON   M.Variable = L.Variable
--    AND   M.Value    = L.Value
--' /*** end of main enclosed query                                             ***/
--	EXEC dbo.LongPrint @codeCTE10
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/



--- presentation body rows   ----
,     CTE11
AS
      (

SELECT
            [Variable]
        ,   [Value]
        ,   [Wording]   =  CASE
                              WHEN [Value] = 500
                              THEN
                                    '---------------------------------------------------'
                                  + '---------------------------------------------------'
                                  + '--------------------------------------------------'
                              ELSE  ''                                                        END
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE06] /* < #QWording*/                                                             Q
CROSS
JOIN
     (

       SELECT *
         FROM (SELECT  [Value] =  -5.00, [d]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([d]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -4.00, [p]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([p]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -3.00, [n]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([n]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -2.00, [c]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([c]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 200.00, [t]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([t]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted 
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 500.00, [e]     ,[M] FROM [CTE04] /* heading */) H 
                PIVOT               (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted                                                                   )  F

)




--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @codeCTE11 nvarchar(max)
--set     @codeCTE11 = 
--N'
--SELECT
--            [Variable]
--        ,   [Value]
--        ,   [Wording]   =  CASE
--                              WHEN [Value] = 500
--                              THEN
--                                    ''---------------------------------------------------''
--                                  + ''---------------------------------------------------''
--                                  + ''--------------------------------------------------''
--                              ELSE  ''''                                                        END
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'
--FROM
--        [CTE06] /* < #QWording*/                                                             Q
--CROSS
--JOIN
--     (
--'
--+
--N'
--       SELECT *
--         FROM (SELECT  [Value] =  -5.00, [d]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([d]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'
--       UNION ALL
--       SELECT *
--         FROM (SELECT  [Value] =  -4.00, [p]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([p]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'
--       UNION ALL
--       SELECT *
--         FROM (SELECT  [Value] =  -3.00, [n]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([n]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'
--       UNION ALL
--       SELECT *
--         FROM (SELECT  [Value] =  -2.00, [c]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([c]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'
--       UNION ALL
--       SELECT *
--         FROM (SELECT  [Value] = 200.00, [t]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([t]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'
--       UNION ALL
--       SELECT *
--         FROM (SELECT  [Value] = 500.00, [e]     ,[M] FROM [CTE04] /* heading */) H 
--                PIVOT               (MAX([e]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
--+
--N'                                                                  )  F  ' /*** end of query                                                            ***/

--	EXEC dbo.LongPrint @codeCTE11
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/

--- presentation body rows: question wordings   ----
,     CTE12
AS
      (

SELECT
            Variable
        ,   Value
        ,   Wording   =  Q_Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE06] /* < #QWording*/                                                             Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = -6.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted )  F 

)



--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @codeCTE12 nvarchar(max)
--set     @codeCTE12 = 
--N'
--SELECT
--            Variable
--        ,   Value
--        ,   Wording   =  Q_Wording
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'
--FROM
--        [CTE06] /* < #QWording*/                                                             Q
--CROSS
--JOIN
--     ( SELECT *
--         FROM (  SELECT  [Value] = -6.00
--                        ,[e]
--                        ,[M]
--                   FROM  [CTE04] /* heading */       )   e
--       PIVOT (MAX([e]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--/*** > S03 *****************************************************************************************************************************************************/
--N'                                                     ) ) tpivoted )  F 
-- ' /*** end of query                                                            ***/

--	EXEC dbo.LongPrint @codeCTE12
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
--- body rows of Q names for public toplines  ----
,     CTE13
AS
      (

SELECT
            Variable
        ,   Value
        ,   Wording   =  label
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE07] /* < #QLabel */                                                             Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = -7.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted )  F

)



--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @codeCTE13 nvarchar(max)
--set     @codeCTE13 = 
--N'
--SELECT
--            Variable
--        ,   Value
--        ,   Wording   =  label
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'
--FROM
--        [CTE07] /* < #QLabel */                                                             Q
--CROSS
--JOIN
--     ( SELECT *
--         FROM (  SELECT  [Value] = -7.00
--                        ,[e]
--                        ,[M]
--                   FROM  [CTE04] /* heading */       )   e
--       PIVOT (MAX([e]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted )  F
-- ' /*** end of query                                                            ***/
 
--	EXEC dbo.LongPrint @codeCTE13
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
--- body rows of Q notes to be published  ----
,     CTE14
AS
      (

SELECT
            Variable
        ,   Value
        ,   Wording   =  note
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
        [CTE08] /* #QNote */                                                            Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = 201.00
                        ,[e]
                        ,[M]
                   FROM  [CTE04] /* heading */       )   e
       PIVOT (MAX([e]) FOR [M] IN (
[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]                                                     ) ) tpivoted )  F 



)





--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @codeCTE14 nvarchar(max)
--set     @codeCTE14 = 
--N'
--SELECT
--            Variable
--        ,   Value
--        ,   Wording   =  note
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--/*** > S03 *****************************************************************************************************************************************************/
--N'
--FROM
--        [CTE08] /* #QNote */                                                            Q
--CROSS
--JOIN
--     ( SELECT *
--         FROM (  SELECT  [Value] = 201.00
--                        ,[e]
--                        ,[M]
--                   FROM  [CTE04] /* heading */       )   e
--       PIVOT (MAX([e]) FOR [M] IN (
--'
--+
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--STUFF((SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
--+
--N'                                                     ) ) tpivoted )  F 
-- ' /*** end of query                                                            ***/
 
--	EXEC dbo.LongPrint @codeCTE14
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/

--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
----select * into #CTE01 from CTE01
----select * into #CTE02 from CTE02
----select * into #CTE03 from CTE03;
----select * into #CTE04 from CTE04
----select * into #CTE05 from CTE05
----select * into #CTE06 from CTE06
----select * into #CTE07 from CTE07
----select * into #CTE08 from CTE08
--select * from CTE09
------- all together  ----


SELECT
          vx1Row
          =  ROW_NUMBER()
             OVER(ORDER BY
                             [S]
                           , [Variable]
                           , [Value]
                                          )
        , Variable
        , Value
        , Wording
,[N2007],[P2007],[N2008],[P2008],[N2009],[P2009],[N2010],[P2010],[N2011],[P2011],[N2012],[P2012],[N2013],[P2013],[N2014],[P2014]
FROM
     (           SELECT * FROM [CTE10]
       UNION ALL SELECT * FROM [CTE11]
       UNION ALL SELECT * FROM [CTE12]
       UNION ALL SELECT * FROM [CTE13]
       UNION ALL SELECT * FROM [CTE14]  )   U
LEFT JOIN                      [CTE09]      S
       ON     [V] = [Variable]                 




--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--/***************************************************************************************************************************************************************/
--declare @ALLCODE nvarchar(max)
--set     @ALLCODE =
--N'
--SELECT
--          vx1Row
--          =  ROW_NUMBER()
--             OVER(ORDER BY
--                             [S]
--                           , [Variable]
--                           , [Value]
--                                          )
--        , Variable
--        , Value
--        , Wording
--'
--+   -----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- (   SELECT ',' + [v] FROM [#CTE04] /* heading */ ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
--+   -----------------------------------------------------------------------------------------------------------------------------------------------------------------
--N'
--FROM
--     (           SELECT * FROM [CTE10]
--       UNION ALL SELECT * FROM [CTE11]
--       UNION ALL SELECT * FROM [CTE12]
--       UNION ALL SELECT * FROM [CTE13]
--       UNION ALL SELECT * FROM [CTE14]  )   U
--LEFT JOIN                      [CTE09]      S
--       ON     [V] = [Variable]                
--   
--'


--	EXEC dbo.LongPrint @ALLCODE
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/
----/***************************************************************************************************************************************************************/




----select * into #CTE01 from CTE01
----select * into #CTE02 from CTE02
----select * into #CTE03 from CTE03;
----select * into #CTE04 from CTE04
----select * into #CTE05 from CTE05
----select * into #CTE06 from CTE06
----select * into #CTE07 from CTE07
----select * into #CTE08 from CTE08


/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
--	EXEC dbo.LongPrint @CTE01                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE02                                       /***        display the currently stored code ->                            ***/
--	EXEC dbo.LongPrint @CTE03                                       /***        display the currently stored code -> aggregated data by CYQ                          ***/
--	EXEC dbo.LongPrint @CTE04                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE05                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE06                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE07                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE08                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE09                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE10                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE11                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE12                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE13                                       /***        display the currently stored code -> extracted data                          ***/
--	EXEC dbo.LongPrint @CTE14                                       /***        display the currently stored code -> extracted data                          ***/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
/***************************************************************************************************************************************************************/
-- [#extracted] = 1

-- [#A_CYQA] = 3
-- heading = 4
-- [#AWording] = 5
-- QWording = 6
--  label = 7
-- note = 8
---sorting order =9 
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
/***                                                                                                                                                         ***/
--		EXEC  (@ALLCODE)
--/***                                                                                                                                                         ***/
--/***************************************************************************************************************************************************************/
--GO

/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/








/***************************************************************************************************************************************************************/
IF OBJECT_ID  (N'[forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]', N'U') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]
SELECT * INTO    [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All]
            FROM                 [dbo].[vr___09_]
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
--	SELECT* FROM [forum_ResAnal].[dbo].[vr___09_cDB_Basic_TopLines_All] WHERE [QA_std] IS NULL
/***************************************************************************************************************************************************************/


