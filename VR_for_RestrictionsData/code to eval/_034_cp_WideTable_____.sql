/**************************************************************************************************************************************************/
/***                                                                                                                                            ***/
/***     >>>>>   This is the script used to create the table view [GRSHRYYYY].[dbo].[GRSH_C]                                          <<<<<     ***/
/***             (cells for current year coding values and corresponding former year)                                                           ***/
/***                                                                                                                                            ***/
/**************************************************************************************************************************************************/
/*                                                                                                                                                */
/*  REFERENCE to 2015 appears JUST ONCE in the script                                                                                             */
/*                                                                                                                                                */
/**************************************************************************************************************************************************/
Print 
'--- ' + CONVERT (VARCHAR(19), SYSDATETIME()) + ' ==> creating table [GRSH_C]                                                                  --- '
/**************************************************************************************************************************************************/
USE              [GRSHR2015]
GO
/**************************************************************************************************************************************************/

/**************************************************************************************************************************************************/
IF OBJECT_ID  ('tempdb..#WRK')                        IS NOT NULL
DROP TABLE              #WRK
/**************************************************************************************************************************************************/
/***  working set of data including additional values *********************************************************************************************/
              SELECT  *
               INTO  [#WRK]
               FROM  [AllLongData]
         INNER JOIN  [ALL_Questions]
                 ON  [QA_std]
                    =[Question_abbreviation_std]
/**************************************************************************************************************************************************/
-- select * from #WRK

/**************************************************************************************************************************************************/
IF OBJECT_ID  ('tempdb..#TCV')                        IS NOT NULL
DROP TABLE              #TCV
/**************************************************************************************************************************************************/
/***  coded values ********************************************************************************************************************************/
SELECT 
        Ctry_EditorialName                             -- name only for this set
     ,  Nation_fk                                      -- key only for this set
     ,  Region5
     ,  Region6
     ,  Question_Year                                  -- year only for this set
     ,  YNc   = (Question_Year * 10000) + Nation_fk
     ,  QA    = QA_std
     ,  AX    = --(ISNULL ((CAST(Answer_value as decimal (10,0))) , 0))
                STR((CAST(Answer_value as decimal (4,2))) , 4,2 ) + '   - ' + Answer_wording_std
INTO
                     [#TCV]
FROM
                     [#WRK]
WHERE 
               [QClass] IN ( 'CODED', 'preyr' )
/**************************************************************************************************************************************************/



/**************************************************************************************************************************************************/
IF OBJECT_ID  ('tempdb..#TNV')                        IS NOT NULL
DROP TABLE              #TNV
/**************************************************************************************************************************************************/
/***  count (numeric) values **********************************************************************************************************************/
SELECT 
        YNn   = (Question_Year * 10000) + Nation_fk
     ,  QA    = QA_std
--   ,  AX    = (ISNULL ((CAST(Answer_value as decimal (10,0))) , 0))    /* default count to zero */ 
     ,  AX    =           CAST(Answer_value as decimal (10,0))           /* defaulted before      */
INTO
                     [#TNV]
FROM
                     [#WRK]
WHERE 
               [QClass] IN ( 'COUNT' )
/**************************************************************************************************************************************************/

/**************************************************************************************************************************************************/
IF OBJECT_ID  ('tempdb..#TAW')                        IS NOT NULL
DROP TABLE              #TAW
/**************************************************************************************************************************************************/
/***  wordings ************************************************************************************************************************************/
SELECT 
        YNw   = (Question_Year * 10000) + Nation_fk
     ,  QA    = QA_std + '_DES'
     ,  AX    = Answer_Wording
INTO
                     [#TAW]
FROM
                     [#WRK]
WHERE 
               [QDescr] IN ( 'Y' )
/**************************************************************************************************************************************************/
GO

/**************************************************************************************************************************************************/
IF OBJECT_ID  ('tempdb..#TQN')                        IS NOT NULL
DROP TABLE              #TQN
/**************************************************************************************************************************************************/
/***  variable (question) names *******************************************************************************************************************/
          SELECT DISTINCT [QA]
                               INTO [#TQN]
                               FROM [#TCV]
UNION ALL SELECT DISTINCT [QA] FROM [#TNV]
UNION ALL SELECT DISTINCT [QA] FROM [#TAW]
/**************************************************************************************************************************************************/

/**************************************************************************************************************************************************/
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TCVpv'                          ) = 1
DROP              TABLE         [TCVpv]
GO
/**************************************************************************************************************************************************/
declare @CODECV nvarchar(max)
set     @CODECV = 
/**************************************************************************************************************************************************/
                                                                   /*** >>>>   include all new pivoted values in wide shape                     ***/
 N'
      SELECT * INTO [TCVpv]'
                                                                   /*** >>>    include CODED values                                             ***/
+N'
               FROM [#TCV]
        pivot (max ([AX]) 
               for  [QA]
                in ( 
                   ' +
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
    STUFF( (                                                       /*** >>     stuff function & parenthesis for query XML cell to be stuffed    ***/
    SELECT                                                         /*** >      Begin selection (into text, in a cell, comma delimited list)     ***/
          DISTINCT                                                 /***        should be distinct to include once each variable name            ***/
          ', ' + [QA]                                              /***        comma delimiter concatenated to field QA (to be used as varname) ***/
    FROM  [#TCV]                                                   /***        from table including var names as rows (NO flters/NO sorting)    ***/
    for xml path('')                                               /*** <      End of the selection, nesting all cells into an XML string cell  ***/
                    ),1, 1, '')                                    /*** <<     stuff from position 1, change 1 character into ''                ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+N'
    ) ) AS pivt '
                                                                   /*** <<<    include CODED values (end listing, alias pivoting & selection)   ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/**************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @CODECV                                     /***        display the currently stored code (to be executed)               ***/
	EXEC              (@CODECV)                                    /***        execute the code that has been stored as text                    ***/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
--    SELECT * FROM TCVpv
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TNVpv'                          ) = 1
DROP              TABLE         [TNVpv]
GO
/**************************************************************************************************************************************************/
declare @CODENV nvarchar(max)
set     @CODENV = 
/**************************************************************************************************************************************************/
                                                                   /*** >>>>   include all new pivoted values in wide shape                     ***/
 N'
      SELECT * INTO [TNVpv]'
                                                                   /*** >>>    include NUMERIC values                                           ***/
+N'
               FROM [#TNV]
        pivot (max ([AX]) 
               for  [QA]
                in ( 
                   ' +
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
STUFF( (                                                           /*** >>     stuff function & parenthesis for query XML cell to be stuffed    ***/
    SELECT                                                         /*** >      Begin selection (into text, in a cell, comma delimited list)     ***/
          DISTINCT                                                 /***        should be distinct to include once each variable name            ***/
          ', ' + [QA]                                              /***        comma delimiter concatenated to field QA (to be used as varname) ***/
    FROM  [#TNV]                                                   /***        from table including var names as rows (NO flters/NO sorting)    ***/
    for xml path('')                                               /*** <      End of the selection, nesting all cells into an XML string cell  ***/
                    ),1, 1, '')                                    /*** <<     stuff from position 1, change 1 character into ''                ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+N'
    ) ) AS pivt '
                                                                   /*** <<<    include NUMERIC values (end listing, alias pivoting & selection) ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/**************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @CODENV                                     /***        display the currently stored code (to be executed)               ***/
	EXEC              (@CODENV)                                    /***        execute the code that has been stored as text                    ***/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
--    SELECT * FROM TNVpv
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TAWpv'                          ) = 1
DROP              TABLE         [TAWpv]
GO
/**************************************************************************************************************************************************/
declare @CODEAW nvarchar(max)
set     @CODEAW = 
/**************************************************************************************************************************************************/
                                                                   /*** >>>>   include all new pivoted values in wide shape                     ***/
 N'
      SELECT * INTO [TAWpv]'
                                                                   /*** >>>    include NUMERIC values                                           ***/
+N'
               FROM [#TAW]
        pivot (max ([AX]) 
               for  [QA]
                in ( 
                   ' +
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
STUFF( (                                                           /*** >>     stuff function & parenthesis for query XML cell to be stuffed    ***/
    SELECT                                                         /*** >      Begin selection (into text, in a cell, comma delimited list)     ***/
          DISTINCT                                                 /***        should be distinct to include once each variable name            ***/
          ', ' + [QA]                                              /***        comma delimiter concatenated to field QA (to be used as varname) ***/
    FROM  [#TAW]                                                   /***        from table including var names as rows (NO flters/NO sorting)    ***/
    for xml path('')                                               /*** <      End of the selection, nesting all cells into an XML string cell  ***/
                    ),1, 1, '')                                    /*** <<     stuff from position 1, change 1 character into ''                ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+N'
    ) ) AS pivt '
                                                                   /*** <<<    include NUMERIC values (end listing, alias pivoting & selection) ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
/**************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @CODEAW                                     /***        display the currently stored code (to be executed)               ***/
	EXEC              (@CODEAW)                                    /***        execute the code that has been stored as text                    ***/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
--    SELECT * FROM TAWpv
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/



/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'GRSH_C'                          ) = 1
DROP              TABLE         [GRSH_C]
GO
/**************************************************************************************************************************************************/
declare @CODET nvarchar(max)
set     @CODET = 
/**************************************************************************************************************************************************/
                                                                   /*** >>>    order variables from pivoted data to store into wide shape       ***/
 N'
      SELECT
               [RowID]               = ROW_NUMBER() OVER(ORDER BY Question_Year DESC, Nation_fk )
             , [Question_Year]
             , [Region5]
             , [Region6]
             , [Nation_fk]
             , [Ctry_EditorialName]
             ' +
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
(    SELECT                                                        /*** >      Begin selection (into text, in a cell, comma delimited list)     ***/
          DISTINCT                                                 /***        should be distinct to include once each variable name            ***/
          ', ' + [QA]                                              /***        comma delimiter concatenated to field QA (to be used as varname) ***/
    FROM  [#TQN]                                                   /***        from table including var names as rows (NO flters)               ***/
    ORDER
       BY ', ' + [QA]
    for xml path('')          )                                    /*** <      End of the selection, nesting all cells into an XML string cell  ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
+N'
        INTO [GRSH_C] 
        FROM 
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
             [TCVpv]                                               /*          coded values                                                       */
       INNER
        JOIN
             [TNVpv]                                               /*          number values                                                      */
          ON        YNc = YNn                                      /***        join condition                                                   ***/
       INNER
        JOIN
             [TAWpv]                                               /*          answer wording                                                     */
          ON        YNc = YNw                                      /***        join condition                                                   ***/
/*------------------------------------------------------------------------------------------------------------------------------------------------*/
    '
                                                                   /*** >>>    store ordered variables in wide shape                            ***/
/**************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @CODET                                      /***        display the currently stored code (to be executed)               ***/
	EXEC              (@CODET)                                     /***        execute the code that has been stored as text                    ***/
/**************************************************************************************************************************************************/
GO
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
-- select * from [GRSH_C] order by RowID


/***  manual setting *****************************************************************************************************************************/
/***         By default the SQL Server Agent does not set QUOTED_IDENTIFIER: in the Transact-SQL command SET OPTIONS must be added             ***/
SET QUOTED_IDENTIFIER ON
GO
/**************************************************************************************************************************************************/


/**************************************************************************************************************************************************/
/***  Final steps: ********************************************************************************************************************************/
/**************************************************************************************************************************************************/
/***  Change ID field configuration as integer and non-nullable  **********************************************************************************/
ALTER TABLE [GRSH_C]
ALTER COLUMN RowID INT NOT NULL
GO
/**********************************************************************************  Change ID field configuration as integer and non-nullable  ***/
/**************************************************************************************************************************************************/
/***  Change ID field configuration as real pk  ***************************************************************************************************/
ALTER TABLE      [GRSH_C]
ADD   CONSTRAINT GRSHC_pk PRIMARY KEY(RowID)
GO
/***************************************************************************************************  Change ID field configuration as real pk  ***/
/**************************************************************************************************************************************************/
/***  Add Computed Columns PERSISTED  *************************************************************************************************************/
ALTER TABLE [GRSH_C]
ADD GRI_19_x         AS
                          GRI_19_b
                        + GRI_19_c
                        + GRI_19_d
                        + GRI_19_e
                        + GRI_19_f   PERSISTED
   ,SHI_04_x         AS
                          SHI_04_b
                        + SHI_04_c
                        + SHI_04_d
                        + SHI_04_e
                        + SHI_04_f   PERSISTED
   ,SHI_05_x         AS
                          SHI_05_c  -- notice SHI_05_b_x has been dropped / never used for the index
                        + SHI_05_d
                        + SHI_05_e
                        + SHI_05_f   PERSISTED
   ,SHI_01_x         AS 
                          SHI_01_b
                        + SHI_01_c
                        + SHI_01_d
                        + SHI_01_e
                        + SHI_01_f   PERSISTED
   ,SHI_01_summary_b AS 
                          CASE WHEN SHI_01_a = '0.50   - Yes, in limited ways'              THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_a = '1.00   - Yes, widespread social harassment' THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_b > 0                                            THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_c > 0                                            THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_d > 0                                            THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_e > 0                                            THEN 1 ELSE 0 END
                        + CASE WHEN SHI_01_f > 0                                            THEN 1 ELSE 0 END   PERSISTED
GO
/*************************************************************************************************************  Add Computed Columns PERSISTED  ***/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
/**************************************************************************************************************************************************/
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TCVpv'                          ) = 1
DROP              TABLE         [TCVpv]
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TNVpv'                          ) = 1
DROP              TABLE         [TNVpv]
IF (SELECT COUNT([TABLE_NAME]) FROM [INFORMATION_SCHEMA].[TABLES]
     WHERE       [TABLE_NAME] = 'TAWpv'                          ) = 1
DROP              TABLE         [TAWpv]
GO
/**************************************************************************************************************************************************/
