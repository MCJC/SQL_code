/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vrx_w_03_Basic_TopLines_by_Region_00]                   <<<<<     ***/
/***             This table only includes aggregated numeric values                                                                                          ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
  IF OBJECT_ID('tempdb..[#extracted]') IS NOT NULL
  DROP TABLE            [#extracted]
  SELECT * INTO         [#extracted]  FROM
/***************************************************************************************************************************************************************/
(
/*** Selected Data from long set *******************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
          SELECT
                 [REGCODE]   = CASE
                                        WHEN SUBSTRING([Region5], 1,3)   = 'Ame' THEN 'R1'
                                        WHEN SUBSTRING([Region5], 1,3)   = 'Asi' THEN 'R2'
                                        WHEN SUBSTRING([Region5], 1,3)   = 'Eur' THEN 'R3'
                                        WHEN SUBSTRING([Region5], 1,3)   = 'Mid' THEN 'R4'
                                        WHEN SUBSTRING([Region5], 1,3)   = 'Sub' THEN 'R5'
                               END
                ,[Region5]
                ,[Q_Year]    =                  CAST(D.[Question_Year] AS VARCHAR)
                ,[Variable]  = CASE
                                   WHEN                [QA_std] LIKE '%_ny%' 
                                   THEN STUFF(         [QA_std]      ,         
                                   ((CHARINDEX('_ny',  [QA_std])) + 3) , 1, '')
                                   ELSE                [QA_std]
                               END
                ,[Q_Wording] =                         [QW_std]
                ,[Value]     = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) > 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1.00'
                                   ELSE         ISNULL([Answer_value], '0.00')
                               END
                ,[A_Wording] = CASE
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2))  = 0)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    'No cases were found'
                                   WHEN
                                         (CAST((ISNULL([Answer_value], 0)) AS decimal(12,2)) >= 1)
                                      AND(             [QA_std] LIKE 'GRI_19_'              +'[bcdefx]'
                                                    OR [QA_std] LIKE 'SHI_0'  +'[1,4,5]'+'_'+'[bcdefx]'  )
                                   THEN    '1+ cases were found'
                                   ELSE    [answer_wording_std]
                               END
                ,[CntWg]
                ,[R5Wg]
            FROM [vr_06w_LongData_ALL] D
               , [vr_07w_weights]      W
           WHERE          D.[Nation_fk]
                        = W.[Nation_fk]
             AND          D.[Question_Year]
                        = W.[Question_Year]
             AND          D.[Locality]
                       IN            (
                                        'aggregated by country'
                                      , 'not detailed'           )
             AND          D.[QA_std] NOT IN   ('GFI', 'GRI', 'SHI', 'GRI_20_05_x1')
             AND          D.[QA_std] NOT LIKE 'XSG_S_%'
             AND          D.[QA_std] NOT LIKE '%_d'+'[a,b]'
             AND          D.[QA_std] NOT LIKE '%_rd_1d'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/******************************************************************************************************************************* Selected Data from long set ***/
)                                                                                                                                                      extracted
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
  --IF OBJECT_ID (N'[forum_ResAnal].[dbo].[A_CYQA]', N'U') IS NOT NULL
  --DROP TABLE      [forum_ResAnal].[dbo].[A_CYQA]
  --SELECT * INTO   [forum_ResAnal].[dbo].[A_CYQA] FROM
  IF OBJECT_ID('tempdb..[#A_CYQA]') IS NOT NULL
  DROP TABLE            [#A_CYQA]
  SELECT * INTO         [#A_CYQA]  FROM
/***************************************************************************************************************************************************************/
(
/*** Aggregated data by C/Y/Q/A ********************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT
          [RYCNT]       = 'N' + [REGCODE] + [Q_Year]
         ,[RYPCT]       = 'P' + [REGCODE] + [Q_Year]
         ,[Variable]
         ,[Value]
         ,[Number]      =     SUM([CntWg])
         ,[Percentage]  =     SUM([R5Wg])
  FROM   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
          [#extracted]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
        GROUP BY
                 [REGCODE]
                ,[Q_Year]
                ,[Variable]
                ,[Value]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/******************************************************************************************************************************** Aggregated data by C/Y/Q/A ***/
)                                                                                                                                                         A_CYQA
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
  --IF OBJECT_ID (N'[forum_ResAnal].[dbo].[heading]', N'U') IS NOT NULL
  --DROP TABLE      [forum_ResAnal].[dbo].[heading]
  --SELECT * INTO   [forum_ResAnal].[dbo].[heading] FROM
  IF OBJECT_ID('tempdb..[#heading]') IS NOT NULL
  DROP TABLE            [#heading]
  SELECT * INTO         [#heading]  FROM
/***************************************************************************************************************************************************************/
(
/*** Headings and other static rows by table *******************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
   SELECT                                                                       /*** SELECT statement                                                        ***/
                [M]
              , [x]  = '[' + [M] + '] = STR(ISNULL(MAX([' + [M] + [F]         /*** elements arranged to be used as code                                      ***/
              , [v]  = '[' + [M] + ']'                                        /*** field name to be used as code                                             ***/
              , [s]  = SUBSTRING([M],2,2) +'|'+ RIGHT([M],4) +'|'+ LEFT([M],1)
              , [a]  = SUBSTRING([M],2,2)
              , [y]  =                          RIGHT([M],4)
              , [f]  =                                             LEFT([M],1)
              , [r]  = CASE
                       WHEN SUBSTRING([M],3,1) = '1' THEN  'Americas'
                       WHEN SUBSTRING([M],3,1) = '2' THEN  'Asia-Pacific'
                       WHEN SUBSTRING([M],3,1) = '3' THEN  'Europe'
                       WHEN SUBSTRING([M],3,1) = '4' THEN  'Middle East-North Africa'
                       WHEN SUBSTRING([M],3,1) = '5' THEN  'Sub-Saharan Africa'
                        END
              , [e]  = ''
              , [p]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) <  2011
                       THEN                         'MID-'
                       WHEN  LEFT([M], 1  )  = 'N'
                       AND  RIGHT([M], 4  ) >= 2011
                       THEN                         'Dec. 31,'
                       ELSE RIGHT([M], 4  )
                        END
              , [n]  = CASE
                       WHEN  LEFT([M], 1  )  = 'N'
                       THEN                         'NUMBER OF'
                       WHEN  LEFT([M], 1  )  = 'P'
                       THEN                         '  %  OF  '
                        END
              , [c]  = 'COUNTRIES'
              , [t]  = CASE
                       WHEN       LEFT([M], 1  )   = 'P'
                       THEN                               '100 %'
                       WHEN  SUBSTRING([M], 3,1)   = '1'
                       THEN                               '35'
                       WHEN  SUBSTRING([M], 3,1)   = '2'
                       THEN                               '50'
                       WHEN  SUBSTRING([M], 3,1)   = '3'
                       THEN                               '45'
                       WHEN  SUBSTRING([M], 3,1)   = '4'
                       THEN                               '20'
                       WHEN  SUBSTRING([M], 3,1)   = '5'
                       AND       RIGHT([M], 4  )  <  2011
                       THEN                               '47'
                       WHEN  SUBSTRING([M], 3,1)   = '5'
                       AND       RIGHT([M], 4  )  >= 2011
                       THEN                               '48'
                        END
    FROM (                                                                      /*** from complex query, filters already included in it                      ***/
             SELECT                                                             /***                                                                         ***/
           DISTINCT [M] = [RYCNT]                                               /***                                                                         ***/
                  , [F] = ']),0),12,0)'                                         /***                                                                         ***/
               FROM                          [#A_CYQA]                          /***                                                                         ***/
           UNION                                                                /***                                                                         ***/
           ALL                                                                  /***                                                                         ***/
           SELECT                                                               /***                                                                         ***/
           DISTINCT [M] = [RYPCT]                                               /***                                                                         ***/
                  , [F] = ']),0), 3,0)+''%'''                                   /***                                                                         ***/
               FROM                          [#A_CYQA]                          /***                                                                         ***/
                                                                           ) CQ /*** end and alias of complex query used to extract code                     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/******************************************************************************************************************* Headings and other static rows by table ***/
)                                                                                                                                                     myheadings
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
  IF OBJECT_ID('tempdb..[#AWording]') IS NOT NULL
  DROP TABLE            [#AWording]
  SELECT * INTO         [#AWording]  FROM
/***************************************************************************************************************************************************************/
(
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT
          DISTINCT
          [Variable]
         ,[Q_Wording]
         ,[Value]
         ,[A_Wording]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  FROM    [#extracted]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
)                                                                                                                                                       AWording
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
  IF OBJECT_ID('tempdb..[#QWording]') IS NOT NULL
  DROP TABLE            [#QWording]
  SELECT * INTO         [#QWording]  FROM
/***************************************************************************************************************************************************************/
(
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT
          DISTINCT
          [Variable]
         ,[Q_Wording]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  FROM    #AWording
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
)                                                                                                                                                       QWording
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
declare @ALLCODE1 nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE1 = 
/***************************************************************************************************************************************************************/
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S01 *****************************************************************************************************************************************************/
N'
IF OBJECT_ID (N''[forum_ResAnal]..[vr_temp_BodyMain]'', N''U'') IS NOT NULL
DROP TABLE       [forum_ResAnal]..[vr_temp_BodyMain]
SELECT * INTO    [forum_ResAnal]..[vr_temp_BodyMain]
FROM  (
'
/*** < S01 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S02 *****************************************************************************************************************************************************/
N'
SELECT
          M.Variable
        , M.Value
        ,   Wording   =  L.A_Wording
'
/*** < S02 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'
FROM
        #AWording                                                             L
INNER
JOIN
     (SELECT                                                                     /*** beginning of subquery M                                                ***/
          Variable
        , Value
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [x] FROM [#heading] ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
N'
FROM
/*** Aggregated data by C/Y/Q/A ********************************************************************************************************************************/
                [#A_CYQA]
/******************************************************************************************************************************** Aggregated data by C/Y/Q/A ***/
/*** pivoting percentage ***************************************************************************************************************************************/
  PIVOT   (       MAX([Percentage])
            FOR       [RYPCT]
            IN       (
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
/*** Begin stuffing function to remove the first comma in the list of fields to be retrieved (parenthesis not needed) ******************************************/
STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
/***************************************************************************************************************************************************************/
      (                                                                         /*** parenthesis to include query for the cell to be stuffed                 ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
   SELECT DISTINCT                                                              /*** SELECT statement                                                        ***/
          ', [' + [RYPCT] + ']'                                                 /*** comma delimiter and brackets enclosing (field) elements to be listed    ***/
    FROM  [#A_CYQA]                                                             /*** from CTE ; no filters needed                                            ***/
         ORDER BY                                                               /*** sorting order: alphabetically                                           ***/
          ', [' + [RYPCT] + ']'                                                 /*** using comma & brackets enclosing elements to be listed                  ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
                                                                              ) /*** parenthesis to include query for the cell to be stuffed                 ***/
/***************************************************************************************************************************************************************/
, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S04 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'                       )   )   AS   pivt1       '                             /*** end of listing of variables & pivoting percentage                       ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'
/*** pivoting percentage ***************************************************************************************************************************************/
  PIVOT   (       MAX([Number])
            FOR       [RYCNT]
            IN       (
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S06 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
/*** Begin stuffing function to remove the first comma in the list of fields to be retrieved (parenthesis not needed) ******************************************/
STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
/***************************************************************************************************************************************************************/
(                                                                               /*** parenthesis to include query for the cell to be stuffed                 ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
   SELECT DISTINCT                                                              /*** SELECT statement                                                        ***/
          ', [' + [RYCNT] + ']'                                                 /*** comma delimiter and brackets enclosing (field) elements to be listed    ***/
    FROM  [#A_CYQA]                                                             /*** from CTE ; no filters needed                                            ***/
         ORDER BY                                                               /*** sorting order: alphabetically                                           ***/
          ', [' + [RYCNT] + ']'                                                 /*** using comma & brackets enclosing elements to be listed                  ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S06 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S07 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'                       )   )   AS   pivt2       '                             /*** end of listing of variables & pivoting percentage                       ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S07 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'  GROUP BY Variable, Value  '                                                  /*** Groupping (aggregation) statement                                      ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'                                                                         )  M' /*** end of subquery M                                                      ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  N'
     ON   M.Variable = L.Variable
    AND   M.Value    = L.Value
                                                                           )  Q' /*** end of main enclosed query                                             ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE1                                    /***        display the currently stored code (to be executed)                           ***/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
    EXEC              (@ALLCODE1)                                   /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
declare @ALLCODE2 nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE2 = 
/***************************************************************************************************************************************************************/
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S01 *****************************************************************************************************************************************************/
N'
IF OBJECT_ID (N''[forum_ResAnal]..[vr_temp_BodyTitle]'', N''U'') IS NOT NULL
DROP TABLE       [forum_ResAnal]..[vr_temp_BodyTitle]
SELECT * INTO    [forum_ResAnal]..[vr_temp_BodyTitle]
FROM  (
'
/*** < S01 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S02 *****************************************************************************************************************************************************/
N'
SELECT
            Variable
        ,   Value
        ,   Wording   =  Q_Wording
'
/*** < S02 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'
FROM
        #QWording                                                             Q
CROSS
JOIN
     ( SELECT *
         FROM (  SELECT  [Value] = -6.00
                        ,[e]
                        ,[M]
                   FROM  [#heading]       )   e
       PIVOT (MAX([e]) FOR [M] IN (
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'                                                     ) ) tpivoted )  F )  x ' /*** end of query                                                            ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE2                                    /***        display the currently stored code (to be executed)                           ***/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
    EXEC              (@ALLCODE2)                                   /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
declare @ALLCODE3 nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE3 = 
/***************************************************************************************************************************************************************/
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S01 *****************************************************************************************************************************************************/
N'
IF OBJECT_ID (N''[forum_ResAnal]..[vr_temp_BodyXRows]'', N''U'') IS NOT NULL
DROP TABLE       [forum_ResAnal]..[vr_temp_BodyXRows]
SELECT * INTO    [forum_ResAnal]..[vr_temp_BodyXRows]
FROM  (
'
/*** < S01 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S02 *****************************************************************************************************************************************************/
N'
SELECT
            Variable
        ,   Value
        ,   Wording   =  ''''
'
/*** < S02 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'
FROM
        #QWording                                                             Q
CROSS
JOIN
     (
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04a ****************************************************************************************************************************************************/
N'
       SELECT *
         FROM (SELECT  [Value] =  -5.00, [r]     ,[M] FROM [#heading]) H 
                PIVOT               (MAX([r]) FOR [M] IN (
'
+
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
+
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*** < S04a ****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04b ****************************************************************************************************************************************************/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -4.00, [p]     ,[M] FROM [#heading]) H 
                PIVOT               (MAX([p]) FOR [M] IN (
'
+
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
+
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*** < S04b ****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04c ****************************************************************************************************************************************************/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -3.00, [n]     ,[M] FROM [#heading]) H 
                PIVOT               (MAX([n]) FOR [M] IN (
'
+
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
+
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*** < S04c ****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04d ****************************************************************************************************************************************************/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] =  -2.00, [c]     ,[M] FROM [#heading]) H 
                PIVOT               (MAX([c]) FOR [M] IN (
'
+
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
+
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*** < S04d ****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S04e ****************************************************************************************************************************************************/
N'
       UNION ALL
       SELECT *
         FROM (SELECT  [Value] = 200.00, [t]     ,[M] FROM [#heading]) H 
                PIVOT               (MAX([t]) FOR [M] IN (
'
+
STUFF((SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')),1, 1,'') /*** STUFFED region/year headings nested in XML string cell in parentesis    ***/
+
N'                                                     ) ) tpivoted '           /*** end of subquery                                                         ***/
/*** < S04e ****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S05 *****************************************************************************************************************************************************/
N'                                                                  )  F )  x ' /*** end of query                                                            ***/
/*** < S05 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE3                                    /***        display the currently stored code (to be executed)                           ***/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
    EXEC              (@ALLCODE3)                                   /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***************************************************************************************************************************************************************/
/***     >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>    >>>     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S01 *****************************************************************************************************************************************************/
N'
/***************************************************************************************************************************************************************/
IF OBJECT_ID (N''[forum_ResAnal].[dbo].[vrx_w_03_Basic_TopLines_by_Region_00]'', N''U'') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vrx_w_03_Basic_TopLines_by_Region_00]
SELECT * INTO    [forum_ResAnal].[dbo].[vrx_w_03_Basic_TopLines_by_Region_00]
FROM  (
'
/*** < S01 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S02 *****************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
N'
SELECT
          V5Row
          =  ROW_NUMBER()
             OVER(ORDER BY
                             [Variable]
                           , [Value]
                                          )
        , Variable
        , Value
        , Wording
'
/*** < S02 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 (   SELECT ',' + [v] FROM [#heading] ORDER BY [s] for xml path('')   )         /*** SELECT region/year headings nested in XML string cell in parentesis     ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/*** > S03 *****************************************************************************************************************************************************/
N'
FROM
     ( SELECT * FROM [forum_ResAnal]..[vr_temp_BodyMain]
       UNION
       ALL
       SELECT * FROM [forum_ResAnal]..[vr_temp_BodyTitle]
       UNION
       ALL
       SELECT * FROM [forum_ResAnal]..[vr_temp_BodyXRows]  )  U
                                                                    ) X
'
/*** < S03 *****************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
/***************************************************************************************************************************************************************/
--	EXEC dbo.LongPrint @ALLCODE                                     /***        display the currently stored code (to be executed)                           ***/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
    EXEC              (@ALLCODE)                                    /***        execute the code that has been stored as text                                ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
IF OBJECT_ID (N'[forum_ResAnal]..[vr_temp_BodyMain]', N'U') IS NOT NULL
DROP TABLE      [forum_ResAnal]..[vr_temp_BodyMain]
IF OBJECT_ID (N'[forum_ResAnal]..[vr_temp_BodyTitle]', N'U') IS NOT NULL
DROP TABLE      [forum_ResAnal]..[vr_temp_BodyTitle]
IF OBJECT_ID (N'[forum_ResAnal]..[vr_temp_BodyXRows]', N'U') IS NOT NULL
DROP TABLE      [forum_ResAnal]..[vr_temp_BodyXRows]
/***************************************************************************************************************************************************************/
/*           - + -           - + -           - + -           - + -          - - + - -          - + -           - + -           - + -           - + -           */
/***************************************************************************************************************************************************************/
