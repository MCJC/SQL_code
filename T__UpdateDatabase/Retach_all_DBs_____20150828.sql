declare @cmdstring varchar(1000)

set @cmdstring = 'copy \\myServer\Admin\temp\testtemp.txt \\myServer\Admin\temp\Copytesttemp.txt'
exec master..xp_cmdshell @cmdstring 



/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the lookup table [forum_ResAnal].[dbo].[vr_02w_W_by_Ctry&Year]                                  <<<<<     ***/
/***             This table only includes numeric values aggregated by country/religion & year (does not include descriptive wordings).                      ***/
/***                                                                                                                                                         ***/
/***                                                      > > >     lookup tables work faster     < < <                                                      ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE [forum_ResAnal]
GO
/***************************************************************************************************************************************************************/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/***************************************************************************************************************************************************************/
declare @ALLCODE nvarchar(max)
/***************************************************************************************************************************************************************/
set     @ALLCODE = 
/***************************************************************************************************************************************************************/
N'
IF OBJECT_ID (N''[forum_ResAnal].[dbo].[vr_02w_W_by_Ctry&Year]'', N''U'') IS NOT NULL
DROP TABLE       [forum_ResAnal].[dbo].[vr_02w_W_by_Ctry&Year]
SELECT * INTO    [forum_ResAnal].[dbo].[vr_02w_W_by_Ctry&Year]
FROM
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  Long NPR aggregated by country and null values recoded as zero in known count variables  *****************************************************************/
N'
(
/***************************************************************************************************************************************************************/
SELECT 
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
'
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE IS alias for the recoded field           ***/
          DISTINCT                                                              /*** should be distinct to include once each variable name                   ***/
          CASE                                                                  /*** CASE to select two different wordings...                                ***/
          WHEN        [QA_std]     LIKE 'GRI_19_[b-f]'                          /*** when count variables GRI_19                                             ***/
                 OR   [QA_std]     LIKE 'SHI_01_[b-f]'                          /*** or count variables SHI_01                                               ***/
                 OR   [QA_std]     LIKE 'SHI_04_[b-f]'                          /*** or count variables SHI_04                                               ***/
                 OR   [QA_std]     LIKE 'SHI_05_[c-f]'                          /*** or count variables SHI_05                                               ***/
          THEN ', ' + [QA_std] + ' = ISNULL(' + [QA_std] + ', 0)'               /*** then comma delimiter concatenated to recoded field including all QA Std ***/
          ELSE ', ' + [QA_std]                                                  /*** else comma delimiter concatenated to such field (StdVarName)            ***/
          END                                                                   /*** end of CASE section, used to include two different wordings             ***/
    FROM                                                                        /*** from...                                                                 ***/
          [vr_01w_DB_Long_NoAggregated]                                         /*** name of the table which includes all field (var) names as rows          ***/
                                                                                /*** NO FILTERS needed                                                       ***/
         ORDER BY                                                               /*** sorting order using exact final field, including:                       ***/
          CASE                                                                  /*** CASE to sort using two different wordings...                            ***/
          WHEN        [QA_std]     LIKE 'GRI_19_[b-f]'                          /*** when count variables GRI_19                                             ***/
                 OR   [QA_std]     LIKE 'SHI_01_[b-f]'                          /*** or count variables SHI_01                                               ***/
                 OR   [QA_std]     LIKE 'SHI_04_[b-f]'                          /*** or count variables SHI_04                                               ***/
                 OR   [QA_std]     LIKE 'SHI_05_[c-f]'                          /*** or count variables SHI_05                                               ***/
          THEN ', ' + [QA_std] + ' = ISNULL(' + [QA_std] + ', 0)'               /*** then comma delimiter concatenated to recoded field including all QA Std ***/
          ELSE ', ' + [QA_std]                                                  /*** else comma delimiter concatenated to such field (StdVarName)            ***/
          END                                                                   /*** end of CASE, used to sort list of fields by two different wordings      ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  all this from...  ****************************************************************************************************************************************/
N'
FROM ( 
'
/****************************************************************************************************************************************  all this from...  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***  Long NPR aggregated by country (& religion due to variable names)  ***************************************************************************************/
N'
SELECT 
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[QA_std]
      ,[Answer_value]      = SUM([Answer_value])
  FROM
            [vr_01w_DB_Long_NoAggregated]                                        /*** Basic Data: Long NPR                                                   ***/
GROUP BY
       [Nation_fk]
      ,[Region5]
      ,[Region6]
      ,[Ctry_EditorialName]
      ,[Question_Year]
      ,[QA_std]
)                                                                                                                                                      AS   lnpr
'
/***************************************************************************************  Long NPR aggregated by country (& religion due to variable names)  ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
N'
PIVOT
(
  MAX([Answer_value])
  FOR [QA_std]
                   in (
'
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- select                                                                       /*** SELECT statement to TEST stuffing procedure...                          ***/
/*** Begin stuffing function to remove the first comma in the list of fields to be retrieved (parenthesis not needed) ******************************************/
STUFF(                                                                          /*** begining of the "stuff: function                                        ***/
/***************************************************************************************************************************************************************/
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE IS alias for the recoded field           ***/
          DISTINCT                                                              /*** should be distinct to include once each variable name                   ***/
          ', '                                                                  /*** comma delimiter                                                         ***/
        +                                                                       /*** concatenated to...                                                      ***/
          [QA_std]                                                              /*** Fiels including all Q Abb Std (StdVarName)                              ***/
    FROM                                                                        /*** from...                                                                 ***/
          [vr_01w_DB_Long_NoAggregated]                                          /*** name of the table which includes all field (var) names as rows          ***/
                                                                                /*** NO FILTERS needed                                                       ***/
         ORDER BY                                                               /*** sorting order using exact final field, including:                       ***/
          ', '                                                                  /*** comma delimiter                                  -> as part of sorting  ***/
        +                                                                       /*** concatenated to...                               -> as part of sorting  ***/
          [QA_std]                                                              /*** Fiels including all Q Abb Std (StdVarName)       -> as part of sorting  ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
, 1, 1, '')                                                                     /*** from STUFF: from position 1, change 1 character into ''                 ***/
/****************************************************************************************************************************** stuffing function ends here! ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
N'
)                                                                               /*** end of listing of variables                                             ***/
 )                                                                                                                                                     AS   pivt
  )                                                                                                                                                    AS   berc
'
/***************************************************************************************************************************************************************/
/*** This is a way for checking the SQL statement that has been stored as a string variable ********************************************************************/
--  SELECT @ALLCODE
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
/***************************************************************************************************************************************************************/
/*** The complete SQL statement stored as a string variable is executed as a character string ******************************************************************/
/***************************************************************************************************************************************************************/
EXEC  (@ALLCODE)
/***************************************************************************************************************************************************************/




/* ++> create_vi21_vi_QMetadata_Wording&Note&Source.sql <++ */
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     >>>>>   This is the script used to create the table [forum_ResAnal]..[vi_QMetadata_Wording&Note&Source]                                   <<<<<     ***/
/***             NOTE:  This is a fixed table hosted at the default place for auxiliary fixed tables: [forum_ResAnal]                                        ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     S T E P    B Y    S T E P :     Step   1   o f   2                                                                                                  ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
USE
                [forum_ResAnal]
GO
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
IF OBJECT_ID (N'[forum_ResAnal].[dbo].[vi_QMetadata_Wording&Note&Source]', N'U') IS NOT NULL
DROP   TABLE    [forum_ResAnal].[dbo].[vi_QMetadata_Wording&Note&Source]         -- drop table if existent
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
IF OBJECT_ID('tempdb..#qdata'    )  IS NOT NULL
DROP TABLE            #qdata
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
GO
/***************************************************************************************************************************************************************/
/***  Selection of displayable questions and sources  **********************************************************************************************************/
/***
     MAKE IT CTE!!!!!!
     IN FOLLOWING SECTION CODE YEARS 07-13 OR MORE USING SELECT-CODE NOT HARD-CODE
     As mentioned in Script 10:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
        -  Some Restriction questions labeled as [StdQ]..[Display] = 0 should be used
           Other questions labeled for display but not linked to NoStd question
                       GRI
           -   GRI_scaled
           -   GRI_20_03_SUMMARY
           -   GRI_20_SUMMARY
                       SHI
           -   SHI_scaled
                       SHI_01_summary_b
some linked as
Question_pk	Question_abbreviation	Question_wording	Question_Year	Notes	Data_source_fk	Question_Std_fk
650	NULL	NULL	NULL	question for aggregated values	28	168


                       and corresponding to displayable years
           (most do not do not have no-std version; GRI_20_SUMMARY & GRI_20_03_SUMMARY do for Years < 2012
                       --- previously: 'GRI_20_03_SUMMARY' AS 'GRI_20_top'
                                       'GRI_20_SUMMARY'    AS 'GRI_20_03_top'
                                       'SHI_01_summary_b'  AS 'SHI_01'
                       --  'SHI_01_summary_a'   -- removed, cannot be tabulated as displayed in GRF website (2014.06.18.jceo)
                       --  'GFI'                -- removed, it is not currently displayed in GRF website (2014.06.18.jceo)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
        -  Survey      questions labeled as [StdQ]..[Display] = 1
                       and approved to be displayed... 
                             => currently all international survey questions work that way,
                                but in the future we will need:
                                            [NoSQ]..[Display] = 1
                                therefore such a field should be created
                                since all consistency should be checked, we shouls probably develop
                                tahat at the level of the ERM routines:
                                checking table/or/view by table/or/view after each update
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                                                                                             ***/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT 
       [Question_std_fk]
      ,[Question_abbreviation_std]
      ,[Question_wording]
      ,[Question_wording_std]
      ,[Notes]
      ,[Source_Display_Name]
      ,[Question_Year]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
  INTO
      [#qdata]
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
  FROM 
      [forum].[dbo].[Pew_Question]
  JOIN
      [forum].[dbo].[Pew_Data_Source]
   ON
       [Data_source_fk]
      =[Data_source_pk]
WHERE
       [Display]           = 1    -- this filter was added on Jul252014 to avoid pulling unnecessary data
  AND
       [Data_source_name] IN (     -- this filter was added on Mar182015 to avoid pulling unwanted sets of questions
                                 'Global Restriction on Religion Study'
                               , 'Islam & Christianity in Sub-Sharan Africa'
                               , 'Global Survey of Islam'
                             )      
----and 
----      [Question_wording_std] like '%penalty%'
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
UNION ALL
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------*/
SELECT 
       DISTINCT
       [Question_std_fk]             = [StdQ_fk]
      ,[Question_abbreviation_std]   = [QA_std]
      ,[Question_wording]            = NULL
      ,[Question_wording_std]        = [QW_std]
      ,[Notes]                       = 'question for aggregated values'
      ,[Source_Display_Name]         = 'Global Restrictions on Religion studies'   
      ,[Question_Year]               = NULL
  FROM [forum_ResAnal].[dbo].[vi_Both_Svy&Rstr_Yr&Q&A_Displayable]
 WHERE [QA_std]                 IN (   'GRI_scaled'
                                     , 'GRI_20_03_SUMMARY'
                                     , 'GRI_20_SUMMARY'
                                     , 'SHI_scaled'         )
/**********************************************************************************************************  Selection of displayable questions and sources  ***/
/***************************************************************************************************************************************************************/
GO
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     S T E P    B Y    S T E P :     Step   2   o f   2                                                                                                  ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/
/*****                                                                                                   *******************************************************/
/*****          Code exemplifies and explains how to use variables listed in a SELECT statement          *******************************************************/
/*****                                                                                                   *******************************************************/
/***************************************************************************************************************************************************************/
-- Declare variable needed to store SQL code
  DECLARE                                 --  declare variable
          @MyCode                         --  variable name
                   VARCHAR(MAX)           --  data type of the variable
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Declare variable needed to store minimum year
  DECLARE                                 --  declare variable
          @MinYR                          --  variable name
                   VARCHAR(MAX)           --  data type of the variable
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
  SET     @MyCode   
          =
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
           N'SELECT '
         + CHAR(13)
         + N'       [Q_Std_fk]   =   [PK]     , [Q_Wording]  =               ISNULL(QW    , '''') '-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE ISN'T alias for the field                ***/
          ' + ISNULL(QW' + LTRIM(STR([Year])) + ', '''')'                       /***        concatenated year of interest                                    ***/
          FROM [forum].[dbo].[Pew_Display_by_Year]                              /***        from the table which includes years to be displayed              ***/
         WHERE [GRF_QMetadata] = 1                                              /*** FILTER: only years when question metadata shuld be displayed            ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'     , [Q_Notes]    =               ISNULL(NT    , '''') '-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE ISN'T alias for the field                ***/
          ' + ISNULL(NT' + LTRIM(STR([Year])) + ', '''')'                       /***        concatenated year of interest                                    ***/
          FROM [forum].[dbo].[Pew_Display_by_Year]                              /***        from the table which includes years to be displayed              ***/
         WHERE [GRF_QMetadata] = 1                                              /*** FILTER: only years when question metadata shuld be displayed            ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'     , [Q_Sources]  =               ISNULL(SS    , '''') '-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE ISN'T alias for the field                ***/
          ' + ISNULL(SS' + LTRIM(STR([Year])) + ', '''')'                       /***        concatenated year of interest                                    ***/
          FROM [forum].[dbo].[Pew_Display_by_Year]                              /***        from the table which includes years to be displayed              ***/
         WHERE [GRF_QMetadata] = 1                                              /*** FILTER: only years when question metadata shuld be displayed            ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
N'     , [Q_Years]    = SUBSTRING( (  ISNULL(YR    , '''') '-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
(                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
/*** Begin selection (into text, in a cell) of a comma delimited list of fields from a system view *************************************************************/
/***************************************************************************************************************************************************************/
    SELECT                                                                      /*** SELECT statement (notice THERE ISN'T alias for the field                ***/
          ' + ISNULL(YR' + LTRIM(STR([Year])) + ', '''')'                       /***        concatenated year of interest                                    ***/
          FROM [forum].[dbo].[Pew_Display_by_Year]                              /***        from the table which includes years to be displayed              ***/
         WHERE [GRF_QMetadata] = 1                                              /*** FILTER: only years when question metadata shuld be displayed            ***/
         for xml path('')                                                       /*** Modifies the selected rowset nesting all cells into an XML string cell  ***/
/***************************************************************************************************************************************************************/
/*** End of the selection (into text, in a cell) of a comma delimited list of fields ***************************************************************************/
/***************************************************************************************************************************************************************/
)                                                                                /*** parenthesis to include query for the cell to be stuffed                ***/
/***************************************************************************************************************************************************************/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
           N' ), 3, 100)     '         + CHAR(13)
         + N'INTO [forum_ResAnal].[dbo].[vi_QMetadata_Wording&Note&Source]'          + CHAR(13)
         + N'FROM '          + CHAR(13)
         + N' ( SELECT DISTINCT                  [PK] = [Question_Std_fk]                , [QW] = CASE WHEN [Question_Year] IS NULL                              THEN [Question_wording_std]                              END                , [NT] = CASE WHEN [Question_Year] IS NULL                              THEN ''(Answers values are aggregated from other answers)''                              END                , [SS] = CASE WHEN [Question_Year] IS NULL                              THEN [Source_Display_Name]                              END                , [YR] = NULL '         + CHAR(13)
         + N'     FROM [#qdata]                           ) SET_A'
         + CHAR(13)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
-- print(@MyCode)
/***************************************************************************************************************************************************************/
-- Declare the variables needed for cursor to store data
  DECLARE                                 --  declare variable
          @YRID                           --  variable name
                   VARCHAR(MAX)           --  data type of the variable
-- Declare the Cursor MyCursor
   DECLARE                                -- declare the cursor
              MyCursor                    -- cursor name
                             CURSOR FOR   -- as a cursor to take values from
-- SELECT the data that will be represented by cursor
--    (i.e. "select query" to produce the table)
--    each row of the resuklting table will be stored in the cursor
--    then, from the cursor, the data will be stored in the corresponding variable(s)
    SELECT                                                                      /*** SELECT statement (notice THERE ISN'T alias for the field                ***/
            CAST([Year] AS VARCHAR(MAX))                                        /***        year of interest                                                 ***/
          FROM [forum].[dbo].[Pew_Display_by_Year]                              /***        from the table which includes years to be displayed              ***/
         WHERE [GRF_QMetadata] = 1                                              /*** FILTER: only years when question metadata shuld be displayed            ***/
/***************************************************************************************************************************************************************/
-- OPEN the cursor 
   OPEN                                   -- open
              MyCursor                    -- cursor name

	-- RETRIEVE the FIRST row from cursor & STORE it into the variable(s): 
	                    
	FETCH NEXT
	FROM     MyCursor INTO @YRID

	-- @@FETCH_STATUS returns the status of the last cursor FETCH statement issued against  
	-- any cursor currently opened by the connection. 
	--     @@FETCH_STATUS =  0 means The FETCH statement was successful. 
	--     @@FETCH_STATUS = -1 means The FETCH statement failed or the row was beyond the result set. 
	--     @@FETCH_STATUS = -2 means The row fetched is missing. 

			 WHILE  @@FETCH_STATUS = 0

  /***********************************************************************************************************/
	  -- BEGIN the procedures to be done using the values of each row of the cursor
					BEGIN

	  -- Procedures to be done
  -------------------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------
  SET    @MyCode   
         =
           @MyCode
         + CHAR(13)
         + N'FULL OUTER JOIN '
         + CHAR(13)
         + N' ( SELECT [Question_Std_fk]        AS  PK' +           @YRID
         + CHAR(13)
         + N'         ,  ''('                           +           @YRID
         + N': '''
         + CHAR(13)
         + N'          + [Question_wording]'
         + CHAR(13)
         + N'          + '')  '''
         + CHAR(13)
         + N'                                   AS  QW' +           @YRID
         + CHAR(13)
         + N'         ,                             NT' +           @YRID
         + CHAR(13)
         + N'          = CASE '
         + CHAR(13)
         + N'            WHEN [Notes] != '''' '
         + CHAR(13)
         + N'            THEN '
         + CHAR(13)
         + N'                    ''('                   +           @YRID
         + N': '''
         + CHAR(13)
         + N'                  + [Notes]'
         + CHAR(13)
         + N'                  + '')  '''
         + CHAR(13)
         + N'           END '
         + CHAR(13)
         + N'         ,  ''('                           +           @YRID
         + N': '''
         + CHAR(13)
         + N'          + [Source_Display_Name]'
         + CHAR(13)
         + N'          + '')  '''
         + CHAR(13)
         + N'                                   AS  SS' +           @YRID
         + CHAR(13)
         + N'         ,  '', '                          +           @YRID
         + N''''
         + CHAR(13)
         + N'                                   AS  YR' +           @YRID
         + CHAR(13)
         + N'     FROM [#qdata] '
         + CHAR(13)
         + N'    WHERE [Question_Year]           =    ' +           @YRID
         + CHAR(13)
         + N'                                             ) SET' +  @YRID
         + CHAR(13)
         + N'                      ON      PK   =   PK' +           @YRID
         + CHAR(13)
  -------------------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------
	  -- RETRIEVE the NEXT row from cursor & STORE it into the variable(s): 

						   FETCH NEXT                               -- retrieve the next row
								 FROM                               -- from cursor
										MyCursor                    -- cursor name
								 INTO                               -- store it into the variable(s)
									   @YRID                   --  variable name

	  -- END the procedures to be done using the values of each row of the cursor
					END
  /***********************************************************************************************************/

-- CLOSE the cursor 
   CLOSE                                  -- close
              MyCursor                    -- cursor name
/***************************************************************************************************************************************************************/
-- REMOVE the cursor reference and relase cursor from memory
-- (very Important )
DEALLOCATE                                -- remove reference and relase from memory
              MyCursor                    -- cursor name
/***************************************************************************************************************************************************************/
--		EXEC dbo.LongPrint @MyCode                                 /***        display the currently stored code (to be executed)                           ***/
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
                      exec(@MyCode)
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***************************************************************************************************************************************************************/
/***                                                                                                                                                         ***/
/***     E N D   O F   S T E P   2   o f   2                                                                                                                 ***/
/***                                                                                                                                                         ***/
/***************************************************************************************************************************************************************/


--/**************************************************************************************************************************/
--/*****                                              BackUp current Table                                              *****/
--/**************************************************************************************************************************/
--  DECLARE @CrDt    varchar( 8)
--  DECLARE                          --  declare variable
--          @TofI                    --  variable name
--                   varchar(50)     --  data type of the variable
--  SET     @CrDt = (CONVERT(VARCHAR(8),GETDATE(),112))
--/*------------------------------------------------------------------------------------------------------------------------*/
--EXEC ( ' SELECT *
--                INTO      [_bk_forum].[dbo].[vi_QMetadata_Wording&Note&Source_' + @CrDt + ']
--                FROM  [forum_ResAnal].[dbo].[vi_QMetadata_Wording&Note&Source]' )  -- 792 in Jul252014
--/*------------------------------------------------------------------------------------------------------------------------*/
--/**************************************************************************************************************************/
--/*****                                              BackUp current Table                                              *****/
--/**************************************************************************************************************************/
go







/***********************************************************************************************************************************************/
/***                                                                                                                                         ***/
/***     >>>>>   This is the script used to retach tables to upgraded databases in new engine                                      <<<<<     ***/
/***                                                                                                                                         ***/
/***********************************************************************************************************************************************/
USE [master]
GO
/***********************************************************************************************************************************************/


--																 --   DB:01    r0
--	create database  _Admin                                      --   DB:01    r1
--	on  (filename = 'C:\SQLD\data\_Admin.mdf')                   --   DB:01    r2
--	  , (filename = 'C:\SQLD\data\_Admin_log.LDF')               --   DB:01    r3
--	for attach;                                                  --   DB:01    r4
--	go                                                           --   DB:01    r5
--																 --   DB:01    r6
--																 --   DB:02    r0
--	create database  for_test                                    --   DB:02    r1
--	on  (filename = 'C:\SQLD\data\for_test.mdf')                 --   DB:02    r2
--	  , (filename = 'C:\SQLD\data\for_test_log.ldf')             --   DB:02    r3
--	for attach;                                                  --   DB:02    r4
--	go                                                           --   DB:02    r5
--																 --   DB:02    r6
--																 --   DB:03    r0
--	create database  for_x                                       --   DB:03    r1
--	on  (filename = 'C:\SQLD\data\for_x.mdf')                    --   DB:03    r2
--	  , (filename = 'C:\SQLD\data\for_x_log.LDF')                --   DB:03    r3
--	for attach;                                                  --   DB:03    r4
--	go                                                           --   DB:03    r5
--																 --   DB:03    r6
--																 --   DB:04    r0
--	create database  forum                                       --   DB:04    r1
--	on  (filename = 'C:\SQLD\data\forum.mdf')                    --   DB:04    r2
--	  , (filename = 'C:\SQLD\data\forum_log.ldf')                --   DB:04    r3
--	for attach;                                                  --   DB:04    r4
--	go                                                           --   DB:04    r5
--																 --   DB:04    r6
--																 --   DB:05    r0
--	create database  forum_ResAnal                               --   DB:05    r1
--	on  (filename = 'C:\SQLD\data\forum_ResAnal.mdf')            --   DB:05    r2
--	  , (filename = 'C:\SQLD\data\forum_ResAnal_log.ldf')        --   DB:05    r3
--	for attach;                                                  --   DB:05    r4
--	go                                                           --   DB:05    r5
--																 --   DB:05    r6
--																 --   DB:06    r0
--	create database  GRSHR                                       --   DB:06    r1
--	on  (filename = 'C:\SQLD\data\GRSHR.mdf')                    --   DB:06    r2
--	  , (filename = 'C:\SQLD\data\GRSHR_log.ldf')                --   DB:06    r3
--	for attach;                                                  --   DB:06    r4
--	go                                                           --   DB:06    r5
--																 --   DB:06    r6
--																 --   DB:07    r0
--	create database  GRSHR_admin                                 --   DB:07    r1
--	on  (filename = 'C:\SQLD\data\GRSHR_admin.mdf')              --   DB:07    r2
--	  , (filename = 'C:\SQLD\data\GRSHR_admin_log.ldf')          --   DB:07    r3
--	for attach;                                                  --   DB:07    r4
--	go                                                           --   DB:07    r5
--																 --   DB:07    r6
--																 --   DB:08    r0
--	create database  GRSHR_bk                                    --   DB:08    r1
--	on  (filename = 'C:\SQLD\data\GRSHR_bk.mdf')                 --   DB:08    r2
--	  , (filename = 'C:\SQLD\data\GRSHR_bk_log.LDF')             --   DB:08    r3
--	for attach;                                                  --   DB:08    r4
--	go                                                           --   DB:08    r5
--																 --   DB:08    r6
--																 --   DB:09    r0
--	create database  GRSHR2014                                   --   DB:09    r1
--	on  (filename = 'C:\SQLD\data\GRSHR2014.mdf')                --   DB:09    r2
--	  , (filename = 'C:\SQLD\data\GRSHR2014_log.ldf')            --   DB:09    r3
--	for attach;                                                  --   DB:09    r4
--	go                                                           --   DB:09    r5
--																 --   DB:09    r6
--																 --   DB:10    r0
--	create database  GRSHR2015                                   --   DB:10    r1
--	on  (filename = 'C:\SQLD\data\GRSHR2015.mdf')                --   DB:10    r2
--	  , (filename = 'C:\SQLD\data\GRSHR2015_log.ldf')            --   DB:10    r3
--	for attach;                                                  --   DB:10    r4
--	go                                                           --   DB:10    r5
--																 --   DB:10    r6
--																 --   DB:11    r0
--	create database  GRSHRcode                                   --   DB:11    r1
--	on  (filename = 'C:\SQLD\data\GRSHRcode.mdf')                --   DB:11    r2
--	  , (filename = 'C:\SQLD\data\GRSHRcode_log.LDF')            --   DB:11    r3
--	for attach;                                                  --   DB:11    r4
--	go                                                           --   DB:11    r5
--																 --   DB:11    r6
--																 --   DB:12    r0
--	create database  JProcoCopy                                  --   DB:12    r1
--	on  (filename = 'C:\SQLD\data\JProcoCopy.mdf')               --   DB:12    r2
--	  , (filename = 'C:\SQLD\data\JProcoCopy_log.LDF')           --   DB:12    r3
--	for attach;                                                  --   DB:12    r4
--	go                                                           --   DB:12    r5
--																 --   DB:12    r6
--																 --   DB:13    r0
--	create database  limesurvey                                  --   DB:13    r1
--	on  (filename = 'C:\SQLD\data\limesurvey.mdf')               --   DB:13    r2
--	  , (filename = 'C:\SQLD\data\limesurvey_log.ldf')           --   DB:13    r3
--	for attach;                                                  --   DB:13    r4
--	go                                                           --   DB:13    r5
--																 --   DB:13    r6
--																 --   DB:14    r0
--	create database  LoadRLS1cUS                                 --   DB:14    r1
--	on  (filename = 'C:\SQLD\data\LoadRLS1cUS.mdf')              --   DB:14    r2
--	  , (filename = 'C:\SQLD\data\LoadRLS1cUS_log.ldf')          --   DB:14    r3
--	for attach;                                                  --   DB:14    r4
--	go                                                           --   DB:14    r5
--																 --   DB:14    r6
--																 --   DB:15    r0
--	create database  LRLS2                                       --   DB:15    r1
--	on  (filename = 'C:\SQLD\data\LRLS2.mdf')                    --   DB:15    r2
--	  , (filename = 'C:\SQLD\data\LRLS2_log.ldf')                --   DB:15    r3
--	for attach;                                                  --   DB:15    r4
--	go                                                           --   DB:15    r5
--																 --   DB:15    r6
--																 --   DB:16    r0
--	create database  MyTest                                      --   DB:16    r1
--	on  (filename = 'C:\SQLD\data\MyTest.mdf')                   --   DB:16    r2
--	  , (filename = 'C:\SQLD\data\MyTest_log.ldf')               --   DB:16    r3
--	for attach;                                                  --   DB:16    r4
--	go                                                           --   DB:16    r5
--																 --   DB:16    r6
--																 --   DB:17    r0
--	create database  NCheck                                      --   DB:17    r1
--	on  (filename = 'C:\SQLD\data\NCheck.mdf')                   --   DB:17    r2
--	  , (filename = 'C:\SQLD\data\NCheck_log.ldf')               --   DB:17    r3
--	for attach;                                                  --   DB:17    r4
--	go                                                           --   DB:17    r5
--																 --   DB:17    r6
--																 --   DB:18    r0
--	create database  PREC                                        --   DB:18    r1
--	on  (filename = 'C:\SQLD\data\PREC.mdf')                     --   DB:18    r2
--	  , (filename = 'C:\SQLD\data\PREC_log.ldf')                 --   DB:18    r3
--	for attach;                                                  --   DB:18    r4
--	go                                                           --   DB:18    r5
--																 --   DB:18    r6
--																 --   DB:19    r0
--	create database  PRGI                                        --   DB:19    r1
--	on  (filename = 'C:\SQLD\data\PRGI.mdf')                     --   DB:19    r2
--	  , (filename = 'C:\SQLD\data\PRGI_log.LDF')                 --   DB:19    r3
--	for attach;                                                  --   DB:19    r4
--	go                                                           --   DB:19    r5
--																 --   DB:19    r6
--																 --   DB:20    r0
--	create database  ReportServer                                --   DB:20    r1
--	on  (filename = 'C:\SQLD\data\ReportServer.mdf')             --   DB:20    r2
--	  , (filename = 'C:\SQLD\data\ReportServer_log.ldf')         --   DB:20    r3
--	for attach;                                                  --   DB:20    r4
--	go                                                           --   DB:20    r5
--																 --   DB:20    r6
--																 --   DB:21    r0
--	create database  ReportServerTempDB                          --   DB:21    r1
--	on  (filename = 'C:\SQLD\data\ReportServerTempDB.mdf')       --   DB:21    r2
--	  , (filename = 'C:\SQLD\data\ReportServerTempDB_log.ldf')   --   DB:21    r3
--	for attach;                                                  --   DB:21    r4
--	go                                                           --   DB:21    r5
--																 --   DB:21    r6
--																 --   DB:22    r0
--	create database  RHRNK                                       --   DB:22    r1
--	on  (filename = 'C:\SQLD\data\RHRNK.mdf')                    --   DB:22    r2
--	  , (filename = 'C:\SQLD\data\RHRNK_log.LDF')                --   DB:22    r3
--	for attach;                                                  --   DB:22    r4
--	go                                                           --   DB:22    r5
--																 --   DB:22    r6
--																 --   DB:23    r0
--	create database  stdaq                                       --   DB:23    r1
--	on  (filename = 'C:\SQLD\data\stdaq.mdf')                    --   DB:23    r2
--	  , (filename = 'C:\SQLD\data\stdaq_log.ldf')                --   DB:23    r3
--	for attach;                                                  --   DB:23    r4
--	go                                                           --   DB:23    r5
--																 --   DB:23    r6
--																 --   DB:24    r0
--	create database  TranslatQs                                  --   DB:24    r1
--	on  (filename = 'C:\SQLD\data\TranslatQs.mdf')               --   DB:24    r2
--	  , (filename = 'C:\SQLD\data\TranslatQs_log.ldf')           --   DB:24    r3
--	for attach;                                                  --   DB:24    r4
--	go                                                           --   DB:24    r5
--																 --   DB:24    r6
--																 --   DB:25    r0
--	create database  x_DataLoaded                                --   DB:25    r1
--	on  (filename = 'C:\SQLD\data\x_DataLoaded.mdf')             --   DB:25    r2
--	  , (filename = 'C:\SQLD\data\x_DataLoaded_log.ldf')         --   DB:25    r3
--	for attach;                                                  --   DB:25    r4
--	go                                                           --   DB:25    r5
--																 --   DB:25    r6
